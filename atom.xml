<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fred&#39;s Blog 📒</title>
  
  <subtitle>Quick notes</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.fanfq.com/"/>
  <updated>2020-11-19T06:55:39.259Z</updated>
  <id>https://blog.fanfq.com/</id>
  
  <author>
    <name>Fred范方青</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>似乎应该调整一下工作流，让时间更有效率</title>
    <link href="https://blog.fanfq.com/blog/%E4%BC%BC%E4%B9%8E%E5%BA%94%E8%AF%A5%E8%B0%83%E6%95%B4%E4%B8%80%E4%B8%8B%E5%B7%A5%E4%BD%9C%E6%B5%81%EF%BC%8C%E8%AE%A9%E6%97%B6%E9%97%B4%E6%9B%B4%E6%9C%89%E6%95%88%E7%8E%87.html"/>
    <id>https://blog.fanfq.com/blog/似乎应该调整一下工作流，让时间更有效率.html</id>
    <published>2020-11-16T03:58:57.000Z</published>
    <updated>2020-11-19T06:55:39.259Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>原本我以为我可以在周末的时间写出稿件，但实践证明这个太难了，我计算了一下仅仅周六上午半天的时间我给小朋友擦屁股累积超过10次以上，更多是中途的捣乱，姐姐有点粘我总是习惯性的试图在我工作的过程中坐到我的腿上，和我一起看着电脑屏幕，我和妻子都一致的观念在我们的家庭教育中尽可能的让小朋友减少对显示器的依赖。所以此时我不得不放下手头上的工作去陪伴她们。</p><p>我们家是绝对杜绝小朋友玩手机，平板电脑的，即便是电视每周只可以限制性的看一个小时，而我现在逐步的下载一些优质的动画电影陪伴她们一起收看。妹妹更喜欢“天猫精灵”因为更方便通过语音交互的方式切换她想收听的内容，常常早晨起来她独自一人坐在客厅听着天猫精灵里播放出来的故事。而姐姐视乎缺乏耐心基本不会长时间做在那里收听节目，即便是看电视她也会因为其他的事情中断她的观看兴趣。</p><p>这两人的性格，差别太大了。</p><p>所以，我可能要尝试调整一下我的工作流，让时间更加的效率。周末的时间更多的是陪伴小朋友，见证他们成长更多的是陪伴。实际上养娃的过程中琐碎的事情特别多，每当看到她们睡着的样子就特别的温馨。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="blog" scheme="https://blog.fanfq.com/categories/blog/"/>
    
    
      <category term="blog" scheme="https://blog.fanfq.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>花了两天的时间终于把Podcast发布站搭建好了</title>
    <link href="https://blog.fanfq.com/podcast/%E8%8A%B1%E4%BA%86%E4%B8%A4%E5%A4%A9%E7%9A%84%E6%97%B6%E9%97%B4%E7%BB%88%E4%BA%8E%E6%8A%8APodcast%E5%8F%91%E5%B8%83%E7%AB%99%E6%90%AD%E5%BB%BA%E5%A5%BD%E4%BA%86.html"/>
    <id>https://blog.fanfq.com/podcast/花了两天的时间终于把Podcast发布站搭建好了.html</id>
    <published>2020-11-04T08:25:28.000Z</published>
    <updated>2020-11-19T07:18:36.304Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这篇文章主要是要将的我工作流给记录下来，以免以后时间长了忘记了。</p><p><a href="http://fm.fanfq.com" target="_blank" rel="noopener">http://fm.fanfq.com</a> 这个站实际上是我的podcast发布站，采用<code>hexo</code>+<code>next主题</code>+<code>podcasts插件</code>,放在<code>github</code>上托管，mp3等资源文件放在<a href="!https://portal.qiniu.com/signup?code=1h449nnsixj6a">七牛CDN</a>上托管。</p><p>实际上没有什么，主要是说下这个podcasts插件并不好用，我自己根据实际需求做了修改，以及增加了一个脚本获取mp3文件的数据。</p><p>podcasts插件主要是为了生成符合apple podcast rss feed 文件，貌似国外的主流的都是以rss订阅的方式发布的，这很好，不需要作者每个平台手动的发布，我这里的发布站也是为了解决这个问题。</p><p>有关podcasts插件修改内容看这个链接：(这要比较重要，一定要验证成功才有用)<br><a href="https://github.com/fanfq/hexo-generator-podcasts" target="_blank" rel="noopener">https://github.com/fanfq/hexo-generator-podcasts</a></p><p>还写了python脚本为了获取mp3的参数：<br><a href="https://github.com/fanfq/python-learning/blob/master/src/util/file/mp3_file_rename.py" target="_blank" rel="noopener">https://github.com/fanfq/python-learning/blob/master/src/util/file/mp3_file_rename.py</a></p><p><code>mp3_file_name.py</code>这个脚本，目的是为了重命名文件。如下所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">用于podcast音频文件整理</span><br><span class="line">源文件：003.mp3</span><br><span class="line">重命名后的文件：fm003_8776581_2192.mp3</span><br><span class="line">文件命名规范：fm|003|_length_duration</span><br><span class="line">prefix:文件前缀</span><br><span class="line">003：文件原名</span><br><span class="line">length：文件体积单位byte</span><br><span class="line">duration：文件播放时长单位s</span><br></pre></td></tr></table></figure><p>然后就是写文章了，目前这个文章的结构是需要手动维护的，文章结构示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &quot;#4.整装待发扬帆起航，拒绝消费主义&quot;  #文章标题</span><br><span class="line">category: podcast #固定值</span><br><span class="line">media: https://dl.fanfq.com/fm.fanfq.com/fm004_11922309_496.mp3 #固定值，建议放CDN </span><br><span class="line">image: https://dl.fanfq.com/fm.fanfq.com/fred_1024x1024_fm.jpg   #固定值，建议放CDN </span><br><span class="line">duration: 496  #mp3文件播放时长，这里单位是秒</span><br><span class="line">type: audio/mpeg #固定值</span><br><span class="line">length: 11922309  #mp3文件的字节数，右键文件查看所占磁盘空间</span><br><span class="line">layout: podcast  #固定值</span><br><span class="line">date: 2020-11-03 21:21:57 #创建时间</span><br><span class="line">tags: [播客,消费主义] #文章标签</span><br><span class="line">urlname: vol4 #比如我这里最终文章的链接是 https://fm.fanfq.com/vol4.html</span><br><span class="line">description: 轻奢，小资，精致，这些词是不是听起来有点耳熟?在我看来这些词都是消费主义的簇拥者自己创造出来的文化，通过这种方式给消费者洗脑最终促使消费者买单。 #这个描述，为了填充feed用而不是正文</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">文章正文...</span><br></pre></td></tr></table></figure><p>编辑好后直接发布到github上就可以了，然后等苹果的服务器自动同步。</p><h2 id="总结一下的，流程是"><a href="#总结一下的，流程是" class="headerlink" title="总结一下的，流程是"></a>总结一下的，流程是</h2><p>1.编辑好的mp3文件发到mp3目录下<br>2.执行mp3目录下的 <code>mp3_file_name.py</code> 脚本，自动重命名以及上传到CDN<br>4.创建新的文档 <code>hexo new post NAME</code><br>5.编辑 <code>NAME.md</code> 文件信息<br>6.<code>hexo s</code> 本地预览一下，看是否都正常，只要mp3能正常播放那问题不大<br>7.<code>hexo clean</code>, <code>hexo g</code>,<code>hexo deploy</code> 全套。</p><span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="https://cdn.fanfq.com/picgo/20201119151421.png?imageslim" class="full-image" alt="工作流"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://blog.fanfq.com/categories/podcast/"/>
    
    
      <category term="架构" scheme="https://blog.fanfq.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="工作流" scheme="https://blog.fanfq.com/tags/%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    
      <category term="podcast" scheme="https://blog.fanfq.com/tags/podcast/"/>
    
  </entry>
  
  <entry>
    <title>网络游戏通讯(WebSocket/Socket)数据加密最佳实践</title>
    <link href="https://blog.fanfq.com/%E6%9E%B6%E6%9E%84/websocket_network_encryption_security_protocol_the_best_practices.html"/>
    <id>https://blog.fanfq.com/架构/websocket_network_encryption_security_protocol_the_best_practices.html</id>
    <published>2020-08-04T10:12:50.000Z</published>
    <updated>2020-09-08T02:47:17.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话:"></a>写在前面的话:</h3><p>之前一篇文章<a href="https://blog.fanfq.com/架构/netty_protobuf_best_practices">《Creator WebSocket Protobuf整合之保姆级全攻略》</a>大概的介绍了下有关protobuf的整合，首先我们认清一点protobuf仅仅是数据封装的模式，并没有加密功能，简单的来说将其理解成增强型json，以便于理解。</p><p>近期也看了一些服务器端的源码，总的来说protobuf算是比较主流的，老点的项目有用json的或者是body是json然后用LengthField加头的。不管如何我个人还是建议使用protobuf，其优势不再赘述了。</p><p>在阅读源码期间，偶然发现baidu的开源项目 [jprotobuf] (<a href="https://github.com/jhunters/jprotobuf" target="_blank" rel="noopener">https://github.com/jhunters/jprotobuf</a>) ，其主要的优势就是不需要再编写.proto的文件的直接在pojo类上加上注解即可，一定程度的简化了我们开发的流程提高的开发效率。但我个人观点还是需要.proto文件的，即便没有此文件也需要通过文档的形式列出所有通讯消息的结构体。随时时间的推移项目的迭代以及各种跨平台的客户端的开发，有一份清晰的文档往往事半功倍，这也算是我个人的偏执吧。</p><a id="more"></a><span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="/uploads/msg.png" class="full-image" alt="结合本文自定义消息" title="结合本文自定义消息"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span><h3 id="本文重点："><a href="#本文重点：" class="headerlink" title="本文重点："></a>本文重点：</h3><p>websocket/socket网路通讯主流的加密方式，适用于各种应用包括游戏。<br>数据的加密解密必然会带来额外的开销，至于是否采用加密取决于数据的敏感性，如果涉及用户隐私，如个人信息，交易记录等信息还是有必要的。</p><h3 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h3><img src="/uploads/times.png"><h3 id="流程解释"><a href="#流程解释" class="headerlink" title="流程解释"></a>流程解释</h3><p>1.客户端创建连接（建立websocket/socket通讯），申请AES密钥。</p><p>1).当连接创建成功后客户端所发出去的第一个包是通过RSA公钥加密的，其目的就是为了和服务器端申请后续通讯所使用的AES密钥。</p><p>2.而服务器当收到客户端的请求AES密钥的请求包时</p><p>1).通过RSA私钥解密请求包，并验证消息</p><p>2).为本次连接临时生成一个AES密钥(缓存在服务器端)并返回给客户端。也就是说AES密钥每次都会变的，而不是一个固定的值。</p><p>3.客户端获取AES密钥并缓存，好了此时针对本次的连接,客户端/服务器端均有AES密钥，</p><p>那么后续的通讯数据均通过这个AES密钥进行加密解密。</p><p>*截止到这里整个通讯的加密解密过程就说完了，整理清楚了通讯流程下面的工作就会轻松许多。上面有一些关键词需要稍微了解一下，如不清楚请自行百度。以下规范一下加密算法的各项参数，具体的视项目情况而定。</p><h3 id="规范约定"><a href="#规范约定" class="headerlink" title="规范约定"></a>规范约定</h3><p>1.RSA,密钥长度1024, 填充方式PKCS1,公钥加密，私钥解密，公钥可通过私钥生成</p><p>2.AES使用AES/ECB/PKCS7Padding</p><h4 id="RSA加密"><a href="#RSA加密" class="headerlink" title="RSA加密"></a>RSA加密</h4><p>RSA加密规则:若密钥位数是key_size, 单次加密串的最大长度为 (key_size)/8 - 11, 目前位数1024, 则最大加密长度为117，为了方便这里我们选择一次加密长度为100</p><p>将明文数据分成一个或数个最长100字节的小段进行加密，拼接分段加密数据即为最终的Body加密数据</p><h4 id="RSA解密"><a href="#RSA解密" class="headerlink" title="RSA解密"></a>RSA解密</h4><p>RSA解密同样遵循分段规则，对于1024位密钥, 每小段待解密数据长度为128字节</p><p>将密文数据分成一个或数个128字节长的小段进行解密，拼接分段解密数据即为最终的Body解密数据</p><h4 id="AES加密"><a href="#AES加密" class="headerlink" title="AES加密"></a>AES加密</h4><p>AES加密要求源数据长度必须是16的整数倍, 故需补‘0’对齐后再加密，记录modlen为源数据长度与16取模值</p><p>因加密前有可能对源数据作修改， 故需在加密后的数据尾再增加一个16字节的填充数据块，其最后一个字节赋modlen, 其余字节赋值‘0’， 将加密数据和额外的填充数据块拼接作为最终要发送协议的body数据</p><h4 id="AES解密"><a href="#AES解密" class="headerlink" title="AES解密"></a>AES解密</h4><p>协议body数据, 先将最后一个字节取出，记录modlen， 然后将body截掉尾部16字节填充数据块后再解密（与加密填充额外数据块逻辑对应）</p><p>modlen 为0时，上述解密后的数据即为协议返回的body数据, 否则需截掉尾部(16 - 录modlen)长度的用于填充对齐的数据</p><p>本文演示代码：<a href="https://github.com/fanfq/jprotobuf_sample" target="_blank" rel="noopener">https://github.com/fanfq/jprotobuf_sample</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;写在前面的话&quot;&gt;&lt;a href=&quot;#写在前面的话&quot; class=&quot;headerlink&quot; title=&quot;写在前面的话:&quot;&gt;&lt;/a&gt;写在前面的话:&lt;/h3&gt;&lt;p&gt;之前一篇文章&lt;a href=&quot;https://blog.fanfq.com/架构/netty_protobuf_best_practices&quot;&gt;《Creator WebSocket Protobuf整合之保姆级全攻略》&lt;/a&gt;大概的介绍了下有关protobuf的整合，首先我们认清一点protobuf仅仅是数据封装的模式，并没有加密功能，简单的来说将其理解成增强型json，以便于理解。&lt;/p&gt;
&lt;p&gt;近期也看了一些服务器端的源码，总的来说protobuf算是比较主流的，老点的项目有用json的或者是body是json然后用LengthField加头的。不管如何我个人还是建议使用protobuf，其优势不再赘述了。&lt;/p&gt;
&lt;p&gt;在阅读源码期间，偶然发现baidu的开源项目 [jprotobuf] (&lt;a href=&quot;https://github.com/jhunters/jprotobuf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/jhunters/jprotobuf&lt;/a&gt;) ，其主要的优势就是不需要再编写.proto的文件的直接在pojo类上加上注解即可，一定程度的简化了我们开发的流程提高的开发效率。但我个人观点还是需要.proto文件的，即便没有此文件也需要通过文档的形式列出所有通讯消息的结构体。随时时间的推移项目的迭代以及各种跨平台的客户端的开发，有一份清晰的文档往往事半功倍，这也算是我个人的偏执吧。&lt;/p&gt;
    
    </summary>
    
      <category term="架构" scheme="https://blog.fanfq.com/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="架构" scheme="https://blog.fanfq.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="design" scheme="https://blog.fanfq.com/tags/design/"/>
    
      <category term="netty" scheme="https://blog.fanfq.com/tags/netty/"/>
    
      <category term="protobuf" scheme="https://blog.fanfq.com/tags/protobuf/"/>
    
      <category term="creator" scheme="https://blog.fanfq.com/tags/creator/"/>
    
  </entry>
  
  <entry>
    <title>Cocos Creator WebSocket Protobuf整合之保姆级全攻略</title>
    <link href="https://blog.fanfq.com/%E6%9E%B6%E6%9E%84/netty_protobuf_best_practices.html"/>
    <id>https://blog.fanfq.com/架构/netty_protobuf_best_practices.html</id>
    <published>2020-03-18T10:12:50.000Z</published>
    <updated>2020-09-08T02:29:36.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>环境说明：<br>Cocos Creator : 2.3.0 学习的速度赶不上它更新的速度<br>protobuf3 <a href="https://developers.google.com/protocol-buffers/" target="_blank" rel="noopener">https://developers.google.com/protocol-buffers/</a><br>protobufjs @6.8.9 <a href="https://github.com/protobufjs/protobuf.js" target="_blank" rel="noopener">https://github.com/protobufjs/protobuf.js</a><br>没错，这是目前最新版本。网上一大堆都是老的 v5 版本，对我来说太low。哈哈实际上我仅仅是为了用那该死的 pbts 啦！</p><p>服务器端：<br>websocket + protobuf3 这里就不具体展开说明了，因为此时我对服务器端没有什么兴趣。</p><img src="/uploads/google_protobuf.png"><h3 id="why-google-protobuf"><a href="#why-google-protobuf" class="headerlink" title="why google protobuf?"></a>why google protobuf?</h3><p>我来告诉你，为什么选择protobuf作为网络的封装协议而为什么不用json？</p><p>1.首先我是google的粉丝<br>2.序列化与反序列化效率高于json，相比而言降低了客户端服务器的资源<br>3.传输体积小，对应的降低的数据流量<br>4.数据类型跨平台，这点很重要。也许你不在乎，等你做多客户端的时候就知道了。<br>5.一定程度脱敏，强调一下protobuf没有加密功能，仅仅是二进制难以阅读而已。本文不涉及加密的操作，先给留个坑如果读者有兴趣我会考虑做篇有关RSA,AES加密封装.</p><a id="more"></a><h3 id="protobuf-结构体定义"><a href="#protobuf-结构体定义" class="headerlink" title="protobuf 结构体定义"></a>protobuf 结构体定义</h3><p>1.通常项目早期的时候已经规定好了通讯协议，下面这个协议属于”<strong>万金油</strong>“适用于绝大多数项目，也是我之前做的项目中所采用的协议。</p><span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="/uploads/protobuf_struct.png" class="full-image" alt="消息结构体封装协议" title="消息结构体封装协议"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span><p>2.通常我还会做一份文档出来，以供其他参与开发的小伙伴使用，类似于这样的</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:center">位数</th><th style="text-align:right">字节数</th><th style="text-align:right">说明</th></tr></thead><tbody><tr><td style="text-align:left">nHeaderFlag</td><td style="text-align:center">8*4</td><td style="text-align:right">2</td><td style="text-align:right">包头起始标志，固定为“FC”</td></tr><tr><td style="text-align:left">nProtoID</td><td style="text-align:center">8*4</td><td style="text-align:right">4</td><td style="text-align:right">协议ID</td></tr><tr><td style="text-align:left">nProtoFmtType</td><td style="text-align:center">8*4</td><td style="text-align:right">4</td><td style="text-align:right">协议格式类型，0为Protobuf格式，1为Json格式，目前仅支持 0</td></tr><tr><td style="text-align:left">nProtoVer</td><td style="text-align:center">8*4</td><td style="text-align:right">4</td><td style="text-align:right">协议版本，用于迭代兼容, 目前填0</td></tr><tr><td style="text-align:left">nSerialNo</td><td style="text-align:center">8*8</td><td style="text-align:right">8</td><td style="text-align:right">包序列号，用于对应请求包和回包, 要求递增</td></tr><tr><td style="text-align:left">nBodyLen</td><td style="text-align:center">8*4</td><td style="text-align:right">4</td><td style="text-align:right">包体长度</td></tr><tr><td style="text-align:left">arrBodySHA1</td><td style="text-align:center">8*40</td><td style="text-align:right">40</td><td style="text-align:right">包体原始数据(解密后)的SHA1哈希值</td></tr><tr><td style="text-align:left">arrReserved</td><td style="text-align:center">8*20</td><td style="text-align:right">20</td><td style="text-align:right">保留20字节扩展</td></tr></tbody></table><p>（具体描述封装协议各字段说明）</p><table><thead><tr><th style="text-align:left">分类</th><th style="text-align:center">协议ID</th><th style="text-align:right">Protobuf文件</th><th style="text-align:right">C2S</th><th style="text-align:right">S2C</th><th style="text-align:right">说明 </th></tr></thead><tbody><tr><td style="text-align:left"> 1</td><td style="text-align:center">1001</td><td style="text-align:right"><a href="https://github.com/fanfq/springboot_netty_websocket_protobuffer/blob/master/common/src/main/java/com/fc/common/socket/protobuf/KeepAliveMsg.proto" target="_blank" rel="noopener">KeepAliveMsg</a></td><td style="text-align:right">ping</td><td style="text-align:right">-</td><td style="text-align:right">心跳</td></tr><tr><td style="text-align:left"> 1</td><td style="text-align:center">1901</td><td style="text-align:right"><a href="https://github.com/fanfq/springboot_netty_websocket_protobuffer/blob/master/common/src/main/java/com/fc/common/socket/protobuf/KeepAliveMsg.proto" target="_blank" rel="noopener">KeepAliveMsg</a></td><td style="text-align:right">-</td><td style="text-align:right">pong</td><td style="text-align:right">心跳</td></tr></tbody></table><p>（原生的.proto 文件说明，以便维护）</p><p>3.以KeepAliveMsg.proto为例说明</p><p>ProtoID.proto 一个公用的枚举类型以便管理协议编号<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">syntax =<span class="string">"proto3"</span>;</span><br><span class="line"><span class="comment">//消息头</span></span><br><span class="line"><span class="keyword">enum</span> MsgType&#123;</span><br><span class="line">    DEF = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//keepalive</span></span><br><span class="line">    PING = <span class="number">1001</span>;</span><br><span class="line">    PONG = <span class="number">1901</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>KeepAliveMsg.proto 心跳包协议体<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">syntax =<span class="string">"proto3"</span>;</span><br><span class="line"></span><br><span class="line">message C2S</span><br><span class="line">&#123;</span><br><span class="line">    int64 timestamp = <span class="number">1</span>; <span class="comment">//时间戳</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message S2C</span><br><span class="line">&#123;</span><br><span class="line">    int64 timestamp = <span class="number">1</span>; <span class="comment">//时间戳</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message C2SMsg  <span class="comment">//Request</span></span><br><span class="line">&#123;</span><br><span class="line">    C2S c2s = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message S2CMsg  <span class="comment">//Response</span></span><br><span class="line">&#123;</span><br><span class="line">    int32 code = <span class="number">1</span>;</span><br><span class="line">    string msg = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    S2C s2c = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="creator-整合-protobufjs"><a href="#creator-整合-protobufjs" class="headerlink" title="creator 整合 protobufjs"></a>creator 整合 protobufjs</h3><p>好了，截止到这里和我们cocos creator 不相关的东西准备结束了。下面我们来说说creator该做哪些骚操作呢。<br><span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="/uploads/protobufjs.png" class="full-image" alt="消息结构体封装协议"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span></p><p>上面说了google protobuf这里又来个protobuf.js又是什么鬼？</p><p>这个鬼呢，管他什么鬼，我没耐心写了，先将就的写着吧。总之就是在creator中使用protobuf的一个插件针对js, ts 语言环境.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install protobufjs</span><br></pre></td></tr></table></figure><br>安装完成后在安装目录下找到 <code>/Users/fred/node_modules/protobufjs/dist/protobuf.js</code> 将其复制到creator的工程中，然后选择以控件的方式导入。</p><p>同时它主要的目的呢就是将.proto的文件转换成.js（<strong><span class="label danger">pbjs</span></strong>）,以及将其生成出来的.js转换成.d.ts(<strong><span class="label danger">pbts</span></strong>)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pbjs -t <span class="keyword">static</span>-<span class="keyword">module</span> -w commonjs -o compiled.js ProtoID.proto KeepAliveMsg.proto</span><br><span class="line">pbts -o compiled.d.ts compiled.js</span><br></pre></td></tr></table></figure><p>此时我们就生成出了 compiled.d.ts compiled.js 这两个文件，也将其复制到creator工程中，其中修改下compiled.js如下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//var $protobuf = require("protobufjs/minimal");</span></span><br><span class="line"><span class="keyword">var</span> $protobuf = protobuf;</span><br></pre></td></tr></table></figure></p><span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="/uploads/ccc.png" class="full-image" alt="消息结构体封装协议"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span><p>好，截止到这里。基本上就完成了protobuf的支持的，剩下的工作就是开始怼代码了！</p><p>写到这里，我有点不想写了，以后再更新吧！</p><p>//todo: creator 中如何通过protobuf.js 进行序列化与反序列化，以及自定义头的解析。</p><p>2020-03-18更新</p><p>1.开始各种封装以及代码的调用与实现，大概的介绍下代码清单<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-script (项目工程的脚本目录)</span><br><span class="line">    |_ protobuf (存放protobuf相关目录)</span><br><span class="line">        |_compiled.js (pbjs 编译出来的 .js 文件)</span><br><span class="line">        |_compiled.d.ts (pbts 编译出来的 .d.ts 文件)</span><br><span class="line">        |_protobuf.js (导入的插件)</span><br><span class="line">        |_bean (存放封装类相关目录)</span><br><span class="line">            |_FCDecoder.ts  （arraybuf 消息头解码）</span><br><span class="line">            |_FCEncoder.ts  （arraybuf 消息头编码）</span><br><span class="line">            |_FCHeader.ts （封装的消息头对象）</span><br><span class="line">            |_FCMsg.ts （封装的消息对象）</span><br></pre></td></tr></table></figure></p><h3 id="工程示例源码"><a href="#工程示例源码" class="headerlink" title="工程示例源码"></a>工程示例源码</h3><p>以下是工程示例，代码我就不帖了，具体的看工程源码<br><code>https://github.com/fanfq/springboot_netty_websocket_protobuffer</code></p><h3 id="大概的总结一下"><a href="#大概的总结一下" class="headerlink" title="大概的总结一下"></a>大概的总结一下</h3><p>作为初学creator的人来说，creator的生态并没有我想的那么好，总体而言还处于初级阶段，相当一部分大佬是从cocos2dx转过来的，相对而言他们的学习门槛更低更易于上手，就我个人而言特别针对ts语法可能有些地方用不太恰当，不过暂时没有关系，先这么滴。后续慢慢改善，加油！</p><p>有关网络相关的今天是我学习的第三天，基本的网络通讯http,websocket都已经整明白了，而且在native上测试也是通过的。后期再稍微看下有关证书的配置，应该问题不大。</p><p>下面的计划我准备开始学习下UI相关的控件了，之前写了个demo大概的了解下layout，button，label，widget …等基本的控件使用。可能游戏开发中会用到很多的自定义的控件，暂时还没有接触到。</p><p>还有就是基本的物理引擎做个大概的了解，我估计用不到，如果是网游的话碰撞大概率我会写在服务器端。其他的相关的先做个了解的！</p><p>我们又可以愉快的玩耍了！</p><p>一天到晚的，别老想着白嫖！</p><p>老铁要不要关注一下呢？</p><p>写在最后，本人不提供疑难杂症的检查，岁数有点大了，人有点懒了！谢谢！！</p><p>peace&amp;love</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;环境说明：&lt;br&gt;Cocos Creator : 2.3.0 学习的速度赶不上它更新的速度&lt;br&gt;protobuf3 &lt;a href=&quot;https://developers.google.com/protocol-buffers/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://developers.google.com/protocol-buffers/&lt;/a&gt;&lt;br&gt;protobufjs @6.8.9 &lt;a href=&quot;https://github.com/protobufjs/protobuf.js&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/protobufjs/protobuf.js&lt;/a&gt;&lt;br&gt;没错，这是目前最新版本。网上一大堆都是老的 v5 版本，对我来说太low。哈哈实际上我仅仅是为了用那该死的 pbts 啦！&lt;/p&gt;
&lt;p&gt;服务器端：&lt;br&gt;websocket + protobuf3 这里就不具体展开说明了，因为此时我对服务器端没有什么兴趣。&lt;/p&gt;
&lt;img src=&quot;/uploads/google_protobuf.png&quot;&gt;
&lt;h3 id=&quot;why-google-protobuf&quot;&gt;&lt;a href=&quot;#why-google-protobuf&quot; class=&quot;headerlink&quot; title=&quot;why google protobuf?&quot;&gt;&lt;/a&gt;why google protobuf?&lt;/h3&gt;&lt;p&gt;我来告诉你，为什么选择protobuf作为网络的封装协议而为什么不用json？&lt;/p&gt;
&lt;p&gt;1.首先我是google的粉丝&lt;br&gt;2.序列化与反序列化效率高于json，相比而言降低了客户端服务器的资源&lt;br&gt;3.传输体积小，对应的降低的数据流量&lt;br&gt;4.数据类型跨平台，这点很重要。也许你不在乎，等你做多客户端的时候就知道了。&lt;br&gt;5.一定程度脱敏，强调一下protobuf没有加密功能，仅仅是二进制难以阅读而已。本文不涉及加密的操作，先给留个坑如果读者有兴趣我会考虑做篇有关RSA,AES加密封装.&lt;/p&gt;
    
    </summary>
    
      <category term="架构" scheme="https://blog.fanfq.com/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="架构" scheme="https://blog.fanfq.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="design" scheme="https://blog.fanfq.com/tags/design/"/>
    
      <category term="netty" scheme="https://blog.fanfq.com/tags/netty/"/>
    
      <category term="protobuf" scheme="https://blog.fanfq.com/tags/protobuf/"/>
    
      <category term="creator" scheme="https://blog.fanfq.com/tags/creator/"/>
    
  </entry>
  
  <entry>
    <title>基于mongodb信息流数据存储设计</title>
    <link href="https://blog.fanfq.com/mongodb/%E5%9F%BA%E4%BA%8Emongodb%E4%BF%A1%E6%81%AF%E6%B5%81%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E8%AE%BE%E8%AE%A1.html"/>
    <id>https://blog.fanfq.com/mongodb/基于mongodb信息流数据存储设计.html</id>
    <published>2018-11-27T04:13:43.000Z</published>
    <updated>2019-08-16T10:06:27.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>以微信朋友圈为例，当打开朋友圈的时候默认刷新最新的数据，数据流以时间倒序排序。那么这样的数据表现形式我们称之为<code>时间线</code>。需要注意的是<br>我们定义时间线的起始时间为账户的创建的时间，例如，A是B的粉丝，B账号创建时间为2018年10月1日，而A账户的创建时间为2018年11月1日则在A的时间线只可以看到2018年11月1日以后的数据。而B的时间线则是2018年10月1日开始往后的数据。也就是说我们以账号的创建时间为锚点。</p><a id="more"></a><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>用户A是B的粉丝，则A订阅了B，B发布朋友圈则推送给A。</p><img src="/uploads/WX20181120-pubsub.png"><p>如上图所示，我们整理了一下订阅者关系如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">A (3)</span><br><span class="line">-&gt; E</span><br><span class="line">-&gt; F</span><br><span class="line">-&gt; C</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="以空间换时间的存储方案"><a href="#以空间换时间的存储方案" class="headerlink" title="以空间换时间的存储方案"></a>以空间换时间的存储方案</h2><p>写入效率低，数据允余占用存储空间，读取效率高。</p><img src="/uploads/WX20181127-091310.png"><p>首先基于时间线而言，每个用户都有属于自己的一块存储区域，关联数据在写数据时完成。<br>如A发布朋友圈，会将此条记录分别写入 <code>A</code>,<code>E</code>,<code>F</code>,<code>C</code> 的时间线存储区域，每个用户只要获取属于自己的数据即可，相当程度的提高了读取效率。但是此方案将会出现大量的数据允余，这里也就是我们所说的以空间换时间的存储方案，如果此例中A有100万的粉丝，这消息副本需要100万份，即便其中大部分数据从未被读取但是这100万的存储空间是实实在在存在的，而且写数据时也会消耗一定的资源。所以这里也引用的消息序列的方案，将耗时的处理通过队列的方式处理。<br>针对社交关系需要注意一下，<code>E</code>取消对<code>A</code>的关注，只需要将<code>E</code>时间线上的有关<code>A</code>的数据清空掉，同理如果<code>E</code>关注<code>A</code>则需要将<code>A</code>时间线的数据拷贝一份存入<code>E</code>的时间线上。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h2&gt;&lt;p&gt;以微信朋友圈为例，当打开朋友圈的时候默认刷新最新的数据，数据流以时间倒序排序。那么这样的数据表现形式我们称之为&lt;code&gt;时间线&lt;/code&gt;。需要注意的是&lt;br&gt;我们定义时间线的起始时间为账户的创建的时间，例如，A是B的粉丝，B账号创建时间为2018年10月1日，而A账户的创建时间为2018年11月1日则在A的时间线只可以看到2018年11月1日以后的数据。而B的时间线则是2018年10月1日开始往后的数据。也就是说我们以账号的创建时间为锚点。&lt;/p&gt;
    
    </summary>
    
      <category term="架构" scheme="https://blog.fanfq.com/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="架构" scheme="https://blog.fanfq.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="mongodb" scheme="https://blog.fanfq.com/tags/mongodb/"/>
    
      <category term="design" scheme="https://blog.fanfq.com/tags/design/"/>
    
  </entry>
  
  <entry>
    <title>基于mongodb用户评论系统数据结构设计</title>
    <link href="https://blog.fanfq.com/mongodb/%E5%9F%BA%E4%BA%8Emongodb%E7%94%A8%E6%88%B7%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1.html"/>
    <id>https://blog.fanfq.com/mongodb/基于mongodb用户评论系统数据结构设计.html</id>
    <published>2018-11-27T04:13:43.000Z</published>
    <updated>2019-08-16T10:06:20.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>以微信朋友圈为例，但又与微信不同是微信是以强社交为主，只有好友之间才可以查阅对方的朋友圈内容，而我们当前的设计类似的微博以弱社交的表现形式，其显著特点就是即便互相没有关注也可以访问对方的朋友圈数据。所以设计之初首先要确认应用场景是<code>强社交</code>，还是<code>弱社交</code>关系。</p><a id="more"></a><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>基于timeline的用户留言与点赞</p><img src="/uploads/WX20181127-121621.png"><h3 id="信息流"><a href="#信息流" class="headerlink" title="信息流"></a>信息流</h3><p>注意事项，<code>AREA1</code>,<code>AREA2</code>分别是两块SCHEMA分别存储在mongodb中，本文的重点也是根据实际示例探讨这两块SCHEMA的存储结构。</p><p><code>1</code>. 系统所有的时间均是timestamp long类型，时间间隔24小时之内均显示（xx小时之前），如1小时27分钟前则显示（1小时前）;间隔1小时内则显示（xx分钟前）;不足1分钟则显示（刚刚）。该时间算法由客户端自己完成，服务器端只提供创建时间，默认时区为UTC+8.<br><code>2</code>. 用户显示上报设备型号，则显示该记录。有可能用户上包的设备型号是（oneplus a6000）则显示为（一加 6，或者 oneplus 6）所以设备型号要后台维护。<br><code>3</code>.点赞，延迟3秒与服务器同步，可取消点赞。点赞成功图标高亮显示，不影响数据同步。无人点赞数字区域显示<code>赞</code><br><code>4</code>.留言总数，无人留言显示<code>回复</code><br><code>5</code>.默认值显示3-5条最新的留言记录。支持emoji字符存储。点击<code>4</code>，<code>5</code>则进入留言详细列表</p><h3 id="留言列表"><a href="#留言列表" class="headerlink" title="留言列表"></a>留言列表</h3><p>注意事项，分页显示数据，处理好同步机制。<br><code>A</code>.同<code>1</code><br><code>B</code>.同<code>3</code><br><code>C</code>.这条记录用于张三回复了李四<br><code>D</code>.王五的这条留言被2人点赞其中含当前用户，则高亮显示点赞图标。但无人回复<br><code>E</code>.钱七回复了麻六，则麻六的回复标签上有回复记录的总数。<br><code>F</code>.回复主贴</p><img src="/uploads/WX20181127-121620.png"><p>键盘由点击具体事件后弹出，如先点击<code>1</code>,<code>A</code>,输入框提示回复主体。</p><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><p><code>1</code>.直接评论主贴</p><h3 id="回复"><a href="#回复" class="headerlink" title="回复"></a>回复</h3><p><code>A</code>.回复他人留言</p><h2 id="存储方案"><a href="#存储方案" class="headerlink" title="存储方案"></a>存储方案</h2><p>写入效率低，数据允余占用存储空间，读取效率高。</p><h3 id="基于redis"><a href="#基于redis" class="headerlink" title="基于redis"></a>基于redis</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">new post:</span><br><span class="line">&#123;post category&#125;:&#123;author id&#125;:&#123;post id&#125;</span><br><span class="line">朋友圈:123:67890</span><br><span class="line">uid为123的用户发布朋友圈该条记录id为67890</span><br><span class="line"></span><br><span class="line">new reply:</span><br><span class="line">&#123;post category&#125;:&#123;author id&#125;:&#123;post id&#125;:reply:&#123;uid&#125;:&#123;reply post id&#125; </span><br><span class="line">朋友圈:123:67890:reply:852:741052</span><br><span class="line">uid为852的用户回复‘uid为123的用户发布朋友圈id为67890&apos;。该条记录id为741052</span><br><span class="line"></span><br><span class="line">new reply @ user:</span><br><span class="line">&#123;post category&#125;:&#123;uid&#125;:&#123;postid&#125;:replyto:&#123;uid&#125;:to:&#123;uid&#125;:&#123;replyto post id&#125; </span><br><span class="line">朋友圈:123:67890:replyto:852:to:963:7895412</span><br><span class="line">uid为852的用户回复uid为963的用户，在‘uid为123的用户发布朋友圈id为67890&apos;记录下。该条记录id为7895412</span><br><span class="line"></span><br><span class="line">new like base one post:</span><br><span class="line">like:&#123;post id&#125;:&#123;uid&#125;:&#123;like id&#125; 点赞</span><br><span class="line">like:67890:915:731564 </span><br><span class="line">uid为915的用户点赞了postid为67890的文章，该条记录id为731564 </span><br><span class="line"></span><br><span class="line">更多操作</span><br><span class="line"></span><br><span class="line">获取uid为123的所发朋友圈所有内容</span><br><span class="line">朋友圈:123:*</span><br><span class="line"></span><br><span class="line">获取朋友圈文章id为264832的所有点赞记录</span><br><span class="line">like:264832:*</span><br><span class="line"></span><br><span class="line">获取朋友圈文章id为264832的所有回复记录</span><br><span class="line">朋友圈:*:264832:reply* （含用户间的回复）</span><br><span class="line">朋友圈:*:264832:reply:* （不含用户间的回复）</span><br><span class="line">朋友圈:*:264832:replyto:* （仅含用户间的回复）</span><br><span class="line"></span><br><span class="line">获取UID为123朋友圈文章id为264832的所有回复记录</span><br><span class="line">朋友圈:123:264832:reply* （含用户间的回复）</span><br><span class="line">朋友圈:123:264832:reply:* （不含用户间的回复）</span><br><span class="line">朋友圈:123:264832:replyto:* （仅含用户间的回复）</span><br><span class="line"></span><br><span class="line">key-value</span><br><span class="line">AREA 1</span><br><span class="line">article:&#123;uid&#125;:&#123;postid&#125; 发布动态</span><br><span class="line"></span><br><span class="line">AREA 2</span><br><span class="line">article:&#123;uid&#125;:&#123;postid&#125;:reply:&#123;uid&#125;:&#123;postid&#125; 回复主题帖</span><br><span class="line">article:&#123;uid&#125;:&#123;postid&#125;:replyto:&#123;uid&#125;:to:&#123;uid&#125;:&#123;postid&#125; 在这个主题帖下面回复某人</span><br><span class="line"></span><br><span class="line">基于postid点赞</span><br><span class="line">like:&#123;postid&#125;:&#123;uid&#125;:&#123;likeid&#125; 点赞</span><br></pre></td></tr></table></figure><h3 id="基于mongodb"><a href="#基于mongodb" class="headerlink" title="基于mongodb"></a>基于mongodb</h3><img src="/uploads/WX20181128-125100.png"><h2 id="示例详解"><a href="#示例详解" class="headerlink" title="示例详解"></a>示例详解</h2><h4 id="服务器返回数据"><a href="#服务器返回数据" class="headerlink" title="服务器返回数据"></a>服务器返回数据</h4><p>API的设计原则是尽可能的将能一次返回所需要的所有数据，从而减少与服务器间的交互。而我们在存储的时候也不太可能将动态数据直接存储持久化。一旦数据结构改变变动会比较大，从而适当的设计关联关系有助于简化业务逻辑充分的利用mongodb高性能特性。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">"category"</span>:<span class="string">"PICTURE"</span>,</span><br><span class="line">   <span class="attr">"content"</span>:<span class="string">"这是一个带9张图片的动态"</span>,</span><br><span class="line">   <span class="attr">"createtime"</span>:<span class="number">1543374370935</span>,</span><br><span class="line">   <span class="attr">"id"</span>:<span class="number">90012</span>,</span><br><span class="line">   <span class="attr">"likeCount"</span>:<span class="number">3</span>,</span><br><span class="line">   <span class="attr">"commentCount"</span>:<span class="number">9</span>,</span><br><span class="line">   <span class="attr">"device"</span>:<span class="string">"红米 6"</span>,</span><br><span class="line">   <span class="attr">"geo"</span>:<span class="literal">null</span>,</span><br><span class="line">   <span class="attr">"author"</span>:&#123;</span><br><span class="line">      <span class="attr">"headImg"</span>:<span class="string">"http://cdnhost/headimg/91d192886a5b9f3e14b6ffa1a674b55d.jpg"</span>,</span><br><span class="line">      <span class="attr">"nickName"</span>:<span class="string">"王五"</span>,</span><br><span class="line">      <span class="attr">"uid"</span>:<span class="number">10003</span></span><br><span class="line">   &#125;,   </span><br><span class="line">   <span class="attr">"pictureUrls"</span>:[</span><br><span class="line">      <span class="string">"http://cdnhost/pic/e1ea32968eb094232f74b712017e5d11.jpg"</span>,</span><br><span class="line">      <span class="string">"http://cdnhost/pic/e1ea32968eb094232f74b712017e5d12.jpg"</span>,</span><br><span class="line">      <span class="string">"http://cdnhost/pic/e1ea32968eb094232f74b712017e5d13.jpg"</span>,</span><br><span class="line">      <span class="string">"http://cdnhost/pic/e1ea32968eb094232f74b712017e5d14.jpg"</span>,</span><br><span class="line">      <span class="string">"http://cdnhost/pic/e1ea32968eb094232f74b712017e5d15.png"</span>,</span><br><span class="line">      <span class="string">"http://cdnhost/pic/e1ea32968eb094232f74b712017e5d16.png"</span>,</span><br><span class="line">      <span class="string">"http://cdnhost/pic/e1ea32968eb094232f74b712017e5d17.png"</span>,</span><br><span class="line">      <span class="string">"http://cdnhost/pic/e1ea32968eb094232f74b712017e5d18.png"</span>,</span><br><span class="line">      <span class="string">"http://cdnhost/pic/e1ea32968eb094232f74b712017e5d19.png"</span>,</span><br><span class="line">      <span class="string">"http://cdnhost/pic/e1ea32968eb094232f74b712017e5d10.png"</span></span><br><span class="line">   ],</span><br><span class="line">   <span class="attr">"comments"</span>:[</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="attr">"author"</span>:&#123;</span><br><span class="line">            <span class="attr">"headImg"</span>:<span class="string">"http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg"</span>,</span><br><span class="line">            <span class="attr">"nickName"</span>:<span class="string">"麻子"</span>,</span><br><span class="line">            <span class="attr">"uid"</span>:<span class="number">10004</span></span><br><span class="line">         &#125;,</span><br><span class="line">         <span class="attr">"commentCount"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"content"</span>:<span class="string">"这是一个回复678ijnfdsf"</span>,</span><br><span class="line">         <span class="attr">"createtime"</span>:<span class="number">1543374600935</span>,</span><br><span class="line">         <span class="attr">"id"</span>:<span class="number">500013</span>,</span><br><span class="line">         <span class="attr">"likeCount"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"postId"</span>:<span class="number">90012</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="attr">"author"</span>:&#123;</span><br><span class="line">            <span class="attr">"headImg"</span>:<span class="string">"http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg"</span>,</span><br><span class="line">            <span class="attr">"nickName"</span>:<span class="string">"麻子"</span>,</span><br><span class="line">            <span class="attr">"uid"</span>:<span class="number">10004</span></span><br><span class="line">         &#125;,</span><br><span class="line">         <span class="attr">"commentCount"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"content"</span>:<span class="string">"这是一个回复678ijnfdsf"</span>,</span><br><span class="line">         <span class="attr">"createtime"</span>:<span class="number">1543374500935</span>,</span><br><span class="line">         <span class="attr">"id"</span>:<span class="number">500012</span>,</span><br><span class="line">         <span class="attr">"likeCount"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"postId"</span>:<span class="number">90012</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="attr">"author"</span>:&#123;</span><br><span class="line">            <span class="attr">"headImg"</span>:<span class="string">"http://cdnhost/headimg/01f8cc1938c30b28b1e80d256faddd84.jpg"</span>,</span><br><span class="line">            <span class="attr">"nickName"</span>:<span class="string">"听他们说玩游戏名字起得不能太长"</span>,</span><br><span class="line">            <span class="attr">"uid"</span>:<span class="number">10005</span></span><br><span class="line">         &#125;,</span><br><span class="line">         <span class="attr">"commentCount"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"content"</span>:<span class="string">"这是一个回复678ijnfdsf"</span>,</span><br><span class="line">         <span class="attr">"createtime"</span>:<span class="number">1543374700935</span>,</span><br><span class="line">         <span class="attr">"id"</span>:<span class="number">500011</span>,</span><br><span class="line">         <span class="attr">"likeCount"</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">"postId"</span>:<span class="number">90012</span></span><br><span class="line">      &#125;</span><br><span class="line">   ],   </span><br><span class="line">   <span class="attr">"likes"</span>:[</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="attr">"createTime"</span>:<span class="number">1543375480935</span>,</span><br><span class="line">         <span class="attr">"id"</span>:<span class="number">882211</span>,</span><br><span class="line">         <span class="attr">"postId"</span>:<span class="number">90012</span>,</span><br><span class="line">         <span class="attr">"user"</span>:&#123;</span><br><span class="line">            <span class="attr">"headImg"</span>:<span class="string">"http://cdnhost/headimg/e1ea32968eb094232f74b712017e5d14.jpg"</span>,</span><br><span class="line">            <span class="attr">"nickName"</span>:<span class="string">"李四"</span>,</span><br><span class="line">            <span class="attr">"uid"</span>:<span class="number">10002</span></span><br><span class="line">         &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="attr">"createTime"</span>:<span class="number">1543375590935</span>,</span><br><span class="line">         <span class="attr">"id"</span>:<span class="number">882212</span>,</span><br><span class="line">         <span class="attr">"postId"</span>:<span class="number">90012</span>,</span><br><span class="line">         <span class="attr">"user"</span>:&#123;</span><br><span class="line">            <span class="attr">"headImg"</span>:<span class="string">"http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg"</span>,</span><br><span class="line">            <span class="attr">"nickName"</span>:<span class="string">"麻子"</span>,</span><br><span class="line">            <span class="attr">"uid"</span>:<span class="number">10004</span></span><br><span class="line">         &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="attr">"createTime"</span>:<span class="number">1543375700935</span>,</span><br><span class="line">         <span class="attr">"id"</span>:<span class="number">882214</span>,</span><br><span class="line">         <span class="attr">"postId"</span>:<span class="number">90012</span>,</span><br><span class="line">         <span class="attr">"user"</span>:&#123;</span><br><span class="line">            <span class="attr">"headImg"</span>:<span class="string">"http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg"</span>,</span><br><span class="line">            <span class="attr">"nickName"</span>:<span class="string">"麻子"</span>,</span><br><span class="line">            <span class="attr">"uid"</span>:<span class="number">10004</span></span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="AREA1-模块"><a href="#AREA1-模块" class="headerlink" title="AREA1 模块"></a>AREA1 模块</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&quot;category&quot;:&quot;PICTURE&quot;,</span><br><span class="line">   &quot;content&quot;:&quot;这是一个带9张图片的动态&quot;,</span><br><span class="line">   &quot;createtime&quot;:1543374370935,</span><br><span class="line">   &quot;id&quot;:90012,</span><br><span class="line">   &quot;likeCount&quot;:3,</span><br><span class="line">   &quot;commentCount&quot;:9,</span><br><span class="line">   &quot;device&quot;:&quot;红米 6&quot;,</span><br><span class="line">   &quot;geo&quot;:null,</span><br><span class="line">   &quot;author&quot;:&#123;</span><br><span class="line">      &quot;headImg&quot;:&quot;http://cdnhost/headimg/91d192886a5b9f3e14b6ffa1a674b55d.jpg&quot;,</span><br><span class="line">      &quot;nickName&quot;:&quot;王五&quot;,</span><br><span class="line">      &quot;uid&quot;:10003</span><br><span class="line">   &#125;,   </span><br><span class="line">   &quot;pictureUrls&quot;:[</span><br><span class="line">      &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d11.jpg&quot;,</span><br><span class="line">      &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d12.jpg&quot;,</span><br><span class="line">      &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d13.jpg&quot;,</span><br><span class="line">      &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d14.jpg&quot;,</span><br><span class="line">      &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d15.png&quot;,</span><br><span class="line">      &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d16.png&quot;,</span><br><span class="line">      &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d17.png&quot;,</span><br><span class="line">      &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d18.png&quot;,</span><br><span class="line">      &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d19.png&quot;,</span><br><span class="line">      &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d10.png&quot;</span><br><span class="line">   ],</span><br><span class="line">   ...</span><br></pre></td></tr></table></figure><h4 id="AREA2-comments-模块"><a href="#AREA2-comments-模块" class="headerlink" title="AREA2 comments 模块"></a>AREA2 comments 模块</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&quot;comments&quot;:[</span><br><span class="line">      &#123;</span><br><span class="line">         &quot;author&quot;:&#123;</span><br><span class="line">            &quot;headImg&quot;:&quot;http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg&quot;,</span><br><span class="line">            &quot;nickName&quot;:&quot;麻子&quot;,</span><br><span class="line">            &quot;uid&quot;:10004</span><br><span class="line">         &#125;,</span><br><span class="line">         &quot;commentCount&quot;:0,</span><br><span class="line">         &quot;content&quot;:&quot;这是一个回复678ijnfdsf&quot;,</span><br><span class="line">         &quot;createtime&quot;:1543374600935,</span><br><span class="line">         &quot;id&quot;:500013,</span><br><span class="line">         &quot;likeCount&quot;:0,</span><br><span class="line">         &quot;postId&quot;:90012</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">         &quot;author&quot;:&#123;</span><br><span class="line">            &quot;headImg&quot;:&quot;http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg&quot;,</span><br><span class="line">            &quot;nickName&quot;:&quot;麻子&quot;,</span><br><span class="line">            &quot;uid&quot;:10004</span><br><span class="line">         &#125;,</span><br><span class="line">         &quot;commentCount&quot;:0,</span><br><span class="line">         &quot;content&quot;:&quot;这是一个回复678ijnfdsf&quot;,</span><br><span class="line">         &quot;createtime&quot;:1543374500935,</span><br><span class="line">         &quot;id&quot;:500012,</span><br><span class="line">         &quot;likeCount&quot;:0,</span><br><span class="line">         &quot;postId&quot;:90012</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">         &quot;author&quot;:&#123;</span><br><span class="line">            &quot;headImg&quot;:&quot;http://cdnhost/headimg/01f8cc1938c30b28b1e80d256faddd84.jpg&quot;,</span><br><span class="line">            &quot;nickName&quot;:&quot;听他们说玩游戏名字起得不能太长&quot;,</span><br><span class="line">            &quot;uid&quot;:10005</span><br><span class="line">         &#125;,</span><br><span class="line">         &quot;commentCount&quot;:0,</span><br><span class="line">         &quot;content&quot;:&quot;这是一个回复678ijnfdsf&quot;,</span><br><span class="line">         &quot;createtime&quot;:1543374700935,</span><br><span class="line">         &quot;id&quot;:500011,</span><br><span class="line">         &quot;likeCount&quot;:0,</span><br><span class="line">         &quot;postId&quot;:90012</span><br><span class="line">      &#125;</span><br><span class="line">      ...</span><br><span class="line">   ]</span><br></pre></td></tr></table></figure><h4 id="AREA2-comments-模块存储优化"><a href="#AREA2-comments-模块存储优化" class="headerlink" title="AREA2 comments 模块存储优化"></a>AREA2 comments 模块存储优化</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&quot;comments_postid&quot;:[</span><br><span class="line">500013,</span><br><span class="line">500012,</span><br><span class="line">500011,</span><br><span class="line">...</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="AREA2-likes-模块"><a href="#AREA2-likes-模块" class="headerlink" title="AREA2 likes 模块"></a>AREA2 likes 模块</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&quot;likes&quot;:[</span><br><span class="line">   &#123;</span><br><span class="line">      &quot;createTime&quot;:1543375480935,</span><br><span class="line">      &quot;id&quot;:882211,</span><br><span class="line">      &quot;postId&quot;:90012,</span><br><span class="line">      &quot;user&quot;:&#123;</span><br><span class="line">         &quot;headImg&quot;:&quot;http://cdnhost/headimg/e1ea32968eb094232f74b712017e5d14.jpg&quot;,</span><br><span class="line">         &quot;nickName&quot;:&quot;李四&quot;,</span><br><span class="line">         &quot;uid&quot;:10002</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   &#123;</span><br><span class="line">      &quot;createTime&quot;:1543375590935,</span><br><span class="line">      &quot;id&quot;:882212,</span><br><span class="line">      &quot;postId&quot;:90012,</span><br><span class="line">      &quot;user&quot;:&#123;</span><br><span class="line">         &quot;headImg&quot;:&quot;http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg&quot;,</span><br><span class="line">         &quot;nickName&quot;:&quot;麻子&quot;,</span><br><span class="line">         &quot;uid&quot;:10004</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   &#123;</span><br><span class="line">      &quot;createTime&quot;:1543375700935,</span><br><span class="line">      &quot;id&quot;:882214,</span><br><span class="line">      &quot;postId&quot;:90012,</span><br><span class="line">      &quot;user&quot;:&#123;</span><br><span class="line">         &quot;headImg&quot;:&quot;http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg&quot;,</span><br><span class="line">         &quot;nickName&quot;:&quot;麻子&quot;,</span><br><span class="line">         &quot;uid&quot;:10004</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="AREA2-likes-模块存储优化"><a href="#AREA2-likes-模块存储优化" class="headerlink" title="AREA2 likes 模块存储优化"></a>AREA2 likes 模块存储优化</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&quot;likes_postid&quot;:[</span><br><span class="line">882211,</span><br><span class="line">882212,</span><br><span class="line">882214,</span><br><span class="line">...</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="最终的储存结构"><a href="#最终的储存结构" class="headerlink" title="最终的储存结构"></a>最终的储存结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   &quot;category&quot;:&quot;PICTURE&quot;,</span><br><span class="line">   &quot;content&quot;:&quot;这是一个带9张图片的动态&quot;,</span><br><span class="line">   &quot;createtime&quot;:1543374370935,</span><br><span class="line">   &quot;id&quot;:90012,</span><br><span class="line">   &quot;likeCount&quot;:3,</span><br><span class="line">   &quot;commentCount&quot;:9,</span><br><span class="line">   &quot;device&quot;:&quot;红米 6&quot;,</span><br><span class="line">   &quot;geo&quot;:null,</span><br><span class="line">   &quot;author_uid&quot;:10003,</span><br><span class="line">   &quot;comments_postid&quot;:[</span><br><span class="line">      500013,</span><br><span class="line">      500012,</span><br><span class="line">      500011,</span><br><span class="line">      ...</span><br><span class="line">   ],</span><br><span class="line">   &quot;likes_postid&quot;:[</span><br><span class="line">      882211,</span><br><span class="line">      882212,</span><br><span class="line">      882214,</span><br><span class="line">      ...</span><br><span class="line">   ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="update"><a href="#update" class="headerlink" title="update"></a>update</h2><p>2018.11.29<br>补充一下。<code>likeCount</code> <code>commentCount</code> 是实时计算的出来的，而不是持久化在mongodb中。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h2&gt;&lt;p&gt;以微信朋友圈为例，但又与微信不同是微信是以强社交为主，只有好友之间才可以查阅对方的朋友圈内容，而我们当前的设计类似的微博以弱社交的表现形式，其显著特点就是即便互相没有关注也可以访问对方的朋友圈数据。所以设计之初首先要确认应用场景是&lt;code&gt;强社交&lt;/code&gt;，还是&lt;code&gt;弱社交&lt;/code&gt;关系。&lt;/p&gt;
    
    </summary>
    
      <category term="架构" scheme="https://blog.fanfq.com/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="架构" scheme="https://blog.fanfq.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="mongodb" scheme="https://blog.fanfq.com/tags/mongodb/"/>
    
      <category term="design" scheme="https://blog.fanfq.com/tags/design/"/>
    
  </entry>
  
  <entry>
    <title>手机APP大数据归因精准匹配之研发摘要</title>
    <link href="https://blog.fanfq.com/%E7%AE%97%E6%B3%95/%E6%89%8B%E6%9C%BAAPP%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BD%92%E5%9B%A0%E7%B2%BE%E5%87%86%E5%8C%B9%E9%85%8D%E4%B9%8B%E7%A0%94%E5%8F%91%E6%91%98%E8%A6%81.html"/>
    <id>https://blog.fanfq.com/算法/手机APP大数据归因精准匹配之研发摘要.html</id>
    <published>2018-11-13T02:55:49.000Z</published>
    <updated>2018-11-14T09:23:10.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>透过覆盖我的黑夜,<br>我看见层层无底的黑暗。<br>感谢上帝赐我,<br>不可征服的灵魂。<br>就算被地狱紧紧攫住,<br>我不会畏缩，也不惊叫。<br>经受过一浪 又一浪的打击，<br>我满头鲜血不低头。<br>在这满是愤怒和眼泪的世界之外,<br>恐怖的阴影在游荡,<br>还有，未来的威胁,<br>可是我毫不畏惧。<br>无论我将穿过的那扇门有多窄，<br>无论我将肩承怎样的责罚。<br>我是命运的主宰,<br>我是灵魂的统帅。</p><footer><strong>19世纪英国诗人威廉亨利《不可征服》</strong></footer></blockquote><p><br></p><p>2016年我从外企到一家创业公司接手的第一个工作任务，从此之后我就与他展开了不解之缘。我们为了提高1%的准确率要花费100%的努力，直到现在为止我们都在为了哪怕只能提高0.1%的准确率而不懈努力。</p><a id="more"></a><h2 id="核心摘要"><a href="#核心摘要" class="headerlink" title="核心摘要"></a>核心摘要</h2><h3 id="direct-download-link"><a href="#direct-download-link" class="headerlink" title="direct download link"></a>direct download link</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">custom download link for apk file</span><br><span class="line">https://dlhost/&#123;apkname&#125;</span><br><span class="line"></span><br><span class="line">appstore</span><br><span class="line">https://itunes.apple.com/&#123;appid&#125;</span><br><span class="line"></span><br><span class="line">google play</span><br><span class="line">https://play.google.com/store/apps/details?id=&#123;packagename&#125;</span><br></pre></td></tr></table></figure><h3 id="track-link"><a href="#track-link" class="headerlink" title="track link"></a>track link</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://tlhost/&#123;schema&#125;</span><br><span class="line">| - storage to db &amp; redirect to</span><br><span class="line">|-&gt; https://dlhost/&#123;apkname&#125;</span><br><span class="line">|-&gt; https://itunes.apple.com/&#123;appid&#125;</span><br><span class="line">|-&gt; https://play.google.com/store/apps/details?id=&#123;packagename&#125;</span><br></pre></td></tr></table></figure><h3 id="sdk-track"><a href="#sdk-track" class="headerlink" title="sdk track"></a>sdk track</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST DATA To Server</span><br><span class="line">https://apihost?data=&#123;DATA&#125;</span><br></pre></td></tr></table></figure><h3 id="server-side"><a href="#server-side" class="headerlink" title="server side"></a>server side</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">click event （data from track link, such as QR Code、SNS Media、Web Browser, etc.）</span><br><span class="line">-&gt; storage to db</span><br><span class="line"></span><br><span class="line">install &amp; launch event （data from sdk track，such as install and first launch or others）</span><br><span class="line">-&gt; storage to db</span><br><span class="line"></span><br><span class="line">matching accuracy (importance, the big data algorithm)</span><br><span class="line">-&gt; matching click / install data</span><br></pre></td></tr></table></figure><ol><li>track link<br> 跳转之前可以做很多事情，如获取浏览器信息，设置cookie，甚至持久化session</li><li>sdk track<br> 第一次安装启动时可以通过sdk传递数据到服务器，同track link的操作类似</li><li>matching<br> 通过获取到数据进行匹配，难点就在此了，这也是整个项目的核心。</li></ol><h3 id="simple-workflow"><a href="#simple-workflow" class="headerlink" title="simple workflow"></a>simple workflow</h3><img src="/uploads/20181113_workflow.png"><p>读到这里，如果你还没有看懂我在说什么，也想这篇文章不适合你继续读下去。虽然我写的也不是给谁看的，也不知道谁会关注此文。</p><h2 id="商业服务"><a href="#商业服务" class="headerlink" title="商业服务"></a>商业服务</h2><p>这个服务已经有了成熟的三方供应商，如比较知名有 <code>Adjust</code>，<code>Appsflyer</code>，<code>TalkingData</code>，<code>Google Firebase</code> 等等。</p><p>他们的共同特点出了收费外，都号称100%的精准，实际上使用下来准确率达到70%+就算很不错了，实际上在复杂的网络环境能达到70%以上的准确率是相当难的。不过通过海量数据的日益积累，以及算法的跟新迭代准确率只会越来越高。</p><p>同时他们还对接各个主流流量平台，提高准确率的同时还方便了用户。我个人认为此服务未来将成为所有APP的缺省功能，只要你的APP需要用户，只要你要去做分发，此服务不可或缺的。</p><p>当然如果你有足够的研发能力，以及对数据的高度敏感也可以直接去开发此类系统。因为使用三方服务就得牺牲用户数据，也许不会泄露这些用户数据可以肯定他们会利用这些数据。像Facebook，微信这种体量的APP他们都有自己的跟踪系统。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;透过覆盖我的黑夜,&lt;br&gt;我看见层层无底的黑暗。&lt;br&gt;感谢上帝赐我,&lt;br&gt;不可征服的灵魂。&lt;br&gt;就算被地狱紧紧攫住,&lt;br&gt;我不会畏缩，也不惊叫。&lt;br&gt;经受过一浪 又一浪的打击，&lt;br&gt;我满头鲜血不低头。&lt;br&gt;在这满是愤怒和眼泪的世界之外,&lt;br&gt;恐怖的阴影在游荡,&lt;br&gt;还有，未来的威胁,&lt;br&gt;可是我毫不畏惧。&lt;br&gt;无论我将穿过的那扇门有多窄，&lt;br&gt;无论我将肩承怎样的责罚。&lt;br&gt;我是命运的主宰,&lt;br&gt;我是灵魂的统帅。&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;19世纪英国诗人威廉亨利《不可征服》&lt;/strong&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2016年我从外企到一家创业公司接手的第一个工作任务，从此之后我就与他展开了不解之缘。我们为了提高1%的准确率要花费100%的努力，直到现在为止我们都在为了哪怕只能提高0.1%的准确率而不懈努力。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="https://blog.fanfq.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://blog.fanfq.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="大数据" scheme="https://blog.fanfq.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="归因" scheme="https://blog.fanfq.com/tags/%E5%BD%92%E5%9B%A0/"/>
    
      <category term="tracking" scheme="https://blog.fanfq.com/tags/tracking/"/>
    
  </entry>
  
  <entry>
    <title>SALT Encrypt Best Practices</title>
    <link href="https://blog.fanfq.com/%E7%AE%97%E6%B3%95/SALT_Encrypt_Best_Practices.html"/>
    <id>https://blog.fanfq.com/算法/SALT_Encrypt_Best_Practices.html</id>
    <published>2018-10-31T01:14:33.000Z</published>
    <updated>2018-11-07T01:23:19.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="发现问题："><a href="#发现问题：" class="headerlink" title="发现问题："></a>发现问题：</h2><p>这里展示一个简易的用户表：</p><table><thead><tr><th>uid</th><th>username</th><th>password</th></tr></thead><tbody><tr><td>1</td><td>zhangsan</td><td>e10adc3949ba59abbe56e057f20f883e</td></tr><tr><td>2</td><td>lisi</td><td>e10adc3949ba59abbe56e057f20f883e</td></tr><tr><td>3</td><td>wangwu</td><td>9bd5ee6fe55aaeb673025dbcb8f939c1</td></tr><tr><td>4</td><td>laoz</td><td>f8a8d7997e870968f92748f3cc41cf90</td></tr></tbody></table><ol><li>我们发现 UID 1,2 对应的 password 是一样的，如果我是zhangsan，那岂不是同样我也知道lisi的密码明文是什么了？</li><li>通过MD5密码破解网站，轻易的得到 <code>e10adc3949ba59abbe56e057f20f883e</code> 对应的明文是 <code>123456</code></li></ol><a id="more"></a><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p>我们知道，如果直接对密码进行散列，那么黑客可以对通过获得这个密码散列值，然后通过查散列值字典（例如MD5密码破解网站），得到某用户的密码。</p><p>加Salt可以一定程度上解决这一问题。所谓加Salt方法，就是加点“佐料”。其基本想法是这样的：当用户首次提供密码时（通常是注册时），由系统自动往这个密码里撒一些“佐料”，然后再散列。而当用户登录时，系统为用户提供的代码撒上同样的“佐料”，然后散列，再比较散列值，已确定密码是否正确。</p><p>这里的“佐料”被称作“Salt值”也称“盐值”，这个加“佐料”的行为叫做“加盐”，这个值是由系统随机生成的，并且只有系统知道。这样，即便两个用户使用了同一个密码，由于系统为它们生成的salt值不同，他们的散列值也是不同的。即便黑客可以通过自己的密码和自己生成的散列值来找具有特定密码的用户，但这个几率太小了（密码和salt值都得和黑客使用的一样才行）。</p><p>有时候，为了减轻开发压力，程序员会统一使用一个salt值（储存在某个地方），而不是每个用户都生成私有的salt值。但是这样的话还是解决不了上述我们发现同密文反推明文的问题。</p><h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">salt=random()<span class="comment">//获取一个随机的字符串</span></span><br><span class="line">src=<span class="number">123456</span></span><br><span class="line">password=md5(salt+src)</span><br></pre></td></tr></table></figure><p>下面详细介绍一下加Salt散列的过程。介绍之前先强调一点，前面说过，验证密码时要使用和最初散列密码时使用“相同的”佐料。所以Salt值是要存放在数据库里的。</p><h3 id="用户注册时"><a href="#用户注册时" class="headerlink" title="用户注册时"></a>用户注册时</h3><p>用户输入【账号】和【密码】（以及其他用户信息）；<br>系统为用户生成【Salt值】；<br>系统将【Salt值】和【用户密码】连接到一起；<br>对连接后的值进行散列，得到【Hash值】；<br>将【Hash值1】和【Salt值】分别放到数据库中。</p><h3 id="用户登录时"><a href="#用户登录时" class="headerlink" title="用户登录时"></a>用户登录时</h3><p>用户输入【账号】和【密码】；<br>系统通过用户名找到与之对应的【Hash值】和【Salt值】；<br>系统将【Salt值】和【用户输入的密码】连接到一起；<br>对连接后的值进行散列，得到【Hash值2】（注意是即时运算出来的值）；<br>比较【Hash值1】和【Hash值2】是否相等，相等则表示密码正确，否则表示密码错误。</p><h3 id="增强版用户表设计"><a href="#增强版用户表设计" class="headerlink" title="增强版用户表设计"></a>增强版用户表设计</h3><table><thead><tr><th>uid</th><th>username</th><th>password</th><th>salt</th></tr></thead><tbody><tr><td>1</td><td>zhangsan</td><td>ad4b3e001f961ef2792ccaae9d05c873</td><td>eyJ1a</td></tr><tr><td>2</td><td>lisi</td><td>f73f9c73c5e6e6059c9948a78ee81957</td><td>WQiOj</td></tr><tr><td>3</td><td>wangwu</td><td>9bd5ee6fe55aaeb673025dbcb8f939c1</td><td>EwMDE</td></tr><tr><td>4</td><td>laoz</td><td>f8a8d7997e870968f92748f3cc41cf90</td><td>U0MDk</td></tr></tbody></table><p>即便 zhangsan，lisi 的密码明文都是 123456，由于他们的salt不同则最终的password密文也不同，由于salt增加的密码的复杂度，被破解的难度也更大。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;发现问题：&quot;&gt;&lt;a href=&quot;#发现问题：&quot; class=&quot;headerlink&quot; title=&quot;发现问题：&quot;&gt;&lt;/a&gt;发现问题：&lt;/h2&gt;&lt;p&gt;这里展示一个简易的用户表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;uid&lt;/th&gt;
&lt;th&gt;username&lt;/th&gt;
&lt;th&gt;password&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;zhangsan&lt;/td&gt;
&lt;td&gt;e10adc3949ba59abbe56e057f20f883e&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;lisi&lt;/td&gt;
&lt;td&gt;e10adc3949ba59abbe56e057f20f883e&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;wangwu&lt;/td&gt;
&lt;td&gt;9bd5ee6fe55aaeb673025dbcb8f939c1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;laoz&lt;/td&gt;
&lt;td&gt;f8a8d7997e870968f92748f3cc41cf90&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol&gt;
&lt;li&gt;我们发现 UID 1,2 对应的 password 是一样的，如果我是zhangsan，那岂不是同样我也知道lisi的密码明文是什么了？&lt;/li&gt;
&lt;li&gt;通过MD5密码破解网站，轻易的得到 &lt;code&gt;e10adc3949ba59abbe56e057f20f883e&lt;/code&gt; 对应的明文是 &lt;code&gt;123456&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="算法" scheme="https://blog.fanfq.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://blog.fanfq.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="openapi" scheme="https://blog.fanfq.com/tags/openapi/"/>
    
  </entry>
  
  <entry>
    <title>Access Token vs Refresh Token</title>
    <link href="https://blog.fanfq.com/%E7%AE%97%E6%B3%95/AccessToken_RefreshToken.html"/>
    <id>https://blog.fanfq.com/算法/AccessToken_RefreshToken.html</id>
    <published>2018-10-30T14:26:57.000Z</published>
    <updated>2020-11-04T08:36:36.121Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="设计需求"><a href="#设计需求" class="headerlink" title="设计需求"></a>设计需求</h2><ol><li>统计在线列表，可以随时的踢下线，让客户端缓存的token失效</li><li>30天内无需重新登录，默认可无限期延续</li></ol><h2 id="Token生成方案"><a href="#Token生成方案" class="headerlink" title="Token生成方案"></a>Token生成方案</h2><a id="more"></a><h3 id="JWT（JSON-WEB-TOKEN）的构成"><a href="#JWT（JSON-WEB-TOKEN）的构成" class="headerlink" title="JWT（JSON WEB TOKEN）的构成"></a>JWT（JSON WEB TOKEN）的构成</h3><p>第一部分我们称它为头部（header),<br>第二部分我们称其为载荷（payload, 类似于飞机上承载的物品)，<br>第三部分是签名（signature确保数据的完整性).<br><code>JWT token = header.payload.signature</code><br>由于JWT是无状态的，也未能实现我们上述的需求，所以不得不放弃了JWT的方案，但是其有关token的加密算法还是值得参考的。</p><h3 id="access-token生成方案"><a href="#access-token生成方案" class="headerlink" title="access_token生成方案"></a>access_token生成方案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">payload = urlencode(base64(&#123;uid,ts&#125;))</span><br><span class="line">salt=TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ //盐值</span><br><span class="line">signature = HMACSHA256(payload,salt);</span><br><span class="line">access_token = payload.signature</span><br><span class="line"></span><br><span class="line">redis_key = access_token:uid:&#123;access_token&#125;//uid 是从token中payload解析出来的</span><br><span class="line">redis_value = userinfo</span><br><span class="line">redis_ttl = 2hr</span><br></pre></td></tr></table></figure><h3 id="refresh-token生成方案"><a href="#refresh-token生成方案" class="headerlink" title="refresh_token生成方案"></a>refresh_token生成方案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">payload = urlencode(base64(&#123;uid,ts&#125;))</span><br><span class="line">salt=TJVA95Or11.0cBab30RMHrHDcEfxjoYZgeFONFh7HgQ //盐值</span><br><span class="line">signature = HMACSHA256(payload,salt);</span><br><span class="line">refresh_token = payload.signature;</span><br><span class="line"></span><br><span class="line">redis_key = refresh_token:uid:&#123;refresh_token&#125;//uid 是从token中payload解析出来的</span><br><span class="line">redis_value = access_token</span><br><span class="line">redis_ttl = 30days</span><br></pre></td></tr></table></figure><h3 id="算法实现："><a href="#算法实现：" class="headerlink" title="算法实现："></a>算法实现：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.codec.binary.Base64;</span><br><span class="line"><span class="keyword">import</span> com.fanfq.util.commons.encrypt.HMACSHA256;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"\n#####token生成算法"</span>);</span><br><span class="line">    </span><br><span class="line">Long uid = <span class="number">10010l</span>;</span><br><span class="line"></span><br><span class="line">Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;String,Object&gt;();</span><br><span class="line">    map.put(<span class="string">"uid"</span>, uid);</span><br><span class="line">    map.put(<span class="string">"ts"</span>, System.currentTimeMillis());</span><br><span class="line">    </span><br><span class="line">    String str = JSONObject.toJSONString(map);</span><br><span class="line">    </span><br><span class="line">    String base64 = Base64.encodeBase64String(str.getBytes());</span><br><span class="line">    String payload = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        payload = URLEncoder.encode(base64,<span class="string">"UTF-8"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">    <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">String salt = <span class="string">"TJVA95Or11.0cBab30RMHrHDcEfxjoYZgeFONFh7HgQ"</span>;</span><br><span class="line">String signature = HMACSHA256.encode(payload,salt);</span><br><span class="line"></span><br><span class="line">String token = payload+<span class="string">"."</span>+signature;</span><br><span class="line">System.out.println(<span class="string">"payload:"</span>+payload);</span><br><span class="line">System.out.println(<span class="string">"signature:"</span>+signature);</span><br><span class="line">System.out.println(<span class="string">"token:"</span>+token);</span><br><span class="line">System.out.println(<span class="string">"redis key: token:"</span>+uid+<span class="string">":"</span>+token);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"\n#####token校验算法"</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"1.签名校验"</span>);</span><br><span class="line">System.out.println(<span class="string">"token:"</span>+token);</span><br><span class="line">String payload_ = token.split(<span class="string">"\\."</span>)[<span class="number">0</span>];</span><br><span class="line">String signature_ = token.split(<span class="string">"\\."</span>)[<span class="number">1</span>];</span><br><span class="line">System.out.println(<span class="string">"payload密文:"</span>+payload_);</span><br><span class="line">System.out.println(<span class="string">"signature签名:"</span>+signature_);</span><br><span class="line"><span class="keyword">boolean</span> check = HMACSHA256.encode(payload_,salt).equals(signature_);</span><br><span class="line">System.out.println(<span class="string">"签名校验："</span>+check);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"\n2.时间戳校验"</span>);</span><br><span class="line">String urldecode = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    urldecode = URLDecoder.decode(payload_, <span class="string">"UTF-8"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">    <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">String jsondecode = <span class="keyword">new</span> String(Base64.decodeBase64(urldecode));</span><br><span class="line">System.out.println(<span class="string">"payload解密："</span>+jsondecode);</span><br><span class="line"></span><br><span class="line">JSONObject jsobj = JSONObject.parseObject(jsondecode);</span><br><span class="line">Long ts = jsobj.getLong(<span class="string">"ts"</span>);</span><br><span class="line">System.out.println(System.currentTimeMillis() - ts +<span class="string">" ms"</span>);</span><br><span class="line"><span class="keyword">if</span>(System.currentTimeMillis() - ts &gt; <span class="number">1000</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">2</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">"超过2小时"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">"有效期内，开始进行redis查询"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>token生成算法</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">明文：&#123;&quot;uid&quot;:10010,&quot;ts&quot;:1540912751948&#125;</span><br><span class="line">payload:eyJ1aWQiOjEwMDEwLCJ0cyI6MTU0MDkxMjc1MTk0OH0%3D</span><br><span class="line">signature:0ba40cff2bda8fab9ae61893b43c198e3022a1e8f058ac8054417241d3129d1f</span><br><span class="line">token:eyJ1aWQiOjEwMDEwLCJ0cyI6MTU0MDkxMjc1MTk0OH0%3D.0ba40cff2bda8fab9ae61893b43c198e3022a1e8f058ac8054417241d3129d1f</span><br><span class="line">redis key: token:10010:eyJ1aWQiOjEwMDEwLCJ0cyI6MTU0MDkxMjc1MTk0OH0%3D.0ba40cff2bda8fab9ae61893b43c198e3022a1e8f058ac8054417241d3129d1f</span><br></pre></td></tr></table></figure></p><p><strong>token校验算法</strong></p><ol><li><p>签名校验</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">token:eyJ1aWQiOjEwMDEwLCJ0cyI6MTU0MDkxMjc1MTk0OH0%3D.0ba40cff2bda8fab9ae61893b43c198e3022a1e8f058ac8054417241d3129d1f</span><br><span class="line">payload密文:eyJ1aWQiOjEwMDEwLCJ0cyI6MTU0MDkxMjc1MTk0OH0%3D</span><br><span class="line">signature签名:0ba40cff2bda8fab9ae61893b43c198e3022a1e8f058ac8054417241d3129d1f</span><br><span class="line">签名校验：true</span><br></pre></td></tr></table></figure></li><li><p>时间戳校验</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload解密：&#123;&quot;uid&quot;:10010,&quot;ts&quot;:1540912751948&#125;</span><br><span class="line">690 ms</span><br><span class="line">有效期内，开始进行redis查询</span><br></pre></td></tr></table></figure></li></ol><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>这个也是我经过思考后最终确认下来的token生成算法，也许你也发现既然redis持久化了就直接查库即可，无需搞的这么复杂的算法。实际上我是这样考虑的，因为大量的api请求都会带token参数导致每次请求都会查询库，固然redis的强大的性能足以支持，但还是为了效率过滤一些没有必要的io资源。</p><ol><li>得到请求的时候首先验证signature是否匹配，防止篡改</li><li>再从payload中获取ts以判断时间戳是否失效，access_token 2hr, refresh_token 30days.</li><li>前两者校验完成，则请求一次redis io做最终的判断。当然排除临时被提下线的情况下，大部分情况下这里都是通过的。</li><li><p>redis key 的设计，其中的uid设计主要是为了后期统计使用，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">keys （refresh_token:uid:*）获取当前终端连接数，</span><br><span class="line"></span><br><span class="line">Set&lt;String&gt; setz = jedis.keys(&quot;access_token:*&quot;);</span><br><span class="line">System.out.println(&quot;access_token:* key 的数目:&quot;+setz.size());</span><br><span class="line"></span><br><span class="line">获取当前在线用户数（根据uid排重）</span><br><span class="line"></span><br><span class="line">Set&lt;String&gt; setzz = new HashSet&lt;String&gt;();</span><br><span class="line">for(String str:setz) &#123;</span><br><span class="line">    setzz.add(str.split(&quot;:&quot;)[1]);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;key uid 去重：&quot;+setzz.size());</span><br></pre></td></tr></table></figure></li><li><p>redis ttl 就不用不多说了，access_token 2hr, refresh_token 30days.</p></li><li>redis value：whatever anythings</li></ol><h3 id="Redis-有状态缓存"><a href="#Redis-有状态缓存" class="headerlink" title="Redis 有状态缓存"></a>Redis 有状态缓存</h3><p><strong>access_token</strong></p><table><thead><tr><th>key</th><th>ttl</th><th>value</th></tr></thead><tbody><tr><td>access_token:10024:ak_1</td><td>2hr</td><td>username:zhangsan,uid:10024</td></tr><tr><td>access_token:10025:ak_2</td><td>2hr</td><td>username:lisi,uid:10025</td></tr></tbody></table><p><strong>refresh_token</strong></p><table><thead><tr><th>key</th><th>ttl</th><th>value</th></tr></thead><tbody><tr><td>refresh_token:10024:rk_1</td><td>30days</td><td>access_token:10024:ak_1</td></tr><tr><td>refresh_token:10025:rk_2</td><td>30days</td><td>access_token:10025:ak_2</td></tr></tbody></table><h2 id="拓扑结构"><a href="#拓扑结构" class="headerlink" title="拓扑结构"></a>拓扑结构</h2><img src="/uploads/WX20181030-160602.png"><h2 id="用户授权获取token"><a href="#用户授权获取token" class="headerlink" title="用户授权获取token"></a>用户授权获取token</h2><h3 id="请求方法："><a href="#请求方法：" class="headerlink" title="请求方法："></a>请求方法：</h3><p><code>https://apihost/oauth2/access_token?username=zhangsan&amp;password=123456</code></p><h3 id="正确的返回："><a href="#正确的返回：" class="headerlink" title="正确的返回："></a>正确的返回：</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">"code"</span>:<span class="number">200</span>,   </span><br><span class="line">   <span class="attr">"msg"</span>:<span class="string">"ok"</span>,   </span><br><span class="line">   <span class="attr">"data"</span>:&#123;</span><br><span class="line">      <span class="attr">"access_token"</span>:<span class="string">"ak_1"</span>,</span><br><span class="line">      <span class="attr">"uid"</span>:<span class="number">10024</span>,</span><br><span class="line">      <span class="attr">"refresh_token"</span>:<span class="string">"rk_1"</span>,</span><br><span class="line">      <span class="attr">"expires_in"</span>:<span class="number">7200</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>access_token</td><td>接口调用凭证</td></tr><tr><td>refresh_token</td><td>用户刷新access_token</td></tr><tr><td>uid</td><td>授权用户唯一标识</td></tr><tr><td>expires_in</td><td>access_token接口调用凭证超时时间，单位（秒）</td></tr></tbody></table><h3 id="错误返回样例："><a href="#错误返回样例：" class="headerlink" title="错误返回样例："></a>错误返回样例：</h3><p><code>{&quot;code&quot;:400,&quot;msg&quot;:&quot;bad request&quot;}</code></p><h2 id="刷新access-token有效期"><a href="#刷新access-token有效期" class="headerlink" title="刷新access_token有效期"></a>刷新access_token有效期</h2><p>access_token是调用授权关系接口的调用凭证，由于access_token有效期（目前为2个小时）较短，当access_token超时后，可以使用refresh_token进行刷新，用refresh_token仅能使用一次，使用一次后，将被废弃。也就是说refresh_token 更新 access_token 的时候 refresh_token 也会跟着被更新</p><ol><li>通过用refresh_token机制可以确保活跃用户长期不用登录授权。</li><li>refresh_token拥有较长的有效期（30天），当refresh_token失效的后，需要用户重新授权。也就说第一次登录与第二次登录时长间隔30天以上则需要用户重新授权登录。</li></ol><h3 id="请求方法：-1"><a href="#请求方法：-1" class="headerlink" title="请求方法："></a>请求方法：</h3><p><code>https://apihost/oauth2/refresh_token?uid=UID&amp;refresh_token=REFRESH_TOKEN</code></p><h3 id="正确的返回：-1"><a href="#正确的返回：-1" class="headerlink" title="正确的返回："></a>正确的返回：</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">"code"</span>:<span class="number">200</span>,   </span><br><span class="line">   <span class="attr">"msg"</span>:<span class="string">"ok"</span>,   </span><br><span class="line">   <span class="attr">"data"</span>:&#123;</span><br><span class="line">      <span class="attr">"access_token"</span>:<span class="string">"ak_1"</span>,</span><br><span class="line">      <span class="attr">"uid"</span>:<span class="number">10024</span>,</span><br><span class="line">      <span class="attr">"refresh_token"</span>:<span class="string">"rk_1"</span>,</span><br><span class="line">      <span class="attr">"expires_in"</span>:<span class="number">7200</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>access_token</td><td>接口调用凭证</td></tr><tr><td>refresh_token</td><td>用户刷新access_token</td></tr><tr><td>uid</td><td>授权用户唯一标识</td></tr><tr><td>expires_in</td><td>access_token接口调用凭证超时时间，单位（秒）</td></tr></tbody></table><h3 id="错误返回样例：-1"><a href="#错误返回样例：-1" class="headerlink" title="错误返回样例："></a>错误返回样例：</h3><p><code>{&quot;code&quot;:400,&quot;msg&quot;:&quot;invalid refresh_token&quot;}</code></p><h2 id="通过access-token调用接口"><a href="#通过access-token调用接口" class="headerlink" title="通过access_token调用接口"></a>通过access_token调用接口</h2><p>获取access_token后，进行接口调用，有以下前提：<br>access_token有效且未超时；如果access_token失效，则通过refresh_token重新同步。若refresh_token也失效了则需要用户重新授权登录。</p><h3 id="Eg-通过UID获取用户基本信息"><a href="#Eg-通过UID获取用户基本信息" class="headerlink" title="Eg.通过UID获取用户基本信息"></a>Eg.通过UID获取用户基本信息</h3><h3 id="请求方法"><a href="#请求方法" class="headerlink" title="请求方法"></a>请求方法</h3><p><code>https://apihost/user?access_token=ak_1&amp;uid=10024</code></p><h3 id="正确的返回"><a href="#正确的返回" class="headerlink" title="正确的返回"></a>正确的返回</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">"code"</span>:<span class="number">200</span>,   </span><br><span class="line">   <span class="attr">"msg"</span>:<span class="string">"ok"</span>,   </span><br><span class="line">   <span class="attr">"data"</span>:&#123;</span><br><span class="line">       <span class="attr">"username"</span>:<span class="string">"zhangsan"</span>,</span><br><span class="line">       <span class="attr">"age"</span>:<span class="number">28</span>,</span><br><span class="line">       <span class="attr">"address"</span>:<span class="string">"xx路xx号"</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="错误返回样例：-2"><a href="#错误返回样例：-2" class="headerlink" title="错误返回样例："></a>错误返回样例：</h3><p><code>{&quot;code&quot;:400,&quot;msg&quot;:&quot;invalid access_token&quot;}</code></p><h2 id="注意事项RISK-CONTROL"><a href="#注意事项RISK-CONTROL" class="headerlink" title="注意事项RISK CONTROL"></a>注意事项RISK CONTROL</h2><ol><li>access_token 为用户授权客户端发起接口调用的凭证（相当于用户登录态），存储在客户端，可能出现恶意获取access_token 后导致的用户数据泄漏、用户微信相关接口功能被恶意发起等行为；</li><li>refresh_token 为用户授权客户端应用的长效凭证，仅用于刷新access_token，但泄漏后相当于access_token 泄漏，风险同上。</li><li>单点/多点登录。介于我们当前的设计不考虑单点登录的问题，也就是说同一个账号在不同的客户端都可以同时登录，并且生成不同的token以供使用每个客户端程序维护自己的一套token即可。倘若要实现单点登录则在用户授权的时候做排重判断，如果已在其他重点登录则清空该重点的token，并且为当前链接生成新token对即可。具体情况shi</li><li>用户信息跟新，针对我们当前的授权方式一旦用户修改的密码，则要清空该用户所有终端的token，让其重新授权。这也是为什么要设计这套有状态的token机制主要原因</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;设计需求&quot;&gt;&lt;a href=&quot;#设计需求&quot; class=&quot;headerlink&quot; title=&quot;设计需求&quot;&gt;&lt;/a&gt;设计需求&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;统计在线列表，可以随时的踢下线，让客户端缓存的token失效&lt;/li&gt;
&lt;li&gt;30天内无需重新登录，默认可无限期延续&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Token生成方案&quot;&gt;&lt;a href=&quot;#Token生成方案&quot; class=&quot;headerlink&quot; title=&quot;Token生成方案&quot;&gt;&lt;/a&gt;Token生成方案&lt;/h2&gt;
    
    </summary>
    
      <category term="算法" scheme="https://blog.fanfq.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://blog.fanfq.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="openapi" scheme="https://blog.fanfq.com/tags/openapi/"/>
    
  </entry>
  
  <entry>
    <title>RESTful API Best Practices</title>
    <link href="https://blog.fanfq.com/api/RESTful_API_Best_Practices.html"/>
    <id>https://blog.fanfq.com/api/RESTful_API_Best_Practices.html</id>
    <published>2018-10-30T01:14:33.000Z</published>
    <updated>2018-11-13T10:14:21.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="URL-设计"><a href="#URL-设计" class="headerlink" title="URL 设计"></a>URL 设计</h2><h3 id="动词-宾语"><a href="#动词-宾语" class="headerlink" title="动词 + 宾语"></a>动词 + 宾语</h3><p>RESTful 的核心思想就是，客户端发出的数据操作指令都是”动词 + 宾语”的结构。比如，GET /articles这个命令，GET是动词，/articles是宾语。</p><p>动词通常就是五种 HTTP 方法，对应 CRUD 操作。</p><p>GET：读取（Read）<br>POST：新建（Create）<br>PUT：更新（Update）<br>PATCH：更新（Update），通常是部分更新<br>DELETE：删除（Delete）<br>根据 HTTP 规范，动词一律大写。</p><h3 id="动词的覆盖"><a href="#动词的覆盖" class="headerlink" title="动词的覆盖"></a>动词的覆盖</h3><p>有些客户端只能使用GET和POST这两种方法。服务器必须接受POST模拟其他三个方法（PUT、PATCH、DELETE）。</p><p>这时，客户端发出的 HTTP 请求，要加上X-HTTP-Method-Override属性，告诉服务器应该使用哪一个动词，覆盖POST方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /api/Person/4 HTTP/1.1  </span><br><span class="line">X-HTTP-Method-Override: PUT</span><br></pre></td></tr></table></figure><p>上面代码中，X-HTTP-Method-Override指定本次请求的方法是PUT，而不是POST。</p><h3 id="宾语必须是名词"><a href="#宾语必须是名词" class="headerlink" title="宾语必须是名词"></a>宾语必须是名词</h3><p>宾语就是 API 的 URL，是 HTTP 动词作用的对象。它应该是名词，不能是动词。比如，/articles这个 URL 就是正确的，而下面的 URL 不是名词，所以都是错误的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/getAllCars</span><br><span class="line">/createNewCar</span><br><span class="line">/deleteAllRedCars</span><br></pre></td></tr></table></figure></p><h3 id="复数-URL"><a href="#复数-URL" class="headerlink" title="复数 URL"></a>复数 URL</h3><p>既然 URL 是名词，那么应该使用复数，还是单数？</p><p>这没有统一的规定，但是常见的操作是读取一个集合，比如GET /articles（读取所有文章），这里明显应该是复数。</p><p>为了统一起见，建议都使用复数 URL，比如GET /articles/2要好于GET /article/2。</p><h3 id="避免多级-URL"><a href="#避免多级-URL" class="headerlink" title="避免多级 URL"></a>避免多级 URL</h3><p>常见的情况是，资源需要多级分类，因此很容易写出多级的 URL，比如获取某个作者的某一类文章。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /authors/12/categories/2</span><br></pre></td></tr></table></figure><p>这种 URL 不利于扩展，语义也不明确，往往要想一会，才能明白含义。</p><p>更好的做法是，除了第一级，其他级别都用查询字符串表达。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /authors/12?categories=2</span><br></pre></td></tr></table></figure><p>下面是另一个例子，查询已发布的文章。你可能会设计成下面的 URL。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /articles/published</span><br></pre></td></tr></table></figure><p>查询字符串的写法明显更好。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /articles?published=true</span><br></pre></td></tr></table></figure><h2 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h2><h3 id="状态码必须精确"><a href="#状态码必须精确" class="headerlink" title="状态码必须精确"></a>状态码必须精确</h3><p>客户端的每一次请求，服务器都必须给出回应。回应包括 HTTP 状态码和数据两部分。</p><p>HTTP 状态码就是一个三位数，分成五个类别。</p><p>1xx：相关信息<br>2xx：操作成功<br>3xx：重定向<br>4xx：客户端错误<br>5xx：服务器错误<br>这五大类总共包含100多种状态码，覆盖了绝大部分可能遇到的情况。每一种状态码都有标准的（或者约定的）解释，客户端只需查看状态码，就可以判断出发生了什么情况，所以服务器应该返回尽可能精确的状态码。</p><p>API 不需要1xx状态码，下面介绍其他四类状态码的精确含义。</p><h3 id="2xx-状态码"><a href="#2xx-状态码" class="headerlink" title="2xx 状态码"></a>2xx 状态码</h3><p>200状态码表示操作成功，但是不同的方法可以返回更精确的状态码。</p><p>GET: 200 OK<br>POST: 201 Created<br>PUT: 200 OK<br>PATCH: 200 OK<br>DELETE: 204 No Content<br>上面代码中，POST返回201状态码，表示生成了新的资源；DELETE返回204状态码，表示资源已经不存在。</p><p>此外，202 Accepted状态码表示服务器已经收到请求，但还未进行处理，会在未来再处理，通常用于异步操作。下面是一个例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 202 Accepted</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;task&quot;: &#123;</span><br><span class="line">    &quot;href&quot;: &quot;/api/company/job-management/jobs/2130040&quot;,</span><br><span class="line">    &quot;id&quot;: &quot;2130040&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3xx-状态码"><a href="#3xx-状态码" class="headerlink" title="3xx 状态码"></a>3xx 状态码</h3><p>API 用不到301状态码（永久重定向）和302状态码（暂时重定向，307也是这个含义），因为它们可以由应用级别返回，浏览器会直接跳转，API 级别可以不考虑这两种情况。</p><p>API 用到的3xx状态码，主要是303 See Other，表示参考另一个 URL。它与302和307的含义一样，也是”暂时重定向”，区别在于302和307用于GET请求，而303用于POST、PUT和DELETE请求。收到303以后，浏览器不会自动跳转，而会让用户自己决定下一步怎么办。下面是一个例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 303 See Other</span><br><span class="line">Location: /api/orders/12345</span><br></pre></td></tr></table></figure><h3 id="4xx-状态码"><a href="#4xx-状态码" class="headerlink" title="4xx 状态码"></a>4xx 状态码</h3><p>4xx状态码表示客户端错误，主要有下面几种。</p><p>400 Bad Request：服务器不理解客户端的请求，未做任何处理。</p><p>401 Unauthorized：用户未提供身份验证凭据，或者没有通过身份验证。</p><p>403 Forbidden：用户通过了身份验证，但是不具有访问资源所需的权限。</p><p>404 Not Found：所请求的资源不存在，或不可用。</p><p>405 Method Not Allowed：用户已经通过身份验证，但是所用的 HTTP 方法不在他的权限之内。</p><p>410 Gone：所请求的资源已从这个地址转移，不再可用。</p><p>415 Unsupported Media Type：客户端要求的返回格式不支持。比如，API 只能返回 JSON 格式，但是客户端要求返回 XML 格式。</p><p>422 Unprocessable Entity ：客户端上传的附件无法处理，导致请求失败。</p><p>429 Too Many Requests：客户端的请求次数超过限额。</p><h3 id="5xx-状态码"><a href="#5xx-状态码" class="headerlink" title="5xx 状态码"></a>5xx 状态码</h3><p>5xx状态码表示服务端错误。一般来说，API 不会向用户透露服务器的详细信息，所以只要两个状态码就够了。</p><p>500 Internal Server Error：客户端请求有效，服务器处理时发生了意外。</p><p>503 Service Unavailable：服务器无法处理请求，一般用于网站维护状态。</p><h2 id="服务器回应"><a href="#服务器回应" class="headerlink" title="服务器回应"></a>服务器回应</h2><h3 id="不要返回纯本文"><a href="#不要返回纯本文" class="headerlink" title="不要返回纯本文"></a>不要返回纯本文</h3><p>API 返回的数据格式，不应该是纯文本，而应该是一个 JSON 对象，因为这样才能返回标准的结构化数据。所以，服务器回应的 HTTP 头的Content-Type属性要设为application/json。</p><p>客户端请求时，也要明确告诉服务器，可以接受 JSON 格式，即请求的 HTTP 头的ACCEPT属性也要设成application/json。下面是一个例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /orders/2 HTTP/1.1 </span><br><span class="line">Accept: application/json</span><br></pre></td></tr></table></figure><h3 id="发生错误时，不要返回-200-状态码"><a href="#发生错误时，不要返回-200-状态码" class="headerlink" title="发生错误时，不要返回 200 状态码"></a>发生错误时，不要返回 200 状态码</h3><p>有一种不恰当的做法是，即使发生错误，也返回200状态码，把错误信息放在数据体里面，就像下面这样。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: &quot;failure&quot;,</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">    &quot;error&quot;: &quot;Expected at least two items in list.&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上面代码中，解析数据体以后，才能得知操作失败。</p><p>这张做法实际上取消了状态码，这是完全不可取的。正确的做法是，状态码反映发生的错误，具体的错误信息放在数据体里面返回。下面是一个例子。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 400 Bad Request</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;error&quot;: &quot;Invalid payoad.&quot;,</span><br><span class="line">  &quot;detail&quot;: &#123;</span><br><span class="line">     &quot;surname&quot;: &quot;This field is required.&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong><span class="label danger">而我的做法是事先定义好返回数据的规范如下：</span></strong> </p><table><thead><tr><th>参数</th><th>定义</th><th>描述</th></tr></thead><tbody><tr><td>code</td><td>状态码</td><td>定义200为成功，其他均为失败。其具体缘由体现在msg内容</td></tr><tr><td>msg</td><td>返回信息</td><td>用户自定义的消息简述</td></tr><tr><td>data</td><td>返回对象</td><td>该字段承载着各种的数据，最终前端显示的数据都是从这个参数中获取</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">“code”:200,</span><br><span class="line">“msg”:”correct request”,</span><br><span class="line">“data”,null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HTTP/1.1 500 OK</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">“code”:500,</span><br><span class="line">“msg”:”incorrect request”,</span><br><span class="line">“data”,null</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="提供链接"><a href="#提供链接" class="headerlink" title="提供链接"></a>提供链接</h3><p>API 的使用者未必知道，URL 是怎么设计的。一个解决方法就是，在回应中，给出相关链接，便于下一步操作。这样的话，用户只要记住一个 URL，就可以发现其他的 URL。这种方法叫做 HATEOAS。</p><p>举例来说，GitHub 的 API 都在 api.github.com 这个域名。访问它，就可以得到其他 URL。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  &quot;feeds_url&quot;: &quot;https://api.github.com/feeds&quot;,</span><br><span class="line">  &quot;followers_url&quot;: &quot;https://api.github.com/user/followers&quot;,</span><br><span class="line">  &quot;following_url&quot;: &quot;https://api.github.com/user/following&#123;/target&#125;&quot;,</span><br><span class="line">  &quot;gists_url&quot;: &quot;https://api.github.com/gists&#123;/gist_id&#125;&quot;,</span><br><span class="line">  &quot;hub_url&quot;: &quot;https://api.github.com/hub&quot;,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上面的回应中，挑一个 URL 访问，又可以得到别的 URL。对于用户来说，不需要记住 URL 设计，只要从 api.github.com 一步步查找就可以了。</p><p>HATEOAS 的格式没有统一规定，上面例子中，GitHub 将它们与其他属性放在一起。更好的做法应该是，将相关链接与其他属性分开。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: &quot;In progress&quot;,</span><br><span class="line">   &quot;links&quot;: &#123;[</span><br><span class="line">    &#123; &quot;rel&quot;:&quot;cancel&quot;, &quot;method&quot;: &quot;delete&quot;, &quot;href&quot;:&quot;/api/status/12345&quot; &#125; ,</span><br><span class="line">    &#123; &quot;rel&quot;:&quot;edit&quot;, &quot;method&quot;: &quot;put&quot;, &quot;href&quot;:&quot;/api/status/12345&quot; &#125;</span><br><span class="line">  ]&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>RESTful API Design: 13 Best Practices to Make Your Users Happy, by Florimond Manca<br>API design, by MicroSoft Azure<br><a href="http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="api" scheme="https://blog.fanfq.com/categories/api/"/>
    
    
      <category term="design" scheme="https://blog.fanfq.com/tags/design/"/>
    
      <category term="api" scheme="https://blog.fanfq.com/tags/api/"/>
    
  </entry>
  
  <entry>
    <title>Internal APIs encrypt Method V1.0</title>
    <link href="https://blog.fanfq.com/InternalAPIs_encrypt_Method_V1.0.html"/>
    <id>https://blog.fanfq.com/InternalAPIs_encrypt_Method_V1.0.html</id>
    <published>2018-10-29T13:56:43.000Z</published>
    <updated>2018-11-07T01:11:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="简单对称密码加密解密"><a href="#简单对称密码加密解密" class="headerlink" title="简单对称密码加密解密"></a>简单对称密码加密解密</h2><p>2018/10/19 我们发现大量的非法不带参数的Http请求访问我们的 apihost, 请求日志文件如下所示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">183.223.44.221 - - [19/Oct/2018:16:47:32 +0800] &quot;POST /api_interface? HTTP/1.1&quot; 200 174 &quot;-&quot; &quot;okhttp/3.10.0&quot;</span><br><span class="line">请求者IP：183.223.44.221 </span><br><span class="line">请求接口：api_interface</span><br><span class="line">请求方式：POST</span><br><span class="line">请求者UA：okhttp/3.10.0</span><br></pre></td></tr></table></figure><p>问题引申：既然是非法请求，为什么黑客没有带参数的请求？<br>实际上这是一个很好的问题，如果接口没有做任何安全处理的话，黑客通过抓包很容易拿到请求参数规则，然后通过模拟请求达到目的。一旦接口做过”特殊工艺”处理了，黑客即将无处是从了。最终他们的心态都是从破解到放弃这样一个过程。</p><a id="more"></a><h2 id="正确的请求姿势："><a href="#正确的请求姿势：" class="headerlink" title="正确的请求姿势："></a>正确的请求姿势：</h2><p>实际上我们的设计接口的时候会有一个统一的接收参数 params 用来接收我们的数据，正确的请求如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">183.223.44.221 - - [19/Oct/2018:16:47:32 +0800] &quot;POST /api_interface?params=sM4AOVdWfPE4DxkXGEs8VFmEsZRgy58UYDPD7PjVYQXx1GEFrbjXMo11fb9x6ppwuaAeXV3n2DtoW4lG22nM0g HTTP/1.1&quot; 200 174 &quot;-&quot; &quot;okhttp/3.10.0&quot;</span><br><span class="line">请求者IP：183.223.44.221 </span><br><span class="line">请求接口：api_interface?params=sM4AOVdWfPE4DxkXGEs8VFmEsZRgy58UYDPD7PjVYQXx1GEFrbjXMo11fb9x6ppwuaAeXV3n2DtoW4lG22nM0g</span><br><span class="line">请求方式：POST</span><br><span class="line">请求者UA：okhttp/3.10.0</span><br></pre></td></tr></table></figure><h2 id="拓扑结构："><a href="#拓扑结构：" class="headerlink" title="拓扑结构："></a>拓扑结构：</h2><p>什么请求者IP,请求方式，UA都不是重点。重点在于我们的接口都会有一个params的参数，而这个参数的本身是通过加密算法形成的，即使黑客捕获到这串没有意义的密文也头疼。因为我们和客户端程序有规定所有请求的参数必须要用公钥加密后再通过特点的算法传递，同时服务器端返回的数据也是通过这套算法加密后传输。拓扑结构如下图。</p><img src="/uploads/WX20181029-223437@2x.png"><h2 id="为什么要数据加密？"><a href="#为什么要数据加密？" class="headerlink" title="为什么要数据加密？"></a>为什么要数据加密？</h2><p>安全，安全，安全。</p><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p>现在通过一个示例完整的描述一下我们的接口设计中加密解密过程。</p><p><strong>公钥</strong><br>上文中说道，我们同时约定了一套公钥给服务器端与客户端，为了配合下面的算法使用所以我们采用Int 类型的数字。现在定义为 KEY = 110; 为了确保安全性这个KEY只有内部知道。</p><p><strong>算法</strong></p><ul><li>XOR （with KEY）</li><li>BASE64 (encode/decode)</li><li>URLEncode/URLDecode</li></ul><h2 id="Eg-客户端-zhangsan-执行登录请求"><a href="#Eg-客户端-zhangsan-执行登录请求" class="headerlink" title="Eg.客户端 zhangsan 执行登录请求"></a>Eg.客户端 zhangsan 执行登录请求</h2><p><strong>将要发送的数据:</strong><br><code>{username:zhangsan,password:123456,action:login}</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String,String&gt; reqMap = <span class="keyword">new</span> HashMap&lt;String,String&gt;();</span><br><span class="line"><span class="keyword">int</span> key = <span class="number">110</span>;<span class="comment">//客户端与服务器端共同约定的公钥</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Before</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">be</span><span class="params">()</span> </span>&#123;</span><br><span class="line">reqMap.put(<span class="string">"username"</span>, <span class="string">"zhangsan"</span>);</span><br><span class="line">reqMap.put(<span class="string">"password"</span>, <span class="string">"123456"</span>);</span><br><span class="line">reqMap.put(<span class="string">"action"</span>, <span class="string">"login"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>加密算法 （java实现）</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.xor</span></span><br><span class="line"><span class="keyword">byte</span>[] byteArry = reqMap.toString().getBytes();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; byteArry.length; i++) &#123;</span><br><span class="line">    byteArry[i] = (<span class="keyword">byte</span>) (byteArry[i] ^ key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.base64.ecode</span></span><br><span class="line">String encode = <span class="keyword">new</span> BASE64Encoder().encode(byteArry);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.url.encode</span></span><br><span class="line">String dist = URLEncoder.encode(encode, <span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"params="</span>+dist);</span><br></pre></td></tr></table></figure></p><p>输出的params为:<br><code>params=FR4PHR0ZARwKU19cXVpbWEJODw0aBwEAUwIBCQcAQk4bHQscAA8DC1MUBg8ACR0PABM%3D</code></p><p><strong>解密算法 （java实现）</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">String params = <span class="string">"FR4PHR0ZARwKU19cXVpbWEJODw0aBwEAUwIBCQcAQk4bHQscAA8DC1MUBg8ACR0PABM%3D"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.url.decode</span></span><br><span class="line">String decode = URLDecoder.decode(params, <span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.base64.decode</span></span><br><span class="line"><span class="keyword">byte</span>[] byteArry = <span class="keyword">new</span> BASE64Decoder().decodeBuffer(decode);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.xor</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; byteArry.length; i++) &#123;</span><br><span class="line">    byteArry[i] = (<span class="keyword">byte</span>) (byteArry[i] ^ key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"dist:"</span>+<span class="keyword">new</span> String(byteArry));</span><br></pre></td></tr></table></figure></p><p>输出的dist为：<br><code>dist={username:zhangsan,password:123456,action:login}</code></p><h2 id="对称加密优缺点"><a href="#对称加密优缺点" class="headerlink" title="对称加密优缺点"></a>对称加密优缺点</h2><p>对称加密算法的优点是算法公开、计算量小、加密速度快、加密效率高。适用于简单的报文加密，同时也使用用大报文加密。<br>对称加密算法的缺点是在数据传送前，发送方和接收方必须商定好秘钥，然后使双方都能保存好秘钥。其次如果一方的秘钥被泄露，那么加密信息也就不安全了。</p><h2 id="常用的对称密钥算法"><a href="#常用的对称密钥算法" class="headerlink" title="常用的对称密钥算法"></a>常用的对称密钥算法</h2><p>加密和解密都使用同一把秘钥，这种加密方法称为对称加密，也称为单密钥加密。<br>简单理解为：加密解密都是同一把钥匙。<br>AES、DES、3DES、TDEA、Blowfish、RC2、RC4、RC5、IDEA、SKIPJACK 等。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简单对称密码加密解密&quot;&gt;&lt;a href=&quot;#简单对称密码加密解密&quot; class=&quot;headerlink&quot; title=&quot;简单对称密码加密解密&quot;&gt;&lt;/a&gt;简单对称密码加密解密&lt;/h2&gt;&lt;p&gt;2018/10/19 我们发现大量的非法不带参数的Http请求访问我们的 apihost, 请求日志文件如下所示。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;183.223.44.221 - - [19/Oct/2018:16:47:32 +0800] &amp;quot;POST /api_interface? HTTP/1.1&amp;quot; 200 174 &amp;quot;-&amp;quot; &amp;quot;okhttp/3.10.0&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;请求者IP：183.223.44.221 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;请求接口：api_interface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;请求方式：POST&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;请求者UA：okhttp/3.10.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;问题引申：既然是非法请求，为什么黑客没有带参数的请求？&lt;br&gt;实际上这是一个很好的问题，如果接口没有做任何安全处理的话，黑客通过抓包很容易拿到请求参数规则，然后通过模拟请求达到目的。一旦接口做过”特殊工艺”处理了，黑客即将无处是从了。最终他们的心态都是从破解到放弃这样一个过程。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="https://blog.fanfq.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://blog.fanfq.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="openapi" scheme="https://blog.fanfq.com/tags/openapi/"/>
    
  </entry>
  
  <entry>
    <title>Open APIs encrypt Method V1.1</title>
    <link href="https://blog.fanfq.com/%E7%AE%97%E6%B3%95/OpenAPIs_encrypt_Method_V1.1.html"/>
    <id>https://blog.fanfq.com/算法/OpenAPIs_encrypt_Method_V1.1.html</id>
    <published>2018-10-29T06:57:41.000Z</published>
    <updated>2018-11-06T14:17:45.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="非对称密码加密解密-amp-签名机制-amp-重放攻击"><a href="#非对称密码加密解密-amp-签名机制-amp-重放攻击" class="headerlink" title="非对称密码加密解密&amp;签名机制&amp;重放攻击"></a>非对称密码加密解密&amp;签名机制&amp;重放攻击</h2><p>《Internal APIs encrypt Method V1.0》 文章中已经描述了我们正在线上产品所用的加密算法，实际上他不仅仅是解决防参数篡改的问题，同时也解决了数据隐私保护的问题。即便如此这套算法还是有漏洞的，也是做所以定义为 Internal APIs的主要原因了，由于只提供给内部使用所以安全性暂且得到保障，一旦提供给外部使用则全盘”露馅”了,这也是我为什么要编辑此篇《Open APIs encrypt Method V1.1》文章了。</p><p>其中最为致命的问题是要在客户端代码中公开自己的密钥以及算法，一旦黑客从客户端程序中反编译源码，这样就会导致整个加密体系的崩盘，而且连补救的措施都没有。</p><p>同时第二个比较严重的问题就是黑客从放攻击的问题，黑客在抓取到包体后，直接再次提交请求导致服务器端不断受到重复请求。</p><p>所以基于以上两点，我们了解到《Internal APIs encrypt Method V1.0》所存在的问题如下表所示</p><a id="more"></a><table><thead><tr><th>问题描述</th><th>安全性</th><th>解决方案</th></tr></thead><tbody><tr><td>脱敏（数据隐私保护）</td><td>安全</td><td></td></tr><tr><td>完整性 （防参数篡改）</td><td>安全</td><td></td></tr><tr><td>重放攻击 （重复提交）</td><td>未解决</td><td>timestamp + nonce</td></tr><tr><td>对称密钥</td><td>不够安全</td><td>非对称密钥</td></tr></tbody></table><h2 id="签名机制："><a href="#签名机制：" class="headerlink" title="签名机制："></a>签名机制：</h2><p>所以本文重点就是要解决 重放攻击 (重复提交) &amp; 密钥安全 这两个问题。在此之前再介绍一种常用的解决数据传输过程中确保完整性 （防参数篡改）的解决方案，过程如下：</p><ol><li>客户端使用约定好的秘钥对传输参数进行加密，得到签名值signature，并且将签名值也放入请求参数中，发送请求给服务端</li><li>服务端接收客户端的请求，然后使用约定好的秘钥对请求的参数（除了signature以外）再次进行签名，得到签名值autograph。</li><li>服务端对比signature和autograph的值，如果对比一致，认定为合法请求。如果对比不一致，说明参数被篡改，认定为非法请求。</li></ol><h3 id="Eg-客户端-zhangsan-执行登录请求"><a href="#Eg-客户端-zhangsan-执行登录请求" class="headerlink" title="Eg.客户端 zhangsan 执行登录请求"></a>Eg.客户端 zhangsan 执行登录请求</h3><p>将要发送的数据：<br><code>apihost?action=login&amp;username=zhangsan&amp;password=123456&amp;sign=</code></p><h3 id="签名算法：-java-实现"><a href="#签名算法：-java-实现" class="headerlink" title="签名算法：(java 实现)"></a>签名算法：(java 实现)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.对除sign外的所有参数按字典排序 对所有待签名参数按照字段名的 ASCII码从小到大排序（字典序）后</span></span><br><span class="line">String[] arr =  <span class="keyword">new</span> String[] &#123; <span class="string">"username=zhangsan"</span>,<span class="string">"password=123456"</span>, <span class="string">"action=login"</span>&#125;;</span><br><span class="line">Arrays.sort(arr); </span><br><span class="line"></span><br><span class="line"><span class="comment">//2.将排序后的结果拼接成一个字符串（即key1=value1&amp;key2=value2…）</span></span><br><span class="line">String content = arr[<span class="number">0</span>].concat(<span class="string">"&amp;"</span>+arr[<span class="number">1</span>]).concat(<span class="string">"&amp;"</span>+arr[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、将字符串进行sha1加密得到sign值</span></span><br><span class="line">MessageDigest md = <span class="keyword">null</span>;</span><br><span class="line">String sign = <span class="keyword">null</span>;  </span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    md = MessageDigest.getInstance(<span class="string">"SHA-1"</span>);</span><br><span class="line">    <span class="keyword">byte</span>[] digest = md.digest(content.toString().getBytes());</span><br><span class="line">    sign = StrUtil.byteToStr(digest);</span><br><span class="line">&#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"sign="</span>+sign);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出的sign为:<br><code>sign=ebb36366bd9d8656e2327ca913a4f854f35a0e95</code></p><h3 id="最终请求服务器的数据为："><a href="#最终请求服务器的数据为：" class="headerlink" title="最终请求服务器的数据为："></a>最终请求服务器的数据为：</h3><p><code>apihost?action=login&amp;username=zhangsan&amp;password=123456&amp;sign=ebb36366bd9d8656e2327ca913a4f854f35a0e95</code></p><p>当服务器拿到数据后再进行同样的算法然后再匹配sign值是否一致，如果对比一致，认定为合法请求。如果对比不一致，说明参数被篡改，认定为非法请求。</p><h3 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h3><ol><li>参数排序很重要，不同的排序会导致签名值不一致。所以要事先规定好排序算法。</li><li>sign算法也要事先规定好，示例中是一个简单的算法并没有使用到密钥。实际过程中可能更加复杂签名的秘钥我们可以使用很多方案，可以采用对称加密或者非对称加密。</li><li>因为黑客不知道签名的秘钥，也不知道签名的算法，所以即使截取到请求数据，对请求参数进行篡改，但是却无法对参数进行签名，无法得到修改后参数的签名值signature。</li><li>示例中并没有解决数据脱敏的问题，应用过程中可以根据实际情况再进行脱敏算法。</li></ol><h2 id="防止重放攻击"><a href="#防止重放攻击" class="headerlink" title="防止重放攻击"></a>防止重放攻击</h2><h3 id="基于timestamp的方案"><a href="#基于timestamp的方案" class="headerlink" title="基于timestamp的方案"></a>基于timestamp的方案</h3><p>每次HTTP请求，都需要加上timestamp参数，然后把timestamp和其他参数一起进行数字签名。因为一次正常的HTTP请求，从发出到达服务器一般都不会超过60s，所以服务器收到HTTP请求之后，首先判断时间戳参数与当前时间相比较，是否超过了60s，如果超过了则认为是非法的请求。</p><p>一般情况下，黑客从抓包重放请求耗时远远超过了60s，所以此时请求中的timestamp参数已经失效了。</p><p>如果黑客修改timestamp参数为当前的时间戳，则signature参数对应的数字签名就会失效，因为黑客不知道签名秘钥，没有办法生成新的数字签名。</p><p>但这种方式的漏洞也是显而易见的，如果在60s之后进行重放攻击，那就没办法了，所以这种方式不能保证请求仅一次有效。</p><h3 id="基于nonce的方案"><a href="#基于nonce的方案" class="headerlink" title="基于nonce的方案"></a>基于nonce的方案</h3><p>nonce的意思是仅一次有效的随机字符串，要求每次请求时，该参数要保证不同，所以该参数一般与时间戳有关，我们这里为了方便起见，直接使用时间戳的16进制，实际使用时可以加上客户端的ip地址，mac地址等信息做个哈希之后，作为nonce参数。</p><p>我们将每次请求的nonce参数存储到一个“集合”中，可以json格式存储到数据库或缓存中。</p><p>每次处理HTTP请求时，首先判断该请求的nonce参数是否在该“集合”中，如果存在则认为是非法请求。</p><p>nonce参数在首次请求时，已经被存储到了服务器上的“集合”中，再次发送请求会被识别并拒绝。</p><p>nonce参数作为数字签名的一部分，是无法篡改的，因为黑客不清楚token，所以不能生成新的sign。</p><p>这种方式也有很大的问题，那就是存储nonce参数的“集合”会越来越大，验证nonce是否存在“集合”中的耗时会越来越长。我们不能让nonce“集合”无限大，所以需要定期清理该“集合”，但是一旦该“集合”被清理，我们就无法验证被清理了的nonce参数了。也就是说，假设该“集合”平均1天清理一次的话，我们抓取到的该url，虽然当时无法进行重放攻击，但是我们还是可以每隔一天进行一次重放攻击的。而且存储24小时内，所有请求的“nonce”参数，也是一笔不小的开销。</p><h3 id="基于timestamp和nonce的方案"><a href="#基于timestamp和nonce的方案" class="headerlink" title="基于timestamp和nonce的方案"></a>基于timestamp和nonce的方案</h3><p>nonce的一次性可以解决timestamp参数60s的问题，timestamp可以解决nonce参数“集合”越来越大的问题。<br>防止重放攻击一般和防止请求参数被串改一起做，请求的Headers数据如下图所示。</p><p>我们在timestamp方案的基础上，加上nonce参数，因为timstamp参数对于超过60s的请求，都认为非法请求，所以我们只需要存储60s的nonce参数的“集合”即可。</p><h4 id="HTTP请求头，参数说明："><a href="#HTTP请求头，参数说明：" class="headerlink" title="HTTP请求头，参数说明："></a>HTTP请求头，参数说明：</h4><p>由于每次数据请求都要带上这几个参数，所以直接将这几个参数设置在请求头中，从而简化body长度；当然也可以在去请求参数中拼凑视具体情况而定。</p><table><thead><tr><th>参数名</th><th>参数说明</th><th>备注</th></tr></thead><tbody><tr><td>token</td><td>用户令牌，用于认证用户身份</td><td>稍微长一点的文本</td></tr><tr><td>sign</td><td>签名，用于监测请求数据的完整性</td><td>中等文本</td></tr><tr><td>timestamp</td><td>请求时间戳</td><td>根据的约定的保留毫秒或者精度到秒</td></tr><tr><td>nonce</td><td>请求随机字符串: MD5(时间戳+随机字符)</td><td>单位时间内产生不重复字符就好</td></tr></tbody></table><p>有关token的详细说明，请查看《Access Token &amp; Refresh Token 机制》这篇文章</p><h4 id="服务器端校验："><a href="#服务器端校验：" class="headerlink" title="服务器端校验："></a>服务器端校验：</h4><p>服务器端的校验配置通常会放在Filter / Interceptor 中,作为全局的管理。<br>nonce参数通常会存在redis中，并且设置TTL过期时间。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">String token = request.getHeader(<span class="string">"token"</span>);</span><br><span class="line">String timestamp = request.getHeader(<span class="string">"timestamp"</span>);</span><br><span class="line">String nonce = request.getHeader(<span class="string">"nonce"</span>);</span><br><span class="line">String sign = request.getHeader(<span class="string">"sign"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//时间限制配置 s</span></span><br><span class="line"><span class="keyword">int</span> timeLimit = <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求头参数非空验证</span></span><br><span class="line"><span class="keyword">if</span> (StringUtils.isEmpty(token) || StringUtils.isEmpty(timestamp) || StringUtils.isEmpty(nonce) || StringUtils.isEmpty(sign)) &#123;</span><br><span class="line">    ctx.setResponseBody(JSON.toJSONString(<span class="keyword">new</span> Result(<span class="string">"-1"</span>, <span class="string">"请求头参数不正确"</span>)));</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求时间和现在时间对比验证，发起请求时间和服务器时间不能超过timeLimit秒</span></span><br><span class="line"><span class="keyword">if</span> (StringUtils.timeDiffSeconds(<span class="keyword">new</span> Date(), timestamp) &gt; timeLimit) &#123;</span><br><span class="line">    ctx.setResponseBody(JSON.toJSONString(<span class="keyword">new</span> Result(<span class="string">"-1"</span>, <span class="string">"请求发起时间超过服务器限制"</span>)));</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//验证用户信息</span></span><br><span class="line">UserInfo userInfo = UserInfoUtil.getInfoByToken(token);</span><br><span class="line"><span class="keyword">if</span> (userInfo == <span class="keyword">null</span>) &#123;</span><br><span class="line">    ctx.setResponseBody(JSON.toJSONString(<span class="keyword">new</span> Result(<span class="string">"-1"</span>, <span class="string">"错误的token信息"</span>)));</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//验证相同noce的请求是否已经存在，存在表示为重复请求</span></span><br><span class="line"><span class="keyword">if</span> (NoceUtil.exsit(userInfo, nonce)) &#123;</span><br><span class="line">    ctx.setResponseBody(JSON.toJSONString(<span class="keyword">new</span> Result(<span class="string">"-1"</span>, <span class="string">"重复的请求"</span>)));</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//如果noce没有在缓存中，则需要加入，并设置过期时间为timeLimit秒</span></span><br><span class="line">    NoceUtil.addNoce(userInfo, nonce, timeLimit);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//服务器生成签名与header中签名对比</span></span><br><span class="line">String serverSign = SignUtil.getSign(userinfo, token, timestamp, nonce, request);</span><br><span class="line"><span class="keyword">if</span> (!serverSign.equals(sign)) &#123;</span><br><span class="line">    ctx.setResponseBody(JSON.toJSONString(<span class="keyword">new</span> Result(<span class="string">"-1"</span>, <span class="string">"错误的签名信息"</span>)));</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="非对称密钥"><a href="#非对称密钥" class="headerlink" title="非对称密钥"></a>非对称密钥</h2><h3 id="拓扑结构"><a href="#拓扑结构" class="headerlink" title="拓扑结构"></a>拓扑结构</h3><p>与对称密钥不同，非对称密钥要有一组密钥分别是公钥和私钥，通常情况下公钥加密，私钥解密。公钥可以发布给任意的客户端程序，服务器端则通过私钥解密。以下是非对称密钥的拓扑结构。</p><img src="/uploads/WX20181029-223454@2x.png"><p>如上图所以，发送者用接收方公开出来的公钥PK进行加密。接受方在收到密文后，再用与公钥对应的私钥SK进行解密。同样，密文即便被截获，但是由于截获者只有公钥，没有私钥，他不能进行解密</p><h3 id="非对称加密优缺点"><a href="#非对称加密优缺点" class="headerlink" title="非对称加密优缺点"></a>非对称加密优缺点</h3><p>非对称加密的突出优点是用于解密的密钥（也就是私钥）永远不需要传递给对方。但是，它的缺点也很突出：非对称加密算法复杂，导致加解密速度慢，故只适合小量数据的场合。而对称加密加解密效率高，系统开销小，适合进行大数据量的加解密。由于文件一般比较大，这个特性决定了适合它的加密方式最好是对称加密。</p><h3 id="Eg-RSA对称密钥算法（java实现）"><a href="#Eg-RSA对称密钥算法（java实现）" class="headerlink" title="Eg.RSA对称密钥算法（java实现）"></a>Eg.RSA对称密钥算法（java实现）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.fanfq.util.commons.encrypt.rsa;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.codec.binary.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> java.security.*;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.PKCS8EncodedKeySpec;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.X509EncodedKeySpec;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">&lt;dependency&gt;</span></span><br><span class="line"><span class="comment">    &lt;groupId&gt;commons-codec&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">    &lt;artifactId&gt;commons-codec&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">    &lt;version&gt;1.11&lt;/version&gt;</span></span><br><span class="line"><span class="comment">&lt;/dependency&gt;</span></span><br><span class="line"><span class="comment">https://www.jianshu.com/p/ff8281f034f4</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> fred</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RSAUtil2</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_ALGORITHM = <span class="string">"RSA"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SIGNATURE_ALGORITHM = <span class="string">"MD5withRSA"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PUBLIC_KEY = <span class="string">"RSAPublicKey"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PRIVATE_KEY = <span class="string">"RSAPrivateKey"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] decryptBASE64(String key) &#123;</span><br><span class="line">        <span class="keyword">return</span> Base64.decodeBase64(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encryptBASE64</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Base64.encodeBase64String(bytes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用私钥对信息生成数字签名</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data       加密数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> privateKey 私钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sign</span><span class="params">(String data, String privateKey)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 解密由base64编码的私钥</span></span><br><span class="line">        <span class="keyword">byte</span>[] keyBytes = decryptBASE64(privateKey);</span><br><span class="line">        <span class="comment">// 构造PKCS8EncodedKeySpec对象</span></span><br><span class="line">        PKCS8EncodedKeySpec pkcs8KeySpec = <span class="keyword">new</span> PKCS8EncodedKeySpec(keyBytes);</span><br><span class="line">        <span class="comment">// KEY_ALGORITHM 指定的加密算法</span></span><br><span class="line">        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);</span><br><span class="line">        <span class="comment">// 取私钥匙对象</span></span><br><span class="line">        PrivateKey priKey = keyFactory.generatePrivate(pkcs8KeySpec);</span><br><span class="line">        <span class="comment">// 用私钥对信息生成数字签名</span></span><br><span class="line">        Signature signature = Signature.getInstance(SIGNATURE_ALGORITHM);</span><br><span class="line">        signature.initSign(priKey);</span><br><span class="line">        signature.update(data.getBytes());</span><br><span class="line">        <span class="keyword">return</span> encryptBASE64(signature.sign());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验数字签名</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data      加密数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> publicKey 公钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sign      数字签名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 校验成功返回true 失败返回false</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">verify</span><span class="params">(String data, String publicKey, String sign)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 解密由base64编码的公钥</span></span><br><span class="line">        <span class="keyword">byte</span>[] keyBytes = decryptBASE64(publicKey);</span><br><span class="line">        <span class="comment">// 构造X509EncodedKeySpec对象</span></span><br><span class="line">        X509EncodedKeySpec keySpec = <span class="keyword">new</span> X509EncodedKeySpec(keyBytes);</span><br><span class="line">        <span class="comment">// KEY_ALGORITHM 指定的加密算法</span></span><br><span class="line">        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);</span><br><span class="line">        <span class="comment">// 取公钥匙对象</span></span><br><span class="line">        PublicKey pubKey = keyFactory.generatePublic(keySpec);</span><br><span class="line">        Signature signature = Signature.getInstance(SIGNATURE_ALGORITHM);</span><br><span class="line">        signature.initVerify(pubKey);</span><br><span class="line">        signature.update(data.getBytes());</span><br><span class="line">        <span class="comment">// 验证签名是否正常</span></span><br><span class="line">        <span class="keyword">return</span> signature.verify(decryptBASE64(sign));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] decryptByPrivateKey(<span class="keyword">byte</span>[] data, String key) <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 对密钥解密</span></span><br><span class="line">        <span class="keyword">byte</span>[] keyBytes = decryptBASE64(key);</span><br><span class="line">        <span class="comment">// 取得私钥</span></span><br><span class="line">        PKCS8EncodedKeySpec pkcs8KeySpec = <span class="keyword">new</span> PKCS8EncodedKeySpec(keyBytes);</span><br><span class="line">        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);</span><br><span class="line">        Key privateKey = keyFactory.generatePrivate(pkcs8KeySpec);</span><br><span class="line">        <span class="comment">// 对数据解密</span></span><br><span class="line">        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());</span><br><span class="line">        cipher.init(Cipher.DECRYPT_MODE, privateKey);</span><br><span class="line">        <span class="keyword">return</span> cipher.doFinal(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密&lt;br&gt;</span></span><br><span class="line"><span class="comment">     * 用私钥解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] decryptByPrivateKey(String data, String key)</span><br><span class="line">            <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> decryptByPrivateKey(decryptBASE64(data),key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密&lt;br&gt;</span></span><br><span class="line"><span class="comment">     * 用公钥解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decryptByPublicKey</span><span class="params">(String data, String key)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] datas = decryptBASE64(data);</span><br><span class="line">        <span class="comment">// 对密钥解密</span></span><br><span class="line">        <span class="keyword">byte</span>[] keyBytes = decryptBASE64(key);</span><br><span class="line">        <span class="comment">// 取得公钥</span></span><br><span class="line">        X509EncodedKeySpec x509KeySpec = <span class="keyword">new</span> X509EncodedKeySpec(keyBytes);</span><br><span class="line">        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);</span><br><span class="line">        Key publicKey = keyFactory.generatePublic(x509KeySpec);</span><br><span class="line">        <span class="comment">// 对数据解密</span></span><br><span class="line">        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());</span><br><span class="line">        cipher.init(Cipher.DECRYPT_MODE, publicKey);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String(cipher.doFinal(datas));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密&lt;br&gt;</span></span><br><span class="line"><span class="comment">     * 用公钥加密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encryptByPublicKey</span><span class="params">(String data, String key)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 对公钥解密</span></span><br><span class="line">        <span class="keyword">byte</span>[] keyBytes = decryptBASE64(key);</span><br><span class="line">        <span class="comment">// 取得公钥</span></span><br><span class="line">        X509EncodedKeySpec x509KeySpec = <span class="keyword">new</span> X509EncodedKeySpec(keyBytes);</span><br><span class="line">        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);</span><br><span class="line">        Key publicKey = keyFactory.generatePublic(x509KeySpec);</span><br><span class="line">        <span class="comment">// 对数据加密</span></span><br><span class="line">        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());</span><br><span class="line">        cipher.init(Cipher.ENCRYPT_MODE, publicKey);</span><br><span class="line">        <span class="keyword">return</span> encryptBASE64(cipher.doFinal(data.getBytes()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密&lt;br&gt;</span></span><br><span class="line"><span class="comment">     * 用私钥加密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encryptByPrivateKey</span><span class="params">(String data, String key)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 对密钥解密</span></span><br><span class="line">        <span class="keyword">byte</span>[] keyBytes = decryptBASE64(key);</span><br><span class="line">        <span class="comment">// 取得私钥</span></span><br><span class="line">        PKCS8EncodedKeySpec pkcs8KeySpec = <span class="keyword">new</span> PKCS8EncodedKeySpec(keyBytes);</span><br><span class="line">        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);</span><br><span class="line">        Key privateKey = keyFactory.generatePrivate(pkcs8KeySpec);</span><br><span class="line">        <span class="comment">// 对数据加密</span></span><br><span class="line">        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());</span><br><span class="line">        cipher.init(Cipher.ENCRYPT_MODE, privateKey);</span><br><span class="line">        <span class="keyword">return</span> encryptBASE64(cipher.doFinal(data.getBytes()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取得私钥</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keyMap</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getPrivateKey</span><span class="params">(Map&lt;String, Key&gt; keyMap)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Key key = (Key) keyMap.get(PRIVATE_KEY);</span><br><span class="line">        <span class="keyword">return</span> encryptBASE64(key.getEncoded());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取得公钥</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keyMap</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getPublicKey</span><span class="params">(Map&lt;String, Key&gt; keyMap)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Key key = keyMap.get(PUBLIC_KEY);</span><br><span class="line">        <span class="keyword">return</span> encryptBASE64(key.getEncoded());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化密钥</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Key&gt; <span class="title">initKey</span><span class="params">(<span class="keyword">int</span> length)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        KeyPairGenerator keyPairGen = KeyPairGenerator</span><br><span class="line">                .getInstance(KEY_ALGORITHM);</span><br><span class="line">        <span class="keyword">if</span>(length != <span class="number">2048</span>) length = <span class="number">1024</span>;</span><br><span class="line">        keyPairGen.initialize(length);</span><br><span class="line">        KeyPair keyPair = keyPairGen.generateKeyPair();</span><br><span class="line">        Map&lt;String, Key&gt; keyMap = <span class="keyword">new</span> HashMap(<span class="number">2</span>);</span><br><span class="line">        keyMap.put(PUBLIC_KEY, keyPair.getPublic());<span class="comment">// 公钥</span></span><br><span class="line">        keyMap.put(PRIVATE_KEY, keyPair.getPrivate());<span class="comment">// 私钥</span></span><br><span class="line">        <span class="keyword">return</span> keyMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.fanfq.util.commons.encrypt.rsa;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.security.Key;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RSAUtil2Test</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">private</span> String publicKey;</span><br><span class="line">    <span class="keyword">private</span> String privateKey;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUp</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Map&lt;String, Key&gt; keyMap = RSAUtil2.initKey(<span class="number">2048</span>);</span><br><span class="line">        publicKey = RSAUtil2.getPublicKey(keyMap);</span><br><span class="line">        privateKey = RSAUtil2.getPrivateKey(keyMap);</span><br><span class="line">        System.out.println(<span class="string">"公钥:"</span> + publicKey.length());</span><br><span class="line">        System.out.println(publicKey);</span><br><span class="line">        System.out.println(<span class="string">"私钥:"</span> + privateKey.length());</span><br><span class="line">        System.out.println(privateKey);</span><br><span class="line">        </span><br><span class="line">        ObjectOutputStream oos1 = <span class="keyword">null</span>;  </span><br><span class="line">        ObjectOutputStream oos2 = <span class="keyword">null</span>;  </span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            <span class="comment">/** 用对象流将生成的密钥写入文件 */</span>  </span><br><span class="line">            oos1 = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">"RSA_PUBLIC_KEY"</span>));  </span><br><span class="line">            oos2 = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">"RSA_PRIVATE_KEY"</span>));  </span><br><span class="line">            oos1.writeObject(publicKey);  </span><br><span class="line">            oos2.writeObject(privateKey);  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;  </span><br><span class="line">            <span class="keyword">throw</span> e;  </span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;  </span><br><span class="line">            <span class="comment">/** 清空缓存，关闭文件输出流 */</span>  </span><br><span class="line">            oos1.close();  </span><br><span class="line">            oos2.close();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"\n-------------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"公钥加密——私钥解密"</span>);</span><br><span class="line">        String inputStr = <span class="string">"dounine"</span>;</span><br><span class="line">        String encodedData = RSAUtil2.encryptByPublicKey(inputStr, publicKey);</span><br><span class="line">        <span class="keyword">byte</span>[] decodedData = RSAUtil2.decryptByPrivateKey(encodedData,</span><br><span class="line">                privateKey);</span><br><span class="line">        String outputStr = <span class="keyword">new</span> String(decodedData);</span><br><span class="line">        System.out.println(<span class="string">"加密前: "</span> + inputStr);</span><br><span class="line">        System.out.println(<span class="string">"公钥加密后: "</span> + encodedData);</span><br><span class="line">        System.out.println(<span class="string">"私钥解密后: "</span> + outputStr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSign</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"\n-------------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"私钥加密——公钥解密"</span>);</span><br><span class="line">        String inputStr = <span class="string">"dounine"</span>;</span><br><span class="line">        String encodedData = RSAUtil2.encryptByPrivateKey(inputStr, privateKey);</span><br><span class="line">        String decodedData = RSAUtil2.decryptByPublicKey(encodedData, publicKey);</span><br><span class="line">        System.out.println(<span class="string">"加密前: "</span> + inputStr);</span><br><span class="line">        System.out.println(<span class="string">"私钥加密后: "</span> + encodedData);</span><br><span class="line">        System.out.println(<span class="string">"公钥解密后: "</span> + decodedData);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"\n私钥签名——公钥验证签名"</span>);</span><br><span class="line">        <span class="comment">// 产生签名</span></span><br><span class="line">        String sign = RSAUtil2.sign(<span class="string">"123"</span>, privateKey);</span><br><span class="line">        System.out.println(<span class="string">"私钥签名:("</span>+sign.length()+<span class="string">")"</span> + sign);</span><br><span class="line">        <span class="comment">// 验证签名</span></span><br><span class="line">        <span class="keyword">boolean</span> status = RSAUtil2.verify(encodedData, publicKey, sign);</span><br><span class="line">        System.out.println(<span class="string">"公钥验证签名:"</span> + status);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    RSAUtil2Test rsa = <span class="keyword">new</span> RSAUtil2Test();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      rsa.setUp();</span><br><span class="line">      rsa.test();</span><br><span class="line">      rsa.testSign();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;非对称密码加密解密-amp-签名机制-amp-重放攻击&quot;&gt;&lt;a href=&quot;#非对称密码加密解密-amp-签名机制-amp-重放攻击&quot; class=&quot;headerlink&quot; title=&quot;非对称密码加密解密&amp;amp;签名机制&amp;amp;重放攻击&quot;&gt;&lt;/a&gt;非对称密码加密解密&amp;amp;签名机制&amp;amp;重放攻击&lt;/h2&gt;&lt;p&gt;《Internal APIs encrypt Method V1.0》 文章中已经描述了我们正在线上产品所用的加密算法，实际上他不仅仅是解决防参数篡改的问题，同时也解决了数据隐私保护的问题。即便如此这套算法还是有漏洞的，也是做所以定义为 Internal APIs的主要原因了，由于只提供给内部使用所以安全性暂且得到保障，一旦提供给外部使用则全盘”露馅”了,这也是我为什么要编辑此篇《Open APIs encrypt Method V1.1》文章了。&lt;/p&gt;
&lt;p&gt;其中最为致命的问题是要在客户端代码中公开自己的密钥以及算法，一旦黑客从客户端程序中反编译源码，这样就会导致整个加密体系的崩盘，而且连补救的措施都没有。&lt;/p&gt;
&lt;p&gt;同时第二个比较严重的问题就是黑客从放攻击的问题，黑客在抓取到包体后，直接再次提交请求导致服务器端不断受到重复请求。&lt;/p&gt;
&lt;p&gt;所以基于以上两点，我们了解到《Internal APIs encrypt Method V1.0》所存在的问题如下表所示&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="https://blog.fanfq.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://blog.fanfq.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="openapi" scheme="https://blog.fanfq.com/tags/openapi/"/>
    
  </entry>
  
  <entry>
    <title>关于欧盟GDPR，你需要知道的事！</title>
    <link href="https://blog.fanfq.com/policy/%E5%85%B3%E4%BA%8E%E6%AC%A7%E7%9B%9FGDPR%E4%BD%A0%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B.html"/>
    <id>https://blog.fanfq.com/policy/关于欧盟GDPR你需要知道的事.html</id>
    <published>2018-05-26T01:14:33.000Z</published>
    <updated>2018-11-13T09:16:04.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="/uploads/20180526_GDRP.jpg"><p>欧盟《一般数据保护条例》（GDPR）将于2018年5月25日起正式施行，该条例是近三十年来数据保护立法的最大变动，旨在加强对欧盟境内居民的个人数据和隐私保护。此外，它还将通过统一数据和隐私条例来简化对跨国企业的监管框架。它将取代1995年颁布的《数据保护指令》。</p><p>1995年的《数据保护指令》95/46/EC是欧盟版的隐私保护条例。其主要目标包括协调数据保护立法，以及规范将个人数据转移到欧盟以外的“第三国”的情形。除了其它一系列措施，各个盟国还各自成立独立的公共机构，监督该指令的实施，并作为与企业和公民互动的监管机构。整体而言，该指令符合经济合作与发展协会（OECD）的最初建议以及隐私权是基本人权的核心概念。</p><p>虽然《数据保护指令》旨在团结不同盟国的立法，但这只是一项指令，当置换到各国独立的法律时仍有一定的解释空间。加上当今数据格局的快速变化，尤其是Facebook、LinkedIn等社交平台以及云技术的兴起，势必要升级欧盟地区的监管环境。即将到来的GDPR是一项更大的立法，并且在各个成员国即刻可执行。</p><a id="more"></a><h2 id="条例-vs-指令"><a href="#条例-vs-指令" class="headerlink" title="条例 vs. 指令"></a>条例 vs. 指令</h2><p>这项变化的一个重要特征就是欧盟GDPR是一项条例取代原有的指令。条例直接适用于欧盟各成员国，而对于指令，各成员国有权酌情决定数据保护法的实施。因而，除了严格的数据和隐私保护，条例的实施还将通过在欧盟地区统一数据和隐私法规而简化监管框架。对于跨国企业来说，这将帮助他们在与多个数据和隐私保护机构沟通时消除当地法律之间的不一致性，从而降低行政成本和负担。</p><h2 id="处罚力度加大"><a href="#处罚力度加大" class="headerlink" title="处罚力度加大"></a>处罚力度加大</h2><p>GDPR将继续通过监管机构和法院执行，除了民事补救还有刑事和行政处罚。然而，根据国际隐私专业人士协会的数据，GDPR加大了行政处罚的力度，根据案情情况最高可罚款两千万欧元，或公司年营业额的4%。</p><p>新扩大的管辖权将影响在欧盟地区开展业务的中国企业</p><p>该条例的一个重要特征是新扩大的管辖权，可能会影响到欧盟以外的企业。新条例适用于为欧盟境内的个人提供商品和服务，或监控个人行为（如商业网站或移动应用的运营商）的企业。这一规定将影响很多中国企业。</p><p>GDPR规定同意书将仍是处理个人数据的一个要求，并为同意书设立了更严格的条件。EUDataProtectionLaw.com指出，对这些条件的定义是“数据主体通过申明或一个清晰的肯定动作，在知情的情况下自主、具体而明确地表明自己的意愿，即表示他们同意个人相关数据被处理。”</p><h2 id="规定新权利"><a href="#规定新权利" class="headerlink" title="规定新权利"></a>规定新权利</h2><p>欧盟GDPR还建立了两项新的个人隐私权，“删除权”和“移植权”。删除权是对“被遗忘权”的扩充，让个人有权要求删除其个人数据。而移植权则让个人可以更轻松地访问自己的数据。个人可以要求将其数据从一个供应商转移到另一个供应商。此类数据转移将为个人创造更多方便，而加大了供应商之间的竞争。</p><h2 id="如何确保合规"><a href="#如何确保合规" class="headerlink" title="如何确保合规"></a>如何确保合规</h2><p>GDPR不止适用于欧盟内的企业，还适用于欧盟以外的企业——如果他们为欧盟境内的数据主体提供商品或服务，或者监控其行为。GDPR也适用于处理或持有欧盟境内数据主体数据的企业，不论该企业位于何处。</p><p>很多企业之前并未遵循过欧盟数据和隐私法，因而很多细节（如范围、实施等）都不清楚。对于在欧盟境内运营的企业，或是向欧洲个人提供商品、服务或监控其行为的企业，您可以通过以下步骤提前为明年做准备。</p><ul><li>根据现有资料深入解读GDPR</li><li>理解GDPR规定下个人数据的广泛范围</li><li>创建、更新或审查有关个人信息和安全措施的文档</li><li>根据GDPR，创建、更新或审查有关违规行为、事件报告以及风险评估的政策和程序的文档</li><li>创建、更新或审查任何必要的合同和协议语言</li><li>判断使用云端人力资源或薪酬供应商是否有利于公司减轻合规风险。</li></ul><p>人力资源领导者需要注意居住在欧洲的中国公民将受到GDPR保护，而居住在欧盟以外的欧盟公民则不受这些法规保护。</p><p>虽然很多公司已经采取数据和隐私措施以遵守《数据保护指令》，然而GDPR包含了新的保护措施，并适用于更广泛的领域，包含欧盟境内外的企业，这将需要额外的合规措施。企业必须尽快采取行动为2018年5月GDPR的正式生效做好准备。</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/uploads/20180526_GDRP.jpg&quot;&gt;
&lt;p&gt;欧盟《一般数据保护条例》（GDPR）将于2018年5月25日起正式施行，该条例是近三十年来数据保护立法的最大变动，旨在加强对欧盟境内居民的个人数据和隐私保护。此外，它还将通过统一数据和隐私条例来简化对跨国企业的监管框架。它将取代1995年颁布的《数据保护指令》。&lt;/p&gt;
&lt;p&gt;1995年的《数据保护指令》95/46/EC是欧盟版的隐私保护条例。其主要目标包括协调数据保护立法，以及规范将个人数据转移到欧盟以外的“第三国”的情形。除了其它一系列措施，各个盟国还各自成立独立的公共机构，监督该指令的实施，并作为与企业和公民互动的监管机构。整体而言，该指令符合经济合作与发展协会（OECD）的最初建议以及隐私权是基本人权的核心概念。&lt;/p&gt;
&lt;p&gt;虽然《数据保护指令》旨在团结不同盟国的立法，但这只是一项指令，当置换到各国独立的法律时仍有一定的解释空间。加上当今数据格局的快速变化，尤其是Facebook、LinkedIn等社交平台以及云技术的兴起，势必要升级欧盟地区的监管环境。即将到来的GDPR是一项更大的立法，并且在各个成员国即刻可执行。&lt;/p&gt;
    
    </summary>
    
      <category term="policy" scheme="https://blog.fanfq.com/categories/policy/"/>
    
    
      <category term="policy" scheme="https://blog.fanfq.com/tags/policy/"/>
    
      <category term="GDPR" scheme="https://blog.fanfq.com/tags/GDPR/"/>
    
  </entry>
  
  <entry>
    <title>用户协议</title>
    <link href="https://blog.fanfq.com/policy/%E7%94%A8%E6%88%B7%E5%8D%8F%E8%AE%AE.html"/>
    <id>https://blog.fanfq.com/policy/用户协议.html</id>
    <published>2018-03-01T04:13:43.000Z</published>
    <updated>2018-11-19T10:03:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="一、服务条款的确认和接纳"><a href="#一、服务条款的确认和接纳" class="headerlink" title="一、服务条款的确认和接纳"></a>一、服务条款的确认和接纳</h3><p>为获得本网站提供基于互联网的相关服务，服务使用人（以下称“用户”)必须同意本协议的全部条款并按照页面上的提示完成注册程序。如果用户在注册程序过程中点击“我同意”按钮即表示用户与本网站达成协议，完全接受本协议项下的全部条款。</p><a id="more"></a><h3 id="二、服务内容"><a href="#二、服务内容" class="headerlink" title="二、服务内容"></a>二、服务内容</h3><p>本网站服务的具体内容由本网站根据实际情况提供。本网站保留随时变更、中断或终止部分或全部网络服务包括收费网络服务的权利。</p><p>用户必须同意接受本网站通过电子邮件或其他方式向用户发送广告或其他相关商业信息。</p><p>本网站仅提供相关的网络服务，除此之外与相关网络服务有关的设备（如电脑、调制解调器及其他与接入互联网有关的装置)及所需的费用（如为接入互联网而支付的电话费及上网费)均应由用户自行负担。</p><h3 id="三、使用规则"><a href="#三、使用规则" class="headerlink" title="三、使用规则"></a>三、使用规则</h3><p>1、用户帐号、密码和安全</p><p>用户在申请使用本网站提供的网络服务时，必须提供准确的个人资料，如个人资料有任何变动，必须及时更新。</p><p>用户注册成功后，本网站将给予每个用户一个用户帐号及相应的密码，用户应采取合理措施维护其密码和帐号的安全。用户对利用该密码和帐号所进行的一切活动负全部责任；由该等活动所导致的任何损失或损害由用户承担，本网站不承担任何责任。</p><p>盗取他人用户帐号或利用网络通讯骚扰他人，均属于非法行为。用户不得采用测试、欺骗等任何非法手段，盗取其他用户的帐号和对他人进行骚扰。</p><p>2、用户应遵守以下法律及法规</p><p>用户同意遵守《中华人民共和国保守国家秘密法》、《中华人民共和国著作权法》、《中华人民共和国计算机信息系统安全保护条例》、《计算机软件保护条例》、《互联网电子公告服务管理规定》、《信息网络传播权保护条例》等有关计算机及互联网规定的法律、法规、实施办法。在任何情况下，本网站合理地认为用户的行为可能违反上述法律、法规，本网站可以在任何时候，不经事先通知终止向该用户提供服务。</p><p>3、禁止用户从事以下行为：</p><p>3.1、 使用本网站服务发送或传播敏感信息和违反国家法律制度的信息，包括但不限于下列信息:</p><p>（1) 危害国家安全，泄露国家秘密，颠覆国家政权，破坏国家统一的；</p><p>（2) 损害国家荣誉和利益的；</p><p>（3) 煽动民族仇恨、民族歧视，破坏民族团结的；</p><p>（4) 破坏国家宗教政策，宣扬邪教和封建迷信的；</p><p>（5) 散布谣言，扰乱社会秩序，破坏社会稳定的；</p><p>（6) 散布淫秽、色情、赌博、暴力、凶杀、恐怖或者教唆犯罪的；</p><p>（7) 侮辱或者诽谤他人，侵害他人合法权益的；</p><p>（8) 含有法律、行政法规禁止的其他内容的。</p><p>3.2、 使用本网站提供的服务进行任何非法、淫秽、色情及其他违反公序良俗之活动，包括但不限于非法传销、诈骗、侵权、反动行为等。</p><p>3.3、 对本网站服务的任何部分或服务之使用或获得进行复制、拷贝、出售，或利用本网站服务进行调查、广告或其他商业目的，但本网站对特定服务另有适用指引或规定的除外。</p><p>在任何情况下，本网站合理地认为用户的行为可能违反上述规定，本网站可以在任何时候，不经事先通知终止向该用户提供服务。</p><h3 id="四、-内容权利"><a href="#四、-内容权利" class="headerlink" title="四、 内容权利"></a>四、 内容权利</h3><p>用户上载的内容是指用户在本网站上载或发布的游戏或其它任何形式的内容包括文字、图片、音频等。</p><p>除非本网站收到相反通知，本网站将用户视为其在本网站上载或发布的内容的版权拥有人。用户在本网站上载或发布内容即视为其同意授予本网站所有上述内容的在全球范围内的免费、不可撤销的无限期的并且可转让的非独家使用权许可，本网站有权展示、散布及推广前述内容，有权对前述内容进行任何形式的复制、修改、出版、发行及以其他方式使用或者授权第三方进行复制、修改、出版、发行及以其他方式使用。</p><p>因用户进行上述内容在本网站的上载或发布，而导致任何第三方提出索赔要求或衍生的任何损害或损失，由用户承担全部责任。</p><p>内容权利详情请见：“作品上传须知”，“留言须知”及“版权声明”</p><h3 id="五、隐私保护"><a href="#五、隐私保护" class="headerlink" title="五、隐私保护"></a>五、隐私保护</h3><p>保护用户隐私是本网站的重点原则，本网站保证不对外公开或向第三方提供用户注册资料及用户在使用服务时存储在本网站的非公开内容，但下列情况除外：</p><p>事先获得用户的明确授权；</p><p>根据有关的法律法规要求；</p><p>按照相关政府主管部门的要求；</p><p>维护用户以及社会公众的利益；</p><p>维护本网站的合法权益；</p><p>本网站可能会与第三方合作向用户提供相关的服务，在此情况下，如该第三方同意承担与本网站同等的保护用户隐私的责任，则本网站可将用户的注册资料等提供给该第三方。</p><p>在不透露单个用户隐私资料的前提下，本网站有权对整个用户数据库进行分析并对用户数据库进行商业上的利用。</p><h3 id="六、-关于第三方链接"><a href="#六、-关于第三方链接" class="headerlink" title="六、 关于第三方链接"></a>六、 关于第三方链接</h3><p>本网站服务可能会提供与其他国际互联网网站或资源进行链接。因使用或依赖上述网站或资源所生的损失或损害，本网站不负担任何责任。</p><h3 id="七、-免责声明"><a href="#七、-免责声明" class="headerlink" title="七、 免责声明"></a>七、 免责声明</h3><p>1、本网站对于任何自本网站而获得的他人的信息、内容或者广告宣传等任何资讯（以下统称“信息”），不保证真实、准确和完整性。如果任何单位或者个人通过上述“信息”而进行任何行为，须自行甄别真伪和谨慎预防风险，否则，无论何种原因，本网站不对任何非与本网站直接发生的交易和/或行为承担任何直接、间接、附带或衍生的损失和责任。</p><p>2、本网站不保证（包括但不限于）：</p><p>（1) 本网站适合您的使用要求；</p><p>（2) 本网站不受干扰，及时、安全、可靠或不出现错误；</p><p>（3) 您经由本网站取得的任何产品、服务或其他材料符合您的期望。</p><p>3、您使用经由本网站下载或取得的任何资料，其风险由您自行承担；因该等使用导致您电脑系统损坏或资料流失，您应自己负完全责任；</p><p>4、基于以下原因而造成的利润、商业信誉、资料损失或其他有形或无形损失，本网站不承担任何直接、间接的赔偿：</p><p>（1）对本网站的使用或无法使用；</p><p>（2）经由本网站购买或取得的任何产品、资料或服务；</p><p>（3）用户资料遭到未授权的使用或修改；</p><p>（4）其它与本网站相关的事宜。</p><h3 id="八、服务变更、中断或终止"><a href="#八、服务变更、中断或终止" class="headerlink" title="八、服务变更、中断或终止"></a>八、服务变更、中断或终止</h3><p>如因系统维护或升级的需要而需暂停网络服务，本网站将尽可能事先在重要页面进行通告。</p><p>如发生下列任何一种情形，本网站有权随时中断或终止向用户提供服务而无需通知用户：</p><p>用户提供的个人资料不真实。</p><p>用户违反本协议中规定的使用规则。</p><p>用户注册后，连续六个月没有登陆账号的。</p><p>用户在使用收费网络服务时未按规定向本网站支付相应的服务费。</p><p>除前款所述情形外，本网站同时保留在不事先通知用户的情况下随时中断或终止部分或全部服务的权利，对于所有服务的中断或终止而造成的任何损失，本网站无需对用户或任何第三方承担任何责任。</p><h3 id="九、修改协议"><a href="#九、修改协议" class="headerlink" title="九、修改协议"></a>九、修改协议</h3><p>本网站有权随时修改本协议的有关条款，一旦条款内容发生变动，本网站将会在相关的页面提示修改内容。</p><p>用户如果不同意本网站对服务条款所做的修改，可以放弃使用或访问本网站或取消已经获得的服务。如果用户继续使用服务，则视为用户接受服务条款的变动。</p><h3 id="十、法律管辖"><a href="#十、法律管辖" class="headerlink" title="十、法律管辖"></a>十、法律管辖</h3><p>本协议的订立、执行和解释及争议的解决均应适用中国法律。</p><p>如双方就本协议内容或其执行发生任何争议，双方应尽量友好协商解决；协商不成时，任何一方均可向本网站所在地的人民法院提起诉讼。</p><h3 id="十一、通知和送达"><a href="#十一、通知和送达" class="headerlink" title="十一、通知和送达"></a>十一、通知和送达</h3><p>本协议项下所有的通知均可通过重要页面公告、电子邮件或常规的信件传送等方式进行；该等通知于发送之日视为已送达收件人。</p><p>用户对于本网站的通知应当通过本网站对外正式公布的通信地址、电子邮件地址等联系信息进行送达。</p><h3 id="十二、其他规定"><a href="#十二、其他规定" class="headerlink" title="十二、其他规定"></a>十二、其他规定</h3><p>本协议构成双方对本协议之约定事项及其他有关事宜的完整协议，除本协议规定的之外，未赋予本协议各方其他权利。</p><p>如本协议中的任何条款无论因何种原因完全或部分无效或不具有执行力，本协议的其余条款仍应有效并且有约束力。</p><p>本协议中的标题仅为方便而设，在解释本协议时应被忽略。</p><h3 id="十三、本协议解释权归本网站所有。"><a href="#十三、本协议解释权归本网站所有。" class="headerlink" title="十三、本协议解释权归本网站所有。"></a>十三、本协议解释权归本网站所有。</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、服务条款的确认和接纳&quot;&gt;&lt;a href=&quot;#一、服务条款的确认和接纳&quot; class=&quot;headerlink&quot; title=&quot;一、服务条款的确认和接纳&quot;&gt;&lt;/a&gt;一、服务条款的确认和接纳&lt;/h3&gt;&lt;p&gt;为获得本网站提供基于互联网的相关服务，服务使用人（以下称“用户”)必须同意本协议的全部条款并按照页面上的提示完成注册程序。如果用户在注册程序过程中点击“我同意”按钮即表示用户与本网站达成协议，完全接受本协议项下的全部条款。&lt;/p&gt;
    
    </summary>
    
      <category term="policy" scheme="https://blog.fanfq.com/categories/policy/"/>
    
    
      <category term="网站" scheme="https://blog.fanfq.com/tags/%E7%BD%91%E7%AB%99/"/>
    
      <category term="协议" scheme="https://blog.fanfq.com/tags/%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>隐私权政策</title>
    <link href="https://blog.fanfq.com/policy/%E9%9A%90%E7%A7%81%E6%9D%83%E6%94%BF%E7%AD%96.html"/>
    <id>https://blog.fanfq.com/policy/隐私权政策.html</id>
    <published>2018-03-01T04:13:43.000Z</published>
    <updated>2018-11-19T10:02:58.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><font color="red">公司名称</font>（以下可称为“我们”）非常尊重用户个人信息的保护，在您使用<font color="red">公司名称</font>平台提供的服务时，我们将按照本隐私权政策收集、使用及共享您和您的最终用户（即“您的产品的最终用户”或“您的产品的终端用户”，以下同）的个人信息。本隐私权政策包含了我们收集、存储、使用、共享和保护您和您的最终用户的个人信息的条款，我们希望通过本隐私权政策向您清晰地介绍我们对您和您的最终用户的个人信息的处理方式，因此我们建议您完整地阅读本隐私权政策，以帮助您了解维护自己隐私权的方式。如您对本隐私权政策有任何疑问，您可以通过<font color="red">公司名称</font>公布的联系方式与我们联系。如果您不同意本隐私权政策任何内容，您应立即停止使用<font color="red">公司名称</font>服务。当您使用<font color="red">公司名称</font>提供的任一服务时，即表示您已同意我们按照本隐私权政策来合法使用和保护您和您的最终用户的个人信息。</p><a id="more"></a><h3 id="一、适用范围"><a href="#一、适用范围" class="headerlink" title="一、适用范围"></a>一、适用范围</h3><p>为用户提供更好、更优、更个性化的服务是<font color="red">公司名称</font>坚持不懈的追求。本隐私权政策适用于<font color="red">公司名称</font>提供的各项服务，您访问<font color="red">公司名称</font>平台、使用<font color="red">公司名称</font>提供的服务包括但不限于我们提供的网站、客户端、SDK、API、插件、组件、代码、工具以及不断创新研发的产品及服务，均适用本隐私权政策。</p><p>如您使用<font color="red">公司名称</font>提供的某项或某几项服务有其单独的隐私权政策的，该等服务对应的隐私权政策将与本隐私权政策一起构成一份完整的<font color="red">公司名称</font>隐私权政策。 需要特别说明的是，本隐私权政策不适用于展示在、链接到或再封装我们的服务的那些适用其他的隐私权政策、由第三方提供的服务。虽然第三方展示在、链接到或再封装我们的服务，但我们并不了解或控制其行为，因此也不为其行为负责；在您已查看并接受其隐私权政策之前，请谨慎访问或使用其服务。</p><p>如您允许我们与第三方网站共享的信息，则同时需受第三方网站服务条款和隐私权政策的约束。</p><h3 id="二、我们如何收集信息"><a href="#二、我们如何收集信息" class="headerlink" title="二、我们如何收集信息"></a>二、我们如何收集信息</h3><p>我们收集信息是为了向您提供更好、更优、更个性化的服务，我们收集信息的方式如下：</p><p>1、您向我们提供的信息</p><p>当您开通<font color="red">公司名称</font>服务及您在使用<font color="red">公司名称</font>提供的相关服务时填写、提交或接入的信息，包括您的姓名、电子邮箱、联系方式、您线下服务的最终用户相关数据等。</p><p>2、在您使用服务过程中收集的信息</p><p>（1）<font color="red">公司名称</font>统计分析服务</p><p><font color="red">公司名称</font>统计分析服务帮助您了解您的最终用户如何使用您的产品（含服务，包括但不限于移动应用客户端、移动网站、应用平台、PC网站、站点及<font color="red">公司名称</font>确认可供提供服务的其他终端等，以下同），并且帮助您分析您的产品在不同终端设备上的表现。当您在产品里集成了<font color="red">公司名称</font>统计分析工具之后，您的产品就通过<font color="red">公司名称</font>统计分析工具传送数据到我们的服务器。</p><p>可以通过<font color="red">公司名称</font>统计分析工具收集并存储的数据包括但不限于：SDK/API/JS代码版本、浏览器、互联网服务提供商、IP地址、平台、时间戳、应用标识符、应用程序版本、应用分发渠道、独立设备标识符、iOS广告标识符（IDFA)、网卡（MAC）地址、国际移动设备识别码（IMEI）、设备型号、终端制造厂商、终端设备操作系统版本、会话启动/停止时间、语言所在地、时区和网络状态（WiFi等）、硬盘、CPU和电池使用情况等。我们可能对MAC地址和IMEI等可以用于识别终端设备的信息进行加密，从而提高对隐私的保护。</p><p>如果您在集成<font color="red">公司名称</font>统计分析工具时选择了高级服务，我们还收集并存储以下数据：您的最终用户在您的产品中的标识符、经度和纬度、性别、年龄、用户触发的事件、错误和页面浏览量。此外，通过<font color="red">公司名称</font>统计分析工具发送的HTTP请求中还可能包含您的最终用户的IP地址、设备类型、地区等信息。</p><p>（2）<font color="red">公司名称</font>广告监测服务</p><p><font color="red">公司名称</font>广告监测服务帮助您了解您的广告投放活动的效果，分析广告触达用户的后续转化情况。当您在产品里集成了<font color="red">公司名称</font>广告监测工具后，您的产品就通过<font color="red">公司名称</font>广告监测工具传送数据到我们的服务器。</p><p>可以通过<font color="red">公司名称</font>广告监测工具收集并存储的数据包括但不限于：SDK/API/JS代码版本、浏览器、终端设备操作系统版本、互联网服务供应商、IP地址、应用分发渠道、独立设备标识符、iOS广告标识符（IDFA)、网卡（MAC）地址、国际移动设备识别码（IMEI）、设备型号、浏览的页面、访问的时间和长度、下载、点击等操作行为。</p><p>（3）<font color="red">公司名称</font>开发者运营工具</p><p><font color="red">公司名称</font>开发者运营工具帮助您在您的产品中整合或搭建即时通讯、消息推送、社会化分享、微社区等功能模块。当您在产品里集成了<font color="red">公司名称</font>开发者运营工具SDK或API之后，您的产品就通过<font color="red">公司名称</font>开发者运营工具SDK或API传送数据到我们的服务器。</p><p>可以通过<font color="red">公司名称</font>开发者运营工具SDK或API收集并存储的数据包括但不限于： SDK或API版本、平台、苹果设备令牌（Device Token）、时间戳、应用标识符、应用程序版本、应用分发渠道、独立设备标识符、iOS广告标识符（IDFA)、网卡（MAC）地址、国际移动设备识别码（IMEI）、设备型号、终端制造厂商、终端设备操作系统版本、会话启动/停止时间、语言所在地、时区和网络状态（WiFi等）、硬盘、CPU和电池使用情况等。我们可能对MAC地址和IMEI等可以用于识别终端设备的信息进行加密，从而提高对隐私的保护。</p><p>如果您在集成<font color="red">公司名称</font>开发者运营工具SDK或API时选择了高级服务，我们还收集并存储以下数据：您的最终用户在您的产品中的标识符、您根据用户的属性或行为而为用户添加的标签、经度和纬度、用户触发的事件、用户采用第三方平台登录时的唯一标识号。通过<font color="red">公司名称</font>开发者运营工具SDK或API发送的HTTP请求中还可能包含您的最终用户的IP地址。此外，基于第三方开放平台服务条款，我们记录授权用户的设备分享或登录时相应社交平台的唯一标识号，用户在社区进行的发帖、点赞等行为以及用户在社交平台上的公开信息，包括昵称、性别、年龄、所在地、职业、教育、标签信息等。</p><p>（4）行业报告服务</p><p>我们将基于覆盖全域的<font color="red">公司名称</font>统计分析服务所收集的数据，以及通过其他合法渠道获得的数据建立<font color="red">公司名称</font>数据库，作出产品在行业内、特定区域和市场等方面的绩效评估或行为模式分析报告（以下合称“行业报告”）。行业报告将以不可识别的聚合形式表现，既包括由<font color="red">公司名称</font>自主发布的，也包括根据您的需求定制形成的。</p><p>特别的情况下，我们也会根据<font color="red">公司名称</font>的算法模型做出某种或某类产品的评估结果，该评估结果可能会源于从您的产品中得到的数据因而与您的产品呈现出一定的吻合性，但这些评估结果是我们基于算法模型计算得出的，用于评估目的的，并且是聚合性和匿名的。</p><p>（5）访问和浏览<font color="red">公司名称</font>平台</p><p>在您使用<font color="red">公司名称</font>服务，或访问<font color="red">公司名称</font>平台所涉各网站时，<font color="red">公司名称</font>自动接收并记录您的浏览器和计算机上的信息，包括但不限于您的IP地址、浏览器的类型、使用的语言、访问日期和时间、软硬件特征信息及您需求的网页记录等数据。如您访问移动网页使用<font color="red">公司名称</font>服务时，<font color="red">公司名称</font>可能会读取与您位置和移动设备相关的信息，包括但不限于设备型号、设备识别码、操作系统、分辨率、电信运营商等。</p><p>（6）其他</p><p>除上述信息外，我们还可能为了提供服务及改进服务质量的合理需要而收集您的其他信息，包括您与我们的客户服务团队联系时提供的相关信息，您参与问卷调查时向我们发送的问卷答复信息，以及您与<font color="red">公司名称</font>的关联方、<font color="red">公司名称</font>合作伙伴之间互动时我们收集的相关信息。</p><p>与此同时，为提高您使用<font color="red">公司名称</font>服务的安全性，更准确地预防钓鱼网站欺诈和木马病毒，我们可能会通过了解一些您的网络使用习惯、您常用的软件信息等手段来判断您账户的风险，并可能会记录一些我们认为有风险的URL。</p><p>3、来自第三方的信息</p><p>为了给您提供更好、更优的服务，或共同为您提供服务，或为了预防互联网欺诈等目的，<font color="red">公司名称</font>的关联方、合作伙伴会依据法律的规定或与您的约定或征得您同意的前提下，向<font color="red">公司名称</font>分享您的个人信息。</p><h3 id="三、我们如何使用信息"><a href="#三、我们如何使用信息" class="headerlink" title="三、我们如何使用信息"></a>三、我们如何使用信息</h3><p>我们使用收集来的信息是为了向您提供服务及提升服务质量，为了实现这一目的，我们会把您的信息用于下列用途：</p><p>1、向您提供<font color="red">公司名称</font>各项服务，并维护、改进这些服务。</p><p>2、向您推荐您可能感兴趣的内容，包括但不限于向您发出产品和服务信息，或通过系统向您展示个性化的第三方推广信息，或者在征得您同意的情况下与<font color="red">公司名称</font>的合作伙伴共享信息以便他们向您发送有关其产品和服务的信息。</p><p>3、我们可能使用您的个人信息以预防、发现、调查欺诈、危害安全、非法或违反与我们或其关联方协议、政策或规则的行为，以保护您、其他用户，或我们或其关联方的合法权益。</p><p>4、我们可能会将来自某项服务的个人信息与来自其他服务的信息结合起来，用于为了给您提供更加个性化的服务使用。</p><p>5、联系您解决问题。</p><p>6、经您许可的其他用途。</p><h3 id="四、您对最终用户数据的使用"><a href="#四、您对最终用户数据的使用" class="headerlink" title="四、您对最终用户数据的使用"></a>四、您对最终用户数据的使用</h3><p>我们不控制我们的客户如何使用属于或关于他们的最终用户的数据，也不应为此负责，尽管我们期待我们的客户以符合他们的法律和道德义务的方式使用他们最终用户的数据。最终用户应该审查我们的客户的隐私权政策，从而了解他们如何收集、使用最终用户的数据。</p><p>如果您接受本隐私权政策并把我们的SDK、API、JS代码或其他统计工具集成到您的产品中，您已经同意并向我们保证您所有的最终用户同意我们收集和使用其信息，并且同意遵守本隐私权政策的全部规定，您已经遵守并将持续遵守适用的法律、法规和监管要求，包括但不限于制定和公布有关个人信息保护和隐私保护的相关政策。</p><p>您在此进一步保证，您的最终用户不会因为我们按照本隐私权政策的规定收集、使用、披露对其的信息而对我们产生任何形式的诉求、诉请、投诉等。如您的最终用户因本隐私权政策项下对其信息的收集、使用、披露而致使我们遭受任何形式的诉请、诉求以及投诉等，您将负责全面给予解决；如导致我们发生任何形式的损失，您将负责给予我们全额赔偿。</p><h3 id="五、我们如何共享信息"><a href="#五、我们如何共享信息" class="headerlink" title="五、我们如何共享信息"></a>五、我们如何共享信息</h3><p>我们对您的信息承担保密义务，不会为满足第三方的营销或非法目的而向其出售或出租您的任何信息，我们会在下列情况下才将您的信息与第三方共享：</p><p>1、事先获得您的同意或授权。</p><p>2、根据法律法规的规定或行政或司法机构的要求。</p><p>3、向<font color="red">公司名称</font>的关联方分享您的个人信息。</p><p>4、向可信赖的合作伙伴提供您的个人信息，让他们根据我们的指示并遵循我们的隐私权政策以及其他任何相应的保密和安全措施来为我们处理这些信息。</p><p>5、如您是适格的知识产权投诉人并已提起投诉，应被投诉人要求，向被投诉人披露，以便双方处理可能的权利纠纷。</p><p>6、只有共享您的信息，才能提供您需要的服务，或处理您与他人的纠纷或争议。</p><p>7、我们正在或拟进行企业并购、重组、出售全部或部分股份和/或资产等重大变化，包括但不限于其尽职调查过程。</p><p>8、为维护<font color="red">公司名称</font>及其关联方或用户的合法权益。</p><h3 id="六、Cookie-和网络-Beacon-的使用"><a href="#六、Cookie-和网络-Beacon-的使用" class="headerlink" title="六、Cookie 和网络 Beacon 的使用"></a>六、Cookie 和网络 Beacon 的使用</h3><p>为使您获得更轻松的访问体验，您访问<font color="red">公司名称</font>平台或使用<font color="red">公司名称</font>提供的服务时，我们可能会通过小型数据文件识别您的身份，这么做是帮您省去重复输入注册信息的步骤，或者帮助判断您的账户安全。这些数据文件可能是Cookie、Flash Cookie，或您的浏览器或关联应用程序提供的其他本地存储（以下合称“Cookie”）。</p><p>请您理解，我们的某些服务只能通过使用Cookie才可得到实现。如果您的浏览器或浏览器附加服务允许，您可以打开浏览器的设置选项，选择隐私设置，勾选“不跟踪”，或者禁止cookie，这样您的数据将不会被我们追踪到，但这一举动在某些情况下可能会影响您安全访问<font color="red">公司名称</font>平台和使用<font color="red">公司名称</font>提供的服务。</p><p>网页上常会包含一些电子图象（称为“单像素GIF 文件”或 “网络 Beacon”），使用网络Beacon可以帮助网站计算浏览网页的用户或访问某些Cookie，我们会通过网络Beacon收集您浏览网页活动的信息，例如您访问的页面地址、您先前访问的援引页面的位址、您停留在页面的时间、您的浏览环境以及显示设定等。</p><h3 id="七、更新您的信息"><a href="#七、更新您的信息" class="headerlink" title="七、更新您的信息"></a>七、更新您的信息</h3><p>我们将努力使您能审阅、更新或更正您存在我们这里的信息。如需审阅、更新或更正，请访问我们的网站并登录您的账户。为了辨别您身份、核实并处理您的请求，我们将需要您提交充分有效的身份信息。请注意，即使根据您的请求变更或删除了您的信息，我们为解决争议、执行用户协议并遵守与安全、诚信、服务运营相关的技术和法律要求仍可能保留某些您的数据。</p><h3 id="八、信息存储"><a href="#八、信息存储" class="headerlink" title="八、信息存储"></a>八、信息存储</h3><p><font color="red">公司名称</font>收集的有关您的信息和资料将保存在<font color="red">公司名称</font>的服务器上，这些信息和资料可能传送至您所在国家、地区或<font color="red">公司名称</font>收集信息和资料所在地并在该地被访问、存储和展示。</p><h3 id="九、您的个人信息保护"><a href="#九、您的个人信息保护" class="headerlink" title="九、您的个人信息保护"></a>九、您的个人信息保护</h3><p>为了保障您的信息安全，我们将按照行业通行标准、努力采取合理的物理、电子和管理方面的安全措施来保护您的信息，使您的信息不会被泄漏、毁损或者丢失，包括但不限于SSL、信息加密存储、数据中心的访问控制。您个人信息的访问权限仅限于为根据本隐私权政策完成工作任务或进行技术维护工作需要处理您个人信息的人员。</p><p>我们收集的信息保存于不向公众开放的安全运行环境之中。为避免未经授权访问您的信息，我们将其保存在有防火墙保护并可能加密的服务器之中。但是，没有任何系统是绝对安全的，请您理解在信息网络上不存在“完善的安全措施”。即使我们做出了很大努力，仍有可能无法杜绝对您的个人信息的非法访问。此外，由于无法判断他人的陈述是否属实，我们可能会被不可靠的、有误导性的或非法的信息所蒙蔽。</p><p>如果您或您的最终用户不接受本隐私权政策并提供我们所要求的信息，那么您将无法使用我们的服务或使用我们提供的全部功能。但您需要了解，提供该信息意味着您和您的最终用户已经充分理解这些信息可能会有被盗、非法拥有或滥用的风险，以及由此带来的您和您的最终用户的人身安全、财产和声誉等方面的损失。</p><h3 id="十、未成年人保护"><a href="#十、未成年人保护" class="headerlink" title="十、未成年人保护"></a>十、未成年人保护</h3><p>我们重视未成年人的个人信息保护。如您为未成年人，建议您请您的监护人仔细阅读本政策，并在征得您的监护人同意的前提下使用我们的服务或向我们提供信息。</p><h3 id="十一、本隐私权政策的修订"><a href="#十一、本隐私权政策的修订" class="headerlink" title="十一、本隐私权政策的修订"></a>十一、本隐私权政策的修订</h3><p>我们可能随时会对本隐私权政策进行调整或变更，如发生调整或变更，我们将在<font color="red">公司名称</font>平台以网站公告的方式予以公布而不再另行单独通知您，该等调整或变更将在公布时即时生效。如您在隐私权政策调整或变更后继续使用<font color="red">公司名称</font>提供的任一服务或访问<font color="red">公司名称</font>相关网站，我们相信这代表您已充分阅读、理解并接受修改后的隐私权政策并受其约束。</p><h3 id="十二、联系我们"><a href="#十二、联系我们" class="headerlink" title="十二、联系我们"></a>十二、联系我们</h3><p>如果您对本政策有任何问题或建议或有其他事情需要联系我们，请发邮件到: <a href="mailto:xxx@xxx.com" target="_blank" rel="noopener">xxx@xxx.com</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;font color=&quot;red&quot;&gt;公司名称&lt;/font&gt;（以下可称为“我们”）非常尊重用户个人信息的保护，在您使用&lt;font color=&quot;red&quot;&gt;公司名称&lt;/font&gt;平台提供的服务时，我们将按照本隐私权政策收集、使用及共享您和您的最终用户（即“您的产品的最终用户”或“您的产品的终端用户”，以下同）的个人信息。本隐私权政策包含了我们收集、存储、使用、共享和保护您和您的最终用户的个人信息的条款，我们希望通过本隐私权政策向您清晰地介绍我们对您和您的最终用户的个人信息的处理方式，因此我们建议您完整地阅读本隐私权政策，以帮助您了解维护自己隐私权的方式。如您对本隐私权政策有任何疑问，您可以通过&lt;font color=&quot;red&quot;&gt;公司名称&lt;/font&gt;公布的联系方式与我们联系。如果您不同意本隐私权政策任何内容，您应立即停止使用&lt;font color=&quot;red&quot;&gt;公司名称&lt;/font&gt;服务。当您使用&lt;font color=&quot;red&quot;&gt;公司名称&lt;/font&gt;提供的任一服务时，即表示您已同意我们按照本隐私权政策来合法使用和保护您和您的最终用户的个人信息。&lt;/p&gt;
    
    </summary>
    
      <category term="policy" scheme="https://blog.fanfq.com/categories/policy/"/>
    
    
      <category term="网站" scheme="https://blog.fanfq.com/tags/%E7%BD%91%E7%AB%99/"/>
    
      <category term="协议" scheme="https://blog.fanfq.com/tags/%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>log4j2 Best Practices</title>
    <link href="https://blog.fanfq.com/java/log4j2.html"/>
    <id>https://blog.fanfq.com/java/log4j2.html</id>
    <published>2015-11-12T01:16:44.000Z</published>
    <updated>2018-11-13T09:17:13.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>原理我就不讲述了，我就简单的说说我的配置以及知识要点</p><ol><li>过滤日志级别，对应的级别存档相应的文件。如<code>info</code>只存<code>info</code>级别的信息，比其高的级别直接过滤。</li><li>单个log文件体积控制在100mb，超过则自动增加新的文件。日志文件名序号自增起始位以1开始，当日总数超过100自动替换较早的文件.</li><li>日志压缩存档，按月归档，</li><li>自定义日志级别</li><li>日志持久化，将日志信息存储到mongodb</li></ol><a id="more"></a><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">log4j2.version</span>&gt;</span>2.8.1<span class="tag">&lt;/<span class="name">log4j2.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- log4j2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j2.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-jcl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j2.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-slf4j-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j2.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j2.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-nosql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j2.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="log4j2-xml"><a href="#log4j2-xml" class="headerlink" title="log4j2.xml"></a>log4j2.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">status</span>=<span class="string">"warn"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- #(ALL&lt;)TRACE&lt;DEBUG&lt;INFO&lt;WARN&lt;ERROR&lt;FATAL(&lt;OFF) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"LEVEL"</span>&gt;</span>debug<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"PROJECT_NAME"</span>&gt;</span>log4j2<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"LOG_PATH"</span>&gt;</span>/Users/fred/Desktop/logs/$&#123;PROJECT_NAME&#125;<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">CustomLevels</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">CustomLevel</span> <span class="attr">name</span>=<span class="string">"DIAG"</span> <span class="attr">intLevel</span>=<span class="string">"3"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">CustomLevel</span> <span class="attr">name</span>=<span class="string">"NOTICE"</span> <span class="attr">intLevel</span>=<span class="string">"4"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">CustomLevel</span> <span class="attr">name</span>=<span class="string">"VERBOSE"</span> <span class="attr">intLevel</span>=<span class="string">"5"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">CustomLevels</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">appenders</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">"CONSOLE"</span> <span class="attr">target</span>=<span class="string">"SYSTEM_OUT"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"$&#123;LEVEL&#125;"</span> <span class="attr">onMatch</span>=<span class="string">"ACCEPT"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onMismatch</span>=<span class="string">"DENY"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PatternLayout</span></span></span><br><span class="line"><span class="tag"><span class="attr">pattern</span>=<span class="string">"[$&#123;PROJECT_NAME&#125;][%-d&#123;yyyy-MM-dd HH:mm:ss:sss&#125;][%p] %C.%M(%L) | %m%n"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">"INFO_ROLLING_FILE"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;LOG_PATH&#125;/$&#123;PROJECT_NAME&#125;_info.log"</span></span></span><br><span class="line"><span class="tag"><span class="attr">filePattern</span>=<span class="string">"$&#123;LOG_PATH&#125;/$$&#123;date:yyyy-MM&#125;/$&#123;PROJECT_NAME&#125;_info_%d&#123;yyyy-MM-dd&#125;-%i.log.gz"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Filters</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">此Filter意思是，只输出info级别的数据</span></span><br><span class="line"><span class="comment">DENY，日志将立即被抛弃不再经过其他过滤器；</span></span><br><span class="line"><span class="comment">NEUTRAL，有序列表里的下个过滤器过接着处理日志；</span></span><br><span class="line"><span class="comment">ACCEPT，日志会被立即处理，不再经过剩余过滤器。 </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"warn"</span> <span class="attr">onMatch</span>=<span class="string">"DENY"</span> <span class="attr">onMismatch</span>=<span class="string">"NEUTRAL"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"error"</span> <span class="attr">onMatch</span>=<span class="string">"DENY"</span> <span class="attr">onMismatch</span>=<span class="string">"NEUTRAL"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"info"</span> <span class="attr">onMatch</span>=<span class="string">"ACCEPT"</span> <span class="attr">onMismatch</span>=<span class="string">"DENY"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PatternLayout</span></span></span><br><span class="line"><span class="tag"><span class="attr">pattern</span>=<span class="string">"[$&#123;PROJECT_NAME&#125;][%-d&#123;yyyy-MM-dd HH:mm:ss:sss&#125;][%p] %C.%M(%L) | %m%n"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">"99 MB"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">"1"</span> <span class="attr">modulate</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">"100"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">"DEBUG_ROLLING_FILE"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;LOG_PATH&#125;/$&#123;PROJECT_NAME&#125;_debug.log"</span></span></span><br><span class="line"><span class="tag"><span class="attr">filePattern</span>=<span class="string">"$&#123;LOG_PATH&#125;/$$&#123;date:yyyy-MM&#125;/$&#123;PROJECT_NAME&#125;_debug_%d&#123;yyyy-MM-dd&#125;-%i.log.gz"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Filters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"error"</span> <span class="attr">onMatch</span>=<span class="string">"DENY"</span> <span class="attr">onMismatch</span>=<span class="string">"NEUTRAL"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"warn"</span> <span class="attr">onMatch</span>=<span class="string">"DENY"</span> <span class="attr">onMismatch</span>=<span class="string">"NEUTRAL"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"info"</span> <span class="attr">onMatch</span>=<span class="string">"DENY"</span> <span class="attr">onMismatch</span>=<span class="string">"NEUTRAL"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"debug"</span> <span class="attr">onMatch</span>=<span class="string">"ACCEPT"</span> <span class="attr">onMismatch</span>=<span class="string">"DENY"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PatternLayout</span></span></span><br><span class="line"><span class="tag"><span class="attr">pattern</span>=<span class="string">"[$&#123;PROJECT_NAME&#125;][%-d&#123;yyyy-MM-dd HH:mm:ss:sss&#125;][%p] %C.%M(%L) | %m%n"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">"99 MB"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">"1"</span> <span class="attr">modulate</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">"100"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">"ERROR_ROLLING_FILE"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;LOG_PATH&#125;/$&#123;PROJECT_NAME&#125;_error.log"</span></span></span><br><span class="line"><span class="tag"><span class="attr">filePattern</span>=<span class="string">"$&#123;LOG_PATH&#125;/$$&#123;date:yyyy-MM&#125;/$&#123;PROJECT_NAME&#125;_error_%d&#123;yyyy-MM-dd&#125;-%i.log.gz"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"error"</span> <span class="attr">onMatch</span>=<span class="string">"ACCEPT"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onMismatch</span>=<span class="string">"DENY"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PatternLayout</span></span></span><br><span class="line"><span class="tag"><span class="attr">pattern</span>=<span class="string">"[$&#123;PROJECT_NAME&#125;][%-d&#123;yyyy-MM-dd HH:mm:ss:sss&#125;][%p] %C.%M(%L) | %m%n"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">"99 MB"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">"1"</span> <span class="attr">modulate</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">"100"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 持久化日志到mongodb --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">NoSql</span> <span class="attr">name</span>=<span class="string">"mongoAppender"</span> <span class="attr">bufferSize</span>=<span class="string">"10"</span>&gt;</span> <span class="comment">&lt;!--建议bufferSize配置,减少频繁写操作。--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">MongoDb</span> <span class="attr">databaseName</span>=<span class="string">"log4j2"</span> <span class="attr">collectionName</span>=<span class="string">"$&#123;PROJECT_NAME&#125;_logs"</span> <span class="attr">server</span>=<span class="string">"127.0.0.1"</span> <span class="attr">port</span>=<span class="string">"27017"</span>/&gt;</span>  </span><br><span class="line">            <span class="comment">&lt;!--此处需要一个能获取MongoDBClient或者DB的类，并指定获取的方法名</span></span><br><span class="line"><span class="comment">            &lt;MongoDb databaseName="log4j2" collectionName="$&#123;PROJECT_NAME&#125;_logs"</span></span><br><span class="line"><span class="comment">                      factoryClassName="com.fanfq.plugin.log4j2.MongoLog4jAppender"</span></span><br><span class="line"><span class="comment">                      factoryMethodName="getMongoClient"/&gt;</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">NoSql</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 自定义日志级别 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">"DIAG_ROLLING_FILE"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;LOG_PATH&#125;/$&#123;PROJECT_NAME&#125;_diag.log"</span></span></span><br><span class="line"><span class="tag"><span class="attr">filePattern</span>=<span class="string">"$&#123;LOG_PATH&#125;/$$&#123;date:yyyy-MM&#125;/$&#123;PROJECT_NAME&#125;_diag_%d&#123;yyyy-MM-dd&#125;-%i.log.gz"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"DIAG"</span> <span class="attr">onMatch</span>=<span class="string">"ACCEPT"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onMismatch</span>=<span class="string">"DENY"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PatternLayout</span></span></span><br><span class="line"><span class="tag"><span class="attr">pattern</span>=<span class="string">"[$&#123;PROJECT_NAME&#125;][%-d&#123;yyyy-MM-dd HH:mm:ss:sss&#125;][%p] %C.%M(%L) | %m%n"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">"99 MB"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">"1"</span> <span class="attr">modulate</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">"100"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">"NOTICE_ROLLING_FILE"</span> <span class="attr">fileName</span>=<span class="string">"$&#123;LOG_PATH&#125;/$&#123;PROJECT_NAME&#125;_notice.log"</span></span></span><br><span class="line"><span class="tag"><span class="attr">filePattern</span>=<span class="string">"$&#123;LOG_PATH&#125;/$$&#123;date:yyyy-MM&#125;/$&#123;PROJECT_NAME&#125;_notice_%d&#123;yyyy-MM-dd&#125;-%i.log.gz"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"NOTICE"</span> <span class="attr">onMatch</span>=<span class="string">"ACCEPT"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onMismatch</span>=<span class="string">"DENY"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PatternLayout</span></span></span><br><span class="line"><span class="tag"><span class="attr">pattern</span>=<span class="string">"[$&#123;PROJECT_NAME&#125;][%-d&#123;yyyy-MM-dd HH:mm:ss:sss&#125;][%p] %C.%M(%L) | %m%n"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">"99 MB"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">"1"</span> <span class="attr">modulate</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">"100"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">loggers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- log持久化 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Logger</span> <span class="attr">name</span>=<span class="string">"mongologger"</span> <span class="attr">level</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"mongoAppender"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"$&#123;LEVEL&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"CONSOLE"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"INFO_ROLLING_FILE"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"DEBUG_ROLLING_FILE"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"ERROR_ROLLING_FILE"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Log4j2Test-java"><a href="#Log4j2Test-java" class="headerlink" title="Log4j2Test.java"></a>Log4j2Test.java</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.logging.log4j.Level;</span><br><span class="line">import org.apache.logging.log4j.LogManager;</span><br><span class="line">import org.apache.logging.log4j.Logger;</span><br><span class="line">import org.junit.Test;</span><br><span class="line"></span><br><span class="line">public class Log4j2Test &#123;</span><br><span class="line"></span><br><span class="line">public static final Logger logger = LogManager.getLogger(Testing.class);</span><br><span class="line">public static final Logger mongologger = LogManager.getLogger(&quot;mongologger&quot;);</span><br><span class="line"></span><br><span class="line">@Test</span><br><span class="line">public void logger() &#123;</span><br><span class="line">logger.debug(&quot;debug1122999000&quot;);</span><br><span class="line">logger.info(&quot;info&quot;);</span><br><span class="line">logger.warn(&quot;warn&quot;);</span><br><span class="line">logger.error(&quot;error&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Test</span><br><span class="line">public void mongologger() &#123;</span><br><span class="line">//持久化日志到mongodb</span><br><span class="line">mongologger.debug(&quot;mongologger-debug1122999000&quot;);</span><br><span class="line">mongologger.info(&quot;mongologger-info&quot;);</span><br><span class="line">mongologger.warn(&quot;mongologger-warn&quot;);</span><br><span class="line">mongologger.error(&quot;mongologger-error&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Test</span><br><span class="line">public void customlogger() &#123;</span><br><span class="line">//自定义日志级别</span><br><span class="line">Level diag = Level.getLevel(&quot;DIAG&quot;);</span><br><span class="line">Level notice = Level.getLevel(&quot;NOTICE&quot;);</span><br><span class="line"></span><br><span class="line">logger.log(diag,&quot;a diagnostic message&quot;);</span><br><span class="line">logger.log(notice,&quot;a notice message&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原理我就不讲述了，我就简单的说说我的配置以及知识要点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;过滤日志级别，对应的级别存档相应的文件。如&lt;code&gt;info&lt;/code&gt;只存&lt;code&gt;info&lt;/code&gt;级别的信息，比其高的级别直接过滤。&lt;/li&gt;
&lt;li&gt;单个log文件体积控制在100mb，超过则自动增加新的文件。日志文件名序号自增起始位以1开始，当日总数超过100自动替换较早的文件.&lt;/li&gt;
&lt;li&gt;日志压缩存档，按月归档，&lt;/li&gt;
&lt;li&gt;自定义日志级别&lt;/li&gt;
&lt;li&gt;日志持久化，将日志信息存储到mongodb&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="java" scheme="https://blog.fanfq.com/categories/java/"/>
    
    
      <category term="java" scheme="https://blog.fanfq.com/tags/java/"/>
    
      <category term="log4j2" scheme="https://blog.fanfq.com/tags/log4j2/"/>
    
  </entry>
  
  <entry>
    <title>Hexo快速入门</title>
    <link href="https://blog.fanfq.com/blog/Hexo%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html"/>
    <id>https://blog.fanfq.com/blog/Hexo快速入门.html</id>
    <published>2015-11-08T02:26:44.000Z</published>
    <updated>2018-11-14T05:06:23.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本站采用 <a href="https://hexo.io" target="_blank" rel="noopener">hexo</a> 引擎</p><a id="more"></a><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><h2 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h2 id="package-json-常用插件"><a href="#package-json-常用插件" class="headerlink" title="package.json 常用插件"></a>package.json 常用插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;hexo-site&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;0.0.0&quot;,</span><br><span class="line">  &quot;private&quot;: true,</span><br><span class="line">  &quot;hexo&quot;: &#123;</span><br><span class="line">    &quot;version&quot;: &quot;3.8.0&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;dependencies&quot;: &#123;</span><br><span class="line">    &quot;hexo&quot;: &quot;^3.7.0&quot;,</span><br><span class="line">    &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;,</span><br><span class="line">    &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;,</span><br><span class="line">    &quot;hexo-generator-feed&quot;: &quot;^1.2.2&quot;,</span><br><span class="line">    &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;,</span><br><span class="line">    &quot;hexo-generator-searchdb&quot;: &quot;^1.0.8&quot;,</span><br><span class="line">    &quot;hexo-generator-sitemap&quot;: &quot;^1.2.0&quot;,</span><br><span class="line">    &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;,</span><br><span class="line">    &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;,</span><br><span class="line">    &quot;hexo-renderer-marked&quot;: &quot;^0.3.2&quot;,</span><br><span class="line">    &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;,</span><br><span class="line">    &quot;hexo-server&quot;: &quot;^0.3.1&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文章模板"><a href="#文章模板" class="headerlink" title="文章模板"></a>文章模板</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo快速入门</span><br><span class="line">date: 2015-11-08 10:26:44</span><br><span class="line">tags: [blog,hexo]</span><br><span class="line">categories: blog</span><br><span class="line">urlname: blog/Hexo快速入门</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title: Fred&apos;s Blog</span><br><span class="line">subtitle: Quick notes</span><br><span class="line">description: 他是一只安静的猴子</span><br><span class="line">keywords: 程序员,技术宅,软件开发,开源软件,IT,IT男</span><br><span class="line">author: Fred Fan</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: Asia/Shanghai</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: https://blog.fanfq.com</span><br><span class="line">root: /</span><br><span class="line">#permalink: :year/:month/:day/:title/</span><br><span class="line">permalink: :urlname.html</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: false</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br><span class="line">  </span><br><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = &apos;&apos;)</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &apos;&apos;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line">  </span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Date / Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type:</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  # Set rss to false to disable feed link.</span><br><span class="line"># Leave rss as empty to use site&apos;s feed link.</span><br><span class="line"># Set rss to specific value if you have burned your feed already.</span><br><span class="line">rss: /atom.xml</span><br><span class="line"></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本站采用 &lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo&lt;/a&gt; 引擎&lt;/p&gt;
    
    </summary>
    
      <category term="blog" scheme="https://blog.fanfq.com/categories/blog/"/>
    
    
      <category term="blog" scheme="https://blog.fanfq.com/tags/blog/"/>
    
      <category term="hexo" scheme="https://blog.fanfq.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Next v6 模板自定义配置</title>
    <link href="https://blog.fanfq.com/blog/Hexo_Next_v6_%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE.html"/>
    <id>https://blog.fanfq.com/blog/Hexo_Next_v6_自定义配置.html</id>
    <published>2015-11-08T02:26:44.000Z</published>
    <updated>2018-11-13T09:32:01.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本站采用 <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">NexT6.Pisces</a> 模板</p><a id="more"></a><h1 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Theme Core Configuration Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># If false, merge configs from `_data/next.yml` into default configuration (rewrite).</span><br><span class="line"># If true, will fully override default configuration by options from `_data/next.yml` (override). Only for NexT settings.</span><br><span class="line"># And if true, all config from default NexT `_config.yml` must be copied into `next.yml`. Use if you know what you are doing.</span><br><span class="line"># Useful if you want to comment some options from NexT `_config.yml` by `next.yml` without editing default config.</span><br><span class="line">override: false</span><br><span class="line"></span><br><span class="line"># Allow to cache content generation. Introduced in NexT v6.0.0.</span><br><span class="line">cache:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line"># Redefine custom file paths. Introduced in NexT v6.0.2.</span><br><span class="line"># If commented, will be used default custom file paths.</span><br><span class="line"></span><br><span class="line"># For example, you want to put your custom styles file</span><br><span class="line"># outside theme directory in root `source/_data`, set</span><br><span class="line"># `styles: source/_data/styles.styl`</span><br><span class="line">#custom_file_path:</span><br><span class="line">  # Default paths: layout/_custom/*</span><br><span class="line">  #head: source/_data/head.swig</span><br><span class="line">  #header: source/_data/header.swig</span><br><span class="line">  #sidebar: source/_data/sidebar.swig</span><br><span class="line"></span><br><span class="line">  # Default path: source/css/_variables/custom.styl</span><br><span class="line">  #variables: source/_data/variables.styl</span><br><span class="line">  # Default path: source/css/_mixins/custom.styl</span><br><span class="line">  #mixins: source/_data/mixins.styl</span><br><span class="line">  # Default path: source/css/_custom/custom.styl</span><br><span class="line">  #styles: source/_data/styles.styl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Site Information Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># To get or check favicons visit: https://realfavicongenerator.net</span><br><span class="line"># Put your favicons into `hexo-site/source/` (recommend) or `hexo-site/themes/next/source/images/` directory.</span><br><span class="line"></span><br><span class="line"># Default NexT favicons placed in `hexo-site/themes/next/source/images/` directory.</span><br><span class="line"># And if you want to place your icons in `hexo-site/source/` root directory, you must remove `/images` prefix from pathes.</span><br><span class="line"></span><br><span class="line"># For example, you put your favicons into `hexo-site/source/images` directory.</span><br><span class="line"># Then need to rename &amp; redefine they on any other names, otherwise icons from Next will rewrite your custom icons in Hexo.</span><br><span class="line">favicon:</span><br><span class="line">  #small: /images/favicon-16x16-next.png</span><br><span class="line">  medium: /images/favicon.ico</span><br><span class="line">  #apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  #safari_pinned_tab: /images/logo.svg</span><br><span class="line">  #android_manifest: /images/manifest.json</span><br><span class="line">  #ms_browserconfig: /images/browserconfig.xml</span><br><span class="line"></span><br><span class="line"># Set rss to false to disable feed link.</span><br><span class="line"># Leave rss as empty to use site&apos;s feed link, and install hexo-generator-feed: `npm install hexo-generator-feed --save`.</span><br><span class="line"># Set rss to specific value if you have burned your feed already.</span><br><span class="line">rss:</span><br><span class="line"></span><br><span class="line">footer:</span><br><span class="line">  # Specify the date when the site was setup.</span><br><span class="line">  # If not defined, current year will be used.</span><br><span class="line">  since: 2012</span><br><span class="line"></span><br><span class="line">  # Icon between year and copyright info.</span><br><span class="line">  icon:</span><br><span class="line">    # Icon name in fontawesome, see: https://fontawesome.com/v4.7.0/icons</span><br><span class="line">    # `heart` is recommended with animation in red (#ff0000).</span><br><span class="line">    name: user</span><br><span class="line">    # If you want to animate the icon, set it to true.</span><br><span class="line">    animated: false</span><br><span class="line">    # Change the color of icon, using Hex Code.</span><br><span class="line">    color: &quot;#808080&quot;</span><br><span class="line"></span><br><span class="line">  # If not defined, will be used `author` from Hexo main config.</span><br><span class="line">  copyright:</span><br><span class="line">  # -------------------------------------------------------------</span><br><span class="line">  powered:</span><br><span class="line">    # Hexo link (Powered by Hexo).</span><br><span class="line">    enable: true</span><br><span class="line">    # Version info of Hexo after Hexo link (vX.X.X).</span><br><span class="line">    version: false</span><br><span class="line"></span><br><span class="line">  theme:</span><br><span class="line">    # Theme &amp; scheme info link (Theme - NexT.scheme).</span><br><span class="line">    enable: true</span><br><span class="line">    # Version info of NexT after scheme info (vX.X.X).</span><br><span class="line">    version: false</span><br><span class="line">  # -------------------------------------------------------------</span><br><span class="line">  # Beian icp information for Chinese users. In China, every legal website should have a beian icp in website footer.</span><br><span class="line">  # http://www.miitbeian.gov.cn/ 苏ICP备15056794号-1</span><br><span class="line">  beian:</span><br><span class="line">    enable: true</span><br><span class="line">    icp: 苏ICP备15056794号</span><br><span class="line"></span><br><span class="line">  # -------------------------------------------------------------</span><br><span class="line">  # Any custom text can be defined here.</span><br><span class="line">  #custom_text: Hosted by &lt;a target=&quot;_blank&quot; rel=&quot;external nofollow&quot; href=&quot;https://pages.coding.me&quot;&gt;&lt;b&gt;Coding Pages&lt;/b&gt;&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># SEO Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.</span><br><span class="line"># See: https://support.google.com/webmasters/answer/139066</span><br><span class="line"># Tips: Before you open this tag, remember set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )</span><br><span class="line">canonical: true</span><br><span class="line"></span><br><span class="line"># Change headers hierarchy on site-subtitle (will be main site description) and on all post/pages titles for better SEO-optimization.</span><br><span class="line">seo: true</span><br><span class="line"></span><br><span class="line"># If true, will add site-subtitle to index page, added in main hexo config.</span><br><span class="line"># subtitle: Subtitle</span><br><span class="line">index_with_subtitle: false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Menu Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).</span><br><span class="line"># Usage: `Key: /link/ || icon`</span><br><span class="line"># Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.</span><br><span class="line"># Value before `||` delimeter is the target link.</span><br><span class="line"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.</span><br><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  #about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br><span class="line"></span><br><span class="line"># Enable/Disable menu icons / item badges.</span><br><span class="line">menu_settings:</span><br><span class="line">  icons: true</span><br><span class="line">  badges: false</span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Sidebar Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Posts / Categories / Tags in sidebar.</span><br><span class="line">site_state: true</span><br><span class="line"></span><br><span class="line"># Social Links.</span><br><span class="line"># Usage: `Key: permalink || icon`</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before `||` delimeter is the target permalink.</span><br><span class="line"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span><br><span class="line">social:</span><br><span class="line">  #GitHub: https://github.com/fanfq || github</span><br><span class="line">  #E-Mail: mailto:yourname@gmail.com || envelope</span><br><span class="line">  #Weibo: http://weibo.com/fanfq87 || weibo</span><br><span class="line">  #Google: https://plus.google.com/yourname || google</span><br><span class="line">  #Twitter: https://twitter.com/fangqingfan || twitter</span><br><span class="line">  #Facebook: https://www.facebook.com/fangqing.fan.7 || facebook</span><br><span class="line">  #VK Group: https://vk.com/yourname || vk</span><br><span class="line">  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span><br><span class="line">  #YouTube: https://www.youtube.com/channel/UCLw0gVHqiBmOP9U6rSHehSA || youtube</span><br><span class="line">  #Instagram: https://instagram.com/fredchannelv || instagram</span><br><span class="line">  #Skype: skype:fangqing.fan?call|chat || skype</span><br><span class="line">  #微信: skype:yourname?call|chat || wechat</span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  icons_only: false</span><br><span class="line">  transition: false</span><br><span class="line">  # Dependencies: exturl: true in Tags Settings section below.</span><br><span class="line">  # To encrypt links above use https://www.base64encode.org</span><br><span class="line">  # Example encoded link: `GitHub: aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQ= || github`</span><br><span class="line">  exturl: false</span><br><span class="line"></span><br><span class="line"># Follow me on GitHub banner in right-top corner.</span><br><span class="line"># Usage: `permalink || title`</span><br><span class="line"># Value before `||` delimeter is the target permalink.</span><br><span class="line"># Value after `||` delimeter is the title and aria-label name.</span><br><span class="line">#github_banner: https://github.com/yourname || Follow me on GitHub</span><br><span class="line"></span><br><span class="line"># Blog rolls</span><br><span class="line">links_icon: link</span><br><span class="line">links_title: Links</span><br><span class="line">links_layout: block</span><br><span class="line">#links_layout: inline</span><br><span class="line">#links:</span><br><span class="line">  #Title: http://example.com/</span><br><span class="line"></span><br><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # in theme directory(source/images): /images/avatar.gif</span><br><span class="line">  # in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class="line">  # You can also use other linking images.</span><br><span class="line">  url: /images/A9808FDB264A02DD004D032FD091DAE2.jpg</span><br><span class="line">  # If true, the avatar would be dispalyed in circle.</span><br><span class="line">  rounded: false</span><br><span class="line">  # The value of opacity should be choose from 0 to 1 to set the opacity of the avatar.</span><br><span class="line">  opacity: 1</span><br><span class="line">  # If true, the avatar would be rotated with the cursor.</span><br><span class="line">  rotated: false</span><br><span class="line"></span><br><span class="line"># Table Of Contents in the Sidebar</span><br><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: true</span><br><span class="line"></span><br><span class="line">  # If true, all words will placed on next lines if header width longer then sidebar width.</span><br><span class="line">  wrap: false</span><br><span class="line"></span><br><span class="line"># Creative Commons 4.0 International License.</span><br><span class="line"># http://creativecommons.org/</span><br><span class="line"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span><br><span class="line">#creative_commons: by-nc-sa</span><br><span class="line">#creative_commons:</span><br><span class="line"></span><br><span class="line">sidebar:</span><br><span class="line">  # Sidebar Position, available value: left | right (only for Pisces | Gemini).</span><br><span class="line">  position: left</span><br><span class="line">  #position: right</span><br><span class="line"></span><br><span class="line">  # Manual define the sidebar width.</span><br><span class="line">  # If commented, will be default for:</span><br><span class="line">  # Muse | Mist: 320</span><br><span class="line">  # Pisces | Gemini: 240</span><br><span class="line">  #width: 300</span><br><span class="line"></span><br><span class="line">  # Sidebar Display, available value (only for Muse | Mist):</span><br><span class="line">  #  - post    expand on posts automatically. Default.</span><br><span class="line">  #  - always  expand for all pages automatically</span><br><span class="line">  #  - hide    expand only when click on the sidebar toggle icon.</span><br><span class="line">  #  - remove  Totally remove sidebar including sidebar toggle.</span><br><span class="line">  display: post</span><br><span class="line">  #display: always</span><br><span class="line">  #display: hide</span><br><span class="line">  #display: remove</span><br><span class="line"></span><br><span class="line">  # Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span><br><span class="line">  offset: 12</span><br><span class="line"></span><br><span class="line">  # Back to top in sidebar (only for Pisces | Gemini).</span><br><span class="line">  b2t: false</span><br><span class="line"></span><br><span class="line">  # Scroll percent label in b2t button.</span><br><span class="line">  scrollpercent: true</span><br><span class="line"></span><br><span class="line">  # Enable sidebar on narrow view (only for Muse | Mist).</span><br><span class="line">  onmobile: false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Post Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span><br><span class="line">scroll_to_more: true</span><br><span class="line"></span><br><span class="line"># Automatically saving scroll position on each post/page in cookies.</span><br><span class="line">save_scroll: false</span><br><span class="line"></span><br><span class="line"># Automatically excerpt description in homepage as preamble text.</span><br><span class="line">excerpt_description: true</span><br><span class="line"></span><br><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: false</span><br><span class="line">  length: 500</span><br><span class="line"></span><br><span class="line"># Read more button</span><br><span class="line"># If true, the read more button would be displayed in excerpt section</span><br><span class="line">read_more_btn: true</span><br><span class="line"></span><br><span class="line"># Post meta display settings</span><br><span class="line">post_meta:</span><br><span class="line">  item_text: true</span><br><span class="line">  created_at: true</span><br><span class="line">  updated_at:</span><br><span class="line">    enabled: false</span><br><span class="line">    # If true, show updated date label only if `updated date` different from &apos;created date&apos; (post edited in another day than was created).</span><br><span class="line">    # And if post will edited in same day as created, edited time will show in popup title under created time label.</span><br><span class="line">    # If false show anyway, but if post edited in same day, show only edited time.</span><br><span class="line">    another_day: true</span><br><span class="line">  categories: true</span><br><span class="line"></span><br><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_post: true</span><br><span class="line">  item_text_total: false</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br><span class="line"></span><br><span class="line">codeblock:</span><br><span class="line">  # Manual define the border radius in codeblock</span><br><span class="line">  # Leave it empty for the default 1</span><br><span class="line">  border_radius:</span><br><span class="line">  # Add copy button on codeblock</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true</span><br><span class="line">    # Show text copy result</span><br><span class="line">    show_result: true</span><br><span class="line"></span><br><span class="line"># Wechat Subscriber</span><br><span class="line">wechat_subscriber:</span><br><span class="line">  enabled: false</span><br><span class="line">  qcode: /images/qrcode.jpg</span><br><span class="line">  description: 猴子交流群，微信添加好友后拉你进群。接头暗号&quot;猴子&quot;</span><br><span class="line"></span><br><span class="line"># Reward</span><br><span class="line">reward_comment: 猴子交流群，添加好友后拉你进群。接头暗号&quot;猴子&quot;</span><br><span class="line">wechatpay: /images/qrcode.jpg</span><br><span class="line">alipay: /images/qq.jpg</span><br><span class="line">#bitcoin: /images/bitcoin.png</span><br><span class="line"></span><br><span class="line"># Related popular posts</span><br><span class="line"># Dependencies: https://github.com/tea3/hexo-related-popular-posts</span><br><span class="line">related_posts:</span><br><span class="line">  enable: false</span><br><span class="line">  title: # custom header, leave empty to use the default one</span><br><span class="line">  display_in_home: false</span><br><span class="line">  params:</span><br><span class="line">    maxCount: 5</span><br><span class="line">    #PPMixingRate: 0.0</span><br><span class="line">    #isDate: false</span><br><span class="line">    #isImage: false</span><br><span class="line">    #isExcerpt: false</span><br><span class="line"></span><br><span class="line"># Declare license on posts</span><br><span class="line">post_copyright:</span><br><span class="line">  enable: true</span><br><span class="line">  license: &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&gt;CC BY-NC-SA 4.0&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"># Post edit</span><br><span class="line"># Dependencies: https://github.com/hexojs/hexo-deployer-git</span><br><span class="line">post_edit:</span><br><span class="line">  enable: false</span><br><span class="line">  url: https://github.com/theme-next/theme-next.org/_posts/tree/master/ # Link for view source.</span><br><span class="line"># url: https://github.com/theme-next/theme-next.org/_posts/edit/master/ # Link for fork &amp; edit.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Misc Theme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Reduce padding / margin indents on devices with narrow width.</span><br><span class="line">mobile_layout_economy: false</span><br><span class="line"></span><br><span class="line"># Android Chrome header panel color ($brand-bg / $headband-bg =&gt; $black-deep).</span><br><span class="line">android_chrome_color: &quot;#222&quot;</span><br><span class="line"></span><br><span class="line"># Custom Logo.</span><br><span class="line"># !!Only available for Default Scheme currently.</span><br><span class="line"># Options:</span><br><span class="line">#   enabled: [true/false] - Replace with specific image</span><br><span class="line">#   image: url-of-image   - Images&apos;s url</span><br><span class="line">custom_logo:</span><br><span class="line">  enabled: false</span><br><span class="line">  image:</span><br><span class="line"></span><br><span class="line"># Code Highlight theme</span><br><span class="line"># Available values: normal | night | night eighties | night blue | night bright</span><br><span class="line"># https://github.com/chriskempson/tomorrow-theme</span><br><span class="line">highlight_theme: normal</span><br><span class="line"></span><br><span class="line"># Enable &quot;cheers&quot; for archive page.</span><br><span class="line">cheers_enabled: true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Font Settings</span><br><span class="line"># - Find fonts on Google Fonts (https://www.google.com/fonts)</span><br><span class="line"># - All fonts set here will have the following styles:</span><br><span class="line">#     light, light italic, normal, normal italic, bold, bold italic</span><br><span class="line"># - Be aware that setting too much fonts will cause site running slowly</span><br><span class="line"># - Introduce in 5.0.1</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># CAUTION! Safari Version 10.1.2 bug: https://github.com/iissnan/hexo-theme-next/issues/1844</span><br><span class="line"># To avoid space between header and sidebar in Pisces / Gemini themes recommended to use Web Safe fonts for `global` (and `logo`):</span><br><span class="line"># Arial | Tahoma | Helvetica | Times New Roman | Courier New | Verdana | Georgia | Palatino | Garamond | Comic Sans MS | Trebuchet MS</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  # Uri of fonts host. E.g. //fonts.googleapis.com (Default).</span><br><span class="line">  host:</span><br><span class="line"></span><br><span class="line">  # Font options:</span><br><span class="line">  # `external: true` will load this font family from `host` above.</span><br><span class="line">  # `family: Times New Roman`. Without any quotes.</span><br><span class="line">  # `size: xx`. Use `px` as unit.</span><br><span class="line"></span><br><span class="line">  # Global font settings used for all elements in &lt;body&gt;.</span><br><span class="line">  global:</span><br><span class="line">    external: true</span><br><span class="line">    family: Monda</span><br><span class="line">    size: 14</span><br><span class="line"></span><br><span class="line">  # Font settings for Headlines (H1, H2, H3, H4, H5, H6).</span><br><span class="line">  # Fallback to `global` font settings.</span><br><span class="line">  headings:</span><br><span class="line">    external: true</span><br><span class="line">    family: </span><br><span class="line">    size: H1</span><br><span class="line"></span><br><span class="line">  # Font settings for posts.</span><br><span class="line">  # Fallback to `global` font settings.</span><br><span class="line">  posts:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line"></span><br><span class="line">  # Font settings for Logo.</span><br><span class="line">  # Fallback to `global` font settings.</span><br><span class="line">  logo:</span><br><span class="line">    external: true</span><br><span class="line">    family: Lobster Two</span><br><span class="line">    size: 36</span><br><span class="line"></span><br><span class="line">  # Font settings for &lt;code&gt; and code blocks.</span><br><span class="line">  codes:</span><br><span class="line">    external: true</span><br><span class="line">    family: PT Mono</span><br><span class="line">    size: 9</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Third Party Services Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Math Equations Render Support</span><br><span class="line">math:</span><br><span class="line">  enable: false</span><br><span class="line"></span><br><span class="line">  # Default(true) will load mathjax/katex script on demand</span><br><span class="line">  # That is it only render those page who has &apos;mathjax: true&apos; in Front Matter.</span><br><span class="line">  # If you set it to false, it will load mathjax/katex srcipt EVERY PAGE.</span><br><span class="line">  per_page: true</span><br><span class="line"></span><br><span class="line">  engine: mathjax</span><br><span class="line">  #engine: katex</span><br><span class="line"></span><br><span class="line">  # hexo-rendering-pandoc (or hexo-renderer-kramed) needed to full MathJax support.</span><br><span class="line">  mathjax:</span><br><span class="line">    # Use 2.7.1 as default, jsdelivr as default CDN, works everywhere even in China</span><br><span class="line">    cdn: //cdn.jsdelivr.net/npm/mathjax@2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span><br><span class="line">    # For newMathJax CDN (cdnjs.cloudflare.com) with fallback to oldMathJax (cdn.mathjax.org).</span><br><span class="line">    #cdn: //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span><br><span class="line">    # For direct link to MathJax.js with CloudFlare CDN (cdnjs.cloudflare.com).</span><br><span class="line">    #cdn: //cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML</span><br><span class="line"></span><br><span class="line">  # hexo-renderer-markdown-it-plus (or hexo-renderer-markdown-it with markdown-it-katex plugin)</span><br><span class="line">  # needed to full Katex support.</span><br><span class="line">  katex:</span><br><span class="line">    # Use 0.7.1 as default, jsdelivr as default CDN, works everywhere even in China</span><br><span class="line">    cdn: //cdn.jsdelivr.net/npm/katex@0.7.1/dist/katex.min.css</span><br><span class="line">    # CDNJS, provided by cloudflare, maybe the best CDN, but not works in China</span><br><span class="line">    #cdn: //cdnjs.cloudflare.com/ajax/libs/KaTeX/0.7.1/katex.min.css</span><br><span class="line"></span><br><span class="line"># Han Support</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-han</span><br><span class="line">han: false</span><br><span class="line"></span><br><span class="line"># Pangu Support</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-pangu</span><br><span class="line"># For more information: https://github.com/vinta/pangu.js</span><br><span class="line">pangu: false</span><br><span class="line"></span><br><span class="line"># Swiftype Search API Key</span><br><span class="line">#swiftype_key: </span><br><span class="line"></span><br><span class="line"># Baidu Analytics ID  blog.fanfq.com</span><br><span class="line">baidu_analytics: 19da5bbef4829ba1366cde88409a7e0e</span><br><span class="line"></span><br><span class="line"># Growingio Analytics ID</span><br><span class="line"># Copyright 2015-2018 GrowingIO, Inc. More info available at http://www.growingio.com</span><br><span class="line">#growingio_analytics: #your projectId</span><br><span class="line"></span><br><span class="line"># Disqus</span><br><span class="line">disqus:</span><br><span class="line">  enable: false</span><br><span class="line">  shortname:</span><br><span class="line">  count: true</span><br><span class="line">  lazyload: false</span><br><span class="line"></span><br><span class="line"># changyan</span><br><span class="line">changyan:</span><br><span class="line">  enable: false</span><br><span class="line">  appid:</span><br><span class="line">  appkey:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Valine.</span><br><span class="line"># You can get your appid and appkey from https://leancloud.cn</span><br><span class="line"># more info please open https://valine.js.org</span><br><span class="line">valine:</span><br><span class="line">  enable: false # When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version.</span><br><span class="line">  appid:  # your leancloud application appid</span><br><span class="line">  appkey:  # your leancloud application appkey</span><br><span class="line">  notify: false # mail notifier , https://github.com/xCss/Valine/wiki</span><br><span class="line">  verify: false # Verification code</span><br><span class="line">  placeholder: Just go go # comment box placeholder</span><br><span class="line">  avatar: mm # gravatar style</span><br><span class="line">  guest_info: nick,mail,link # custom comment header</span><br><span class="line">  pageSize: 10 # pagination size</span><br><span class="line">  visitor: false # leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors&apos; for counter compatibility. Article reading statistic https://valine.js.org/visitor.html</span><br><span class="line"></span><br><span class="line"># Support for LiveRe comments system.</span><br><span class="line"># You can get your uid from https://livere.com/insight/myCode (General web site)</span><br><span class="line">#livere_uid: your uid</span><br><span class="line"></span><br><span class="line"># Gitment</span><br><span class="line"># Introduction: https://imsun.net/posts/gitment-introduction/</span><br><span class="line">gitment:</span><br><span class="line">  enable: false</span><br><span class="line">  mint: true # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span><br><span class="line">  count: true # Show comments count in post meta area</span><br><span class="line">  lazy: false # Comments lazy loading with a button</span><br><span class="line">  cleanly: false # Hide &apos;Powered by ...&apos; on footer, and more</span><br><span class="line">  language: # Force language, or auto switch by theme</span><br><span class="line">  github_user: # MUST HAVE, Your Github Username</span><br><span class="line">  github_repo: # MUST HAVE, The name of the repo you use to store Gitment comments</span><br><span class="line">  client_id: # MUST HAVE, Github client id for the Gitment</span><br><span class="line">  client_secret: # EITHER this or proxy_gateway, Github access secret token for the Gitment</span><br><span class="line">  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect</span><br><span class="line">  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled</span><br><span class="line"></span><br><span class="line"># Baidu Share</span><br><span class="line"># Available value:</span><br><span class="line">#    button | slide</span><br><span class="line"># Warning: Baidu Share does not support https.</span><br><span class="line">#baidushare:</span><br><span class="line">#  type: button</span><br><span class="line"></span><br><span class="line"># addthis Share, see: https://www.addthis.com/</span><br><span class="line">#add_this_id:</span><br><span class="line"></span><br><span class="line"># NeedMoreShare2</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-needmoreshare2</span><br><span class="line"># See: https://github.com/revir/need-more-share2</span><br><span class="line"># Also see: https://github.com/DzmVasileusky/needShareButton</span><br><span class="line"># iconStyle: default | box</span><br><span class="line"># boxForm: horizontal | vertical</span><br><span class="line"># position: top / middle / bottom + Left / Center / Right</span><br><span class="line"># networks: Weibo,Wechat,Douban,QQZone,Twitter,Linkedin,Mailto,Reddit,</span><br><span class="line">#           Delicious,StumbleUpon,Pinterest,Facebook,GooglePlus,Slashdot,</span><br><span class="line">#           Technorati,Posterous,Tumblr,GoogleBookmarks,Newsvine,</span><br><span class="line">#           Evernote,Friendfeed,Vkontakte,Odnoklassniki,Mailru</span><br><span class="line">needmoreshare2:</span><br><span class="line">  enable: false</span><br><span class="line">  postbottom:</span><br><span class="line">    enable: false</span><br><span class="line">    options:</span><br><span class="line">      iconStyle: box</span><br><span class="line">      boxForm: horizontal</span><br><span class="line">      position: bottomCenter</span><br><span class="line">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br><span class="line">  float:</span><br><span class="line">    enable: false</span><br><span class="line">    options:</span><br><span class="line">      iconStyle: box</span><br><span class="line">      boxForm: horizontal</span><br><span class="line">      position: middleRight</span><br><span class="line">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br><span class="line"></span><br><span class="line"># Google Webmaster tools verification setting</span><br><span class="line"># See: https://www.google.com/webmasters/</span><br><span class="line"># google_site_verification: google584834cfca4925ee</span><br><span class="line"></span><br><span class="line"># Google Analytics</span><br><span class="line">google_analytics: UA-128889454-1</span><br><span class="line"></span><br><span class="line"># Bing Webmaster tools verification setting</span><br><span class="line"># See: https://www.bing.com/webmaster/</span><br><span class="line">#bing_site_verification:</span><br><span class="line"></span><br><span class="line"># Yandex Webmaster tools verification setting</span><br><span class="line"># See: https://webmaster.yandex.ru/</span><br><span class="line">#yandex_site_verification:</span><br><span class="line"></span><br><span class="line"># Baidu Webmaster tools verification setting</span><br><span class="line"># See: https://ziyuan.baidu.com/site/</span><br><span class="line">#baidu_site_verification:</span><br><span class="line"></span><br><span class="line"># CNZZ count</span><br><span class="line">#cnzz_siteid:</span><br><span class="line"></span><br><span class="line"># Application Insights</span><br><span class="line"># See https://azure.microsoft.com/en-us/services/application-insights/</span><br><span class="line"># application_insights:</span><br><span class="line"></span><br><span class="line"># Post widgets &amp; FB/VK comments settings.</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Facebook SDK Support.</span><br><span class="line"># https://github.com/iissnan/hexo-theme-next/pull/410</span><br><span class="line">facebook_sdk:</span><br><span class="line">  enable:       false</span><br><span class="line">  app_id:       #&lt;app_id&gt;</span><br><span class="line">  fb_admin:     #&lt;user_id&gt;</span><br><span class="line">  like_button:  #true</span><br><span class="line">  webmaster:    #true</span><br><span class="line"></span><br><span class="line"># Facebook comments plugin</span><br><span class="line"># This plugin depends on Facebook SDK.</span><br><span class="line"># If facebook_sdk.enable is false, Facebook comments plugin is unavailable.</span><br><span class="line">facebook_comments_plugin:</span><br><span class="line">  enable:       false</span><br><span class="line">  num_of_posts: 10    # min posts num is 1</span><br><span class="line">  width:        100%  # default width is 550px</span><br><span class="line">  scheme:       light # default scheme is light (light or dark)</span><br><span class="line"></span><br><span class="line"># VKontakte API Support.</span><br><span class="line"># To get your AppID visit https://vk.com/editapp?act=create</span><br><span class="line">vkontakte_api:</span><br><span class="line">  enable:       false</span><br><span class="line">  app_id:       #&lt;app_id&gt;</span><br><span class="line">  like:         true</span><br><span class="line">  comments:     true</span><br><span class="line">  num_of_posts: 10</span><br><span class="line"></span><br><span class="line"># Star rating support to each article.</span><br><span class="line"># To get your ID visit https://widgetpack.com</span><br><span class="line">rating:</span><br><span class="line">  enable: false</span><br><span class="line">  id:     #&lt;app_id&gt;</span><br><span class="line">  color:  fc6423</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Show number of visitors to each article.</span><br><span class="line"># You can visit https://leancloud.cn get AppID and AppKey.</span><br><span class="line">leancloud_visitors:</span><br><span class="line">  enable: false</span><br><span class="line">  app_id: #&lt;app_id&gt;</span><br><span class="line">  app_key: #&lt;app_key&gt;</span><br><span class="line">  # Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security</span><br><span class="line">  # If you don&apos;t care about security in lc counter and just want to use it directly</span><br><span class="line">  # (without hexo-leancloud-counter-security plugin), set the `security` to `false`.</span><br><span class="line">  security: true</span><br><span class="line">  betterPerformance: false</span><br><span class="line"></span><br><span class="line"># Another tool to show number of visitors to each article.</span><br><span class="line"># visit https://console.firebase.google.com/u/0/ to get apiKey and projectId</span><br><span class="line"># visit https://firebase.google.com/docs/firestore/ to get more information about firestore</span><br><span class="line">firestore:</span><br><span class="line">  enable: false</span><br><span class="line">  collection: articles #required, a string collection name to access firestore database</span><br><span class="line">  apiKey: #required</span><br><span class="line">  projectId: #required</span><br><span class="line">  bluebird: false #enable this if you want to include bluebird 3.5.1(core version) Promise polyfill</span><br><span class="line"></span><br><span class="line"># Show Views/Visitors of the website/page with busuanzi.</span><br><span class="line"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span><br><span class="line">busuanzi_count:</span><br><span class="line">  enable: false</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: eye</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Tencent analytics ID</span><br><span class="line"># tencent_analytics:</span><br><span class="line"></span><br><span class="line"># Tencent MTA ID</span><br><span class="line"># tencent_mta:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span><br><span class="line">baidu_push: false</span><br><span class="line"></span><br><span class="line"># Google Calendar</span><br><span class="line"># Share your recent schedule to others via calendar page</span><br><span class="line">#</span><br><span class="line"># API Documentation:</span><br><span class="line"># https://developers.google.com/google-apps/calendar/v3/reference/events/list</span><br><span class="line"># Enabled APIs and services</span><br><span class="line"># api_key: https://console.developers.google.com/</span><br><span class="line"># Create &amp; manage a public Google calendar: https://support.google.com/calendar/answer/37083?hl=en</span><br><span class="line">calendar:</span><br><span class="line">  enable: false</span><br><span class="line">  calendar_id: &lt;required&gt; # Your Google account E-Mail</span><br><span class="line">  api_key: &lt;required&gt;</span><br><span class="line">  orderBy: startTime</span><br><span class="line">  offsetMax: 24 # Time Range</span><br><span class="line">  offsetMin: 4 # Time Range</span><br><span class="line">  timeZone:</span><br><span class="line">  showDeleted: false</span><br><span class="line">  singleEvents: true</span><br><span class="line">  maxResults: 250</span><br><span class="line"></span><br><span class="line"># Algolia Search</span><br><span class="line"># See: https://github.com/theme-next/hexo-theme-next/blob/master/docs/ALGOLIA-SEARCH.md</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-algolia-instant-search</span><br><span class="line">algolia_search:</span><br><span class="line">  enable: false</span><br><span class="line">  hits:</span><br><span class="line">    per_page: 10</span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: Search for Posts</span><br><span class="line">    hits_empty: &quot;We didn&apos;t find any results for the search: $&#123;query&#125;&quot;</span><br><span class="line">    hits_stats: &quot;$&#123;hits&#125; results found in $&#123;time&#125; ms&quot;</span><br><span class="line"></span><br><span class="line"># Local search</span><br><span class="line"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  # unescape html strings to the readable one</span><br><span class="line">  unescape: false</span><br><span class="line"></span><br><span class="line"># Bookmark Support</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-bookmark</span><br><span class="line">bookmark:</span><br><span class="line">  enable: false</span><br><span class="line">  # if auto</span><br><span class="line">  #   - save the reading position when closing the page</span><br><span class="line">  #   - or clicking the bookmark-icon</span><br><span class="line">  # if manual, only save it by clicking the bookmark-icon</span><br><span class="line">  save: auto</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Tags Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># External URL with BASE64 encrypt &amp; decrypt.</span><br><span class="line"># Usage: &#123;% exturl text url &quot;title&quot; %&#125;</span><br><span class="line"># Alias: &#123;% extlink text url &quot;title&quot; %&#125;</span><br><span class="line">exturl: false</span><br><span class="line"></span><br><span class="line"># Note tag (bs-callout).</span><br><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border_radius: 3</span><br><span class="line">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span><br><span class="line">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span><br><span class="line">  light_bg_offset: 0</span><br><span class="line"></span><br><span class="line"># Label tag.</span><br><span class="line">label: true</span><br><span class="line"></span><br><span class="line"># Tabs tag.</span><br><span class="line">tabs:</span><br><span class="line">  enable: true</span><br><span class="line">  transition:</span><br><span class="line">    tabs: false</span><br><span class="line">    labels: true</span><br><span class="line">  border_radius: 0</span><br><span class="line"></span><br><span class="line"># Reading progress bar</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-reading-progress</span><br><span class="line">reading_progress:</span><br><span class="line">  enable: false</span><br><span class="line">  color: &quot;#37c6c0&quot;</span><br><span class="line">  height: 2px</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#! ---------------------------------------------------------------</span><br><span class="line">#! DO NOT EDIT THE FOLLOWING SETTINGS</span><br><span class="line">#! UNLESS YOU KNOW WHAT YOU ARE DOING</span><br><span class="line">#! ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Use velocity to animate everything.</span><br><span class="line">motion:</span><br><span class="line">  enable: true</span><br><span class="line">  async: false</span><br><span class="line">  transition:</span><br><span class="line">    # Transition variants:</span><br><span class="line">    # fadeIn | fadeOut | flipXIn | flipXOut | flipYIn | flipYOut | flipBounceXIn | flipBounceXOut | flipBounceYIn | flipBounceYOut</span><br><span class="line">    # swoopIn | swoopOut | whirlIn | whirlOut | shrinkIn | shrinkOut | expandIn | expandOut</span><br><span class="line">    # bounceIn | bounceOut | bounceUpIn | bounceUpOut | bounceDownIn | bounceDownOut | bounceLeftIn | bounceLeftOut | bounceRightIn | bounceRightOut</span><br><span class="line">    # slideUpIn | slideUpOut | slideDownIn | slideDownOut | slideLeftIn | slideLeftOut | slideRightIn | slideRightOut</span><br><span class="line">    # slideUpBigIn | slideUpBigOut | slideDownBigIn | slideDownBigOut | slideLeftBigIn | slideLeftBigOut | slideRightBigIn | slideRightBigOut</span><br><span class="line">    # perspectiveUpIn | perspectiveUpOut | perspectiveDownIn | perspectiveDownOut | perspectiveLeftIn | perspectiveLeftOut | perspectiveRightIn | perspectiveRightOut</span><br><span class="line">    post_block: fadeIn</span><br><span class="line">    post_header: slideDownIn</span><br><span class="line">    post_body: slideDownIn</span><br><span class="line">    coll_header: slideLeftIn</span><br><span class="line">    # Only for Pisces | Gemini.</span><br><span class="line">    sidebar: slideUpIn</span><br><span class="line"></span><br><span class="line"># Fancybox. There is support for old version 2 and new version 3.</span><br><span class="line"># Please, choose only any one variant, do not need to install both.</span><br><span class="line"># For install 2.x: https://github.com/theme-next/theme-next-fancybox</span><br><span class="line"># For install 3.x: https://github.com/theme-next/theme-next-fancybox3</span><br><span class="line">fancybox: true</span><br><span class="line"></span><br><span class="line"># Added switch option for separated repo in 6.0.0.</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-fastclick</span><br><span class="line">fastclick: false</span><br><span class="line"></span><br><span class="line"># Added switch option for separated repo in 6.0.0.</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-jquery-lazyload</span><br><span class="line">lazyload: false</span><br><span class="line"></span><br><span class="line"># Progress bar in the top during page loading.</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-pace</span><br><span class="line">pace: false</span><br><span class="line"># Themes list:</span><br><span class="line">#pace-theme-big-counter</span><br><span class="line">#pace-theme-bounce</span><br><span class="line">#pace-theme-barber-shop</span><br><span class="line">#pace-theme-center-atom</span><br><span class="line">#pace-theme-center-circle</span><br><span class="line">#pace-theme-center-radar</span><br><span class="line">#pace-theme-center-simple</span><br><span class="line">#pace-theme-corner-indicator</span><br><span class="line">#pace-theme-fill-left</span><br><span class="line">#pace-theme-flash</span><br><span class="line">#pace-theme-loading-bar</span><br><span class="line">#pace-theme-mac-osx</span><br><span class="line">#pace-theme-minimal</span><br><span class="line"># For example</span><br><span class="line"># pace_theme: pace-theme-center-simple</span><br><span class="line">pace_theme: pace-theme-minimal</span><br><span class="line"></span><br><span class="line"># Canvas-nest</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-canvas-nest</span><br><span class="line">canvas_nest:</span><br><span class="line">  enable: false</span><br><span class="line">  onmobile: true # display on mobile or not</span><br><span class="line">  color: &apos;0,0,255&apos; # RGB values, use &apos;,&apos; to separate</span><br><span class="line">  opacity: 0.5 # the opacity of line: 0~1</span><br><span class="line">  zIndex: -1 # z-index property of the background</span><br><span class="line">  count: 99 # the number of lines</span><br><span class="line"></span><br><span class="line"># JavaScript 3D library.</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-three</span><br><span class="line"># three_waves</span><br><span class="line">three_waves: false</span><br><span class="line"># canvas_lines</span><br><span class="line">canvas_lines: false</span><br><span class="line"># canvas_sphere</span><br><span class="line">canvas_sphere: false</span><br><span class="line"></span><br><span class="line"># Only fit scheme Pisces</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-canvas-ribbon</span><br><span class="line"># Canvas-ribbon</span><br><span class="line"># size: The width of the ribbon.</span><br><span class="line"># alpha: The transparency of the ribbon.</span><br><span class="line"># zIndex: The display level of the ribbon.</span><br><span class="line">canvas_ribbon:</span><br><span class="line">  enable: false</span><br><span class="line">  size: 300</span><br><span class="line">  alpha: 0.6</span><br><span class="line">  zIndex: -1</span><br><span class="line"></span><br><span class="line"># Script Vendors.</span><br><span class="line"># Set a CDN address for the vendor you want to customize.</span><br><span class="line"># For example</span><br><span class="line">#    jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js</span><br><span class="line"># Be aware that you should use the same version as internal ones to avoid potential problems.</span><br><span class="line"># Please use the https protocol of CDN files when you enable https on your site.</span><br><span class="line">vendors:</span><br><span class="line">  # Internal path prefix. Please do not edit it.</span><br><span class="line">  _internal: lib</span><br><span class="line"></span><br><span class="line">  # Internal version: 2.1.3</span><br><span class="line">  # Example: </span><br><span class="line">  # jquery: //cdn.jsdelivr.net/npm/jquery@2.1.3/dist/jquery.min.js</span><br><span class="line">  jquery: //cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js</span><br><span class="line">  #jquery:</span><br><span class="line"></span><br><span class="line">  # Internal version: 2.1.5</span><br><span class="line">  # See: http://fancyapps.com/fancybox/</span><br><span class="line">  # Example: </span><br><span class="line">  # fancybox: //cdn.jsdelivr.net/npm/fancybox@3.0.0/dist/js/jquery.fancybox.pack.js</span><br><span class="line">  # fancybox_css: //cdn.jsdelivr.net/npm/fancybox@3.0.0/dist/css/jquery.fancybox.min.css</span><br><span class="line">  # fancybox: //cdnjs.cloudflare.com/ajax/libs/fancybox/3.2.5/jquery.fancybox.min.js</span><br><span class="line">  # fancybox_css: //cdnjs.cloudflare.com/ajax/libs/fancybox/3.2.5/jquery.fancybox.min.css</span><br><span class="line">  #fancybox:</span><br><span class="line">  #fancybox_css:</span><br><span class="line">  fancybox: //cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.js</span><br><span class="line">  fancybox_css: //cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.css</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.6</span><br><span class="line">  # See: https://github.com/ftlabs/fastclick</span><br><span class="line">  # Example: </span><br><span class="line">  # fastclick: //cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js</span><br><span class="line">  fastclick:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.9.7</span><br><span class="line">  # See: https://github.com/tuupola/jquery_lazyload</span><br><span class="line">  # lazyload: //cdn.jsdelivr.net/npm/jquery_lazyload@1.9.3/jquery.lazyload.min.js</span><br><span class="line">  lazyload:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.2.1</span><br><span class="line">  # See: http://VelocityJS.org</span><br><span class="line">  # Example: </span><br><span class="line">  # velocity: https://cdn.jsdelivr.net/npm/velocity-animate@1.2.1/velocity.min.js</span><br><span class="line">  # velocity: https://cdnjs.cloudflare.com/ajax/libs/velocity/1.2.1/velocity.min.js</span><br><span class="line">  velocity:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.2.1</span><br><span class="line">  # See: http://VelocityJS.org</span><br><span class="line">  # velocity_ui: //cdn.jsdelivr.net/npm/velocity-animate@1.2.1/velocity.ui.min.js</span><br><span class="line">  # velocity_ui: //cdnjs.cloudflare.com/ajax/libs/velocity/1.2.1/velocity.ui.min.js</span><br><span class="line">  velocity_ui:</span><br><span class="line"></span><br><span class="line">  # Internal version: 0.7.9</span><br><span class="line">  # See: https://faisalman.github.io/ua-parser-js/</span><br><span class="line">  # Example: </span><br><span class="line">  # ua_parser: //cdn.jsdelivr.net/npm/ua-parser-js@0.7.17/src/ua-parser.min.js</span><br><span class="line">  # ua_parser: //cdnjs.cloudflare.com/ajax/libs/UAParser.js/0.7.9/ua-parser.min.js</span><br><span class="line">  ua_parser:</span><br><span class="line"></span><br><span class="line">  # Internal version: 4.6.2</span><br><span class="line">  # See: http://fontawesome.io/</span><br><span class="line">  # Example: </span><br><span class="line">  fontawesome: //cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css</span><br><span class="line">  # fontawesome: //cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css</span><br><span class="line">  #fontawesome:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1</span><br><span class="line">  # https://www.algolia.com</span><br><span class="line">  # Example: </span><br><span class="line">  # algolia_instant_js: //cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.js</span><br><span class="line">  # algolia_instant_css: //cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.min.css</span><br><span class="line">  algolia_instant_js:</span><br><span class="line">  algolia_instant_css:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.2</span><br><span class="line">  # See: https://github.com/HubSpot/pace</span><br><span class="line">  # Example: </span><br><span class="line">  # pace: //cdn.jsdelivr.net/npm/pace-js@1.0.2/pace.min.js</span><br><span class="line">  # pace: //cdnjs.cloudflare.com/ajax/libs/pace/1.0.2/pace.min.js</span><br><span class="line">  # pace_css: //cdn.jsdelivr.net/npm/pace-js@1.0.2/themes/blue/pace-theme-minimal.css</span><br><span class="line">  # pace_css: //cdnjs.cloudflare.com/ajax/libs/pace/1.0.2/themes/blue/pace-theme-minimal.min.css</span><br><span class="line">  pace:</span><br><span class="line">  pace_css:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.0</span><br><span class="line">  # See: https://github.com/theme-next/theme-next-canvas-nest</span><br><span class="line">  canvas_nest: #//cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-nest@1.0.0/canvas-nest.min.js</span><br><span class="line">  canvas_nest_nomobile: #//cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-nest@1.0.0/canvas-nest-nomobile.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.0</span><br><span class="line">  # See: https://github.com/theme-next/theme-next-three</span><br><span class="line">  # Example: </span><br><span class="line">  # three: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1.0.0/three.min.js</span><br><span class="line">  # three_waves: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1.0.0/three-waves.min.js</span><br><span class="line">  # canvas_lines: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1.0.0/canvas_lines.min.js</span><br><span class="line">  # canvas_sphere: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1.0.0/canvas_sphere.min.js</span><br><span class="line">  three:</span><br><span class="line">  three_waves:</span><br><span class="line">  canvas_lines:</span><br><span class="line">  canvas_sphere:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.0</span><br><span class="line">  # https://github.com/zproo/canvas-ribbon</span><br><span class="line">  canvas_ribbon:</span><br><span class="line"></span><br><span class="line">  # Internal version: 3.3.0</span><br><span class="line">  # https://github.com/ethantw/Han</span><br><span class="line">  Han:</span><br><span class="line"></span><br><span class="line">  # Internal version: 3.3.0</span><br><span class="line">  # https://github.com/vinta/pangu.js</span><br><span class="line">  # Example: </span><br><span class="line">  # pangu: //cdn.jsdelivr.net/npm/pangu@3.3.0/dist/browser/pangu.min.js</span><br><span class="line">  # pangu: //cdnjs.cloudflare.com/ajax/libs/pangu/3.3.0/pangu.min.js</span><br><span class="line">  pangu:</span><br><span class="line"></span><br><span class="line">  # needMoreShare2</span><br><span class="line">  # https://github.com/revir/need-more-share2</span><br><span class="line">  # Example: </span><br><span class="line">  # needmoreshare2_js: //cdn.jsdelivr.net/gh/theme-next/theme-next-needmoreshare2@1.0.0/needsharebutton.min.js</span><br><span class="line">  # needmoreshare2_css: //cdn.jsdelivr.net/gh/theme-next/theme-next-needmoreshare2@1.0.0/needsharebutton.min.css</span><br><span class="line">  needmoreshare2_js:</span><br><span class="line">  needmoreshare2_css:</span><br><span class="line"></span><br><span class="line">  # bookmark</span><br><span class="line">  # Internal version: 1.0.0</span><br><span class="line">  # https://github.com/theme-next/theme-next-bookmark</span><br><span class="line">  # Example: </span><br><span class="line">  # bookmark: //cdn.jsdelivr.net/gh/theme-next/theme-next-bookmark@1.0.0/bookmark.min.js</span><br><span class="line">  bookmark:</span><br><span class="line"></span><br><span class="line">  # reading_progress</span><br><span class="line">  # Internal version: 1.0</span><br><span class="line">  # https://github.com/theme-next/theme-next-reading-progress</span><br><span class="line">  # Example: </span><br><span class="line">  # reading_progress: //cdn.jsdelivr.net/gh/theme-next/theme-next-reading-progress@1.1/reading_progress.min.js</span><br><span class="line">  reading_progress:</span><br><span class="line"></span><br><span class="line">  # valine comment</span><br><span class="line">  # Example: https://cdn.jsdelivr.net/npm/valine@1.1.8/dist/Valine.min.js</span><br><span class="line">  valine:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Assets</span><br><span class="line">css: css</span><br><span class="line">js: js</span><br><span class="line">images: images</span><br><span class="line"></span><br><span class="line">#插件配置</span><br><span class="line">plugins: hexo-generator-feed</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本站采用 &lt;a href=&quot;https://github.com/theme-next/hexo-theme-next&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;NexT6.Pisces&lt;/a&gt; 模板&lt;/p&gt;
    
    </summary>
    
      <category term="blog" scheme="https://blog.fanfq.com/categories/blog/"/>
    
    
      <category term="blog" scheme="https://blog.fanfq.com/tags/blog/"/>
    
      <category term="hexo" scheme="https://blog.fanfq.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Markdown常用标签</title>
    <link href="https://blog.fanfq.com/blog/Markdown%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE.html"/>
    <id>https://blog.fanfq.com/blog/Markdown常用标签.html</id>
    <published>2015-11-08T02:26:39.000Z</published>
    <updated>2018-11-20T14:13:19.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`文本`</span><br></pre></td></tr></table></figure><p><code>文本</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Lorem &#123;% label @ipsum %&#125; &#123;% label primary@dolor sit %&#125; amet, consectetur &#123;% label success@adipiscing elit, %&#125; sed &#123;% label info@do eiusmod %&#125; tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line"></span><br><span class="line">Ut enim *&#123;% label warning @ad %&#125;* minim veniam, quis **&#123;% label danger @nostrud %&#125;** exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</span><br><span class="line"></span><br><span class="line">Duis aute irure dolor in reprehenderit in voluptate ~~&#123;% label default @velit %&#125;~~ &lt;mark&gt;esse&lt;/mark&gt; cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure><p>Lorem <span class="label default">ipsum</span> <span class="label primary">dolor sit</span> amet, consectetur <span class="label success">adipiscing elit,</span> sed <span class="label info">do eiusmod</span> tempor incididunt ut labore et dolore magna aliqua.</p><p>Ut enim <em><span class="label warning">ad</span></em> minim veniam, quis <strong><span class="label danger">nostrud</span></strong> exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p><p>Duis aute irure dolor in reprehenderit in voluptate <del><span class="label default">velit</span></del> <mark>esse</mark> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">More info: [Writing](https://hexo.io/docs/writing.html)</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 一个普通标题 | 一个普通标题 | 一个普通标题 |</span><br><span class="line">| ------ | ------ | ------ |</span><br><span class="line">| 短文本 | 中等文本 | 稍微长一点的文本 |</span><br><span class="line">| 稍微长一点的文本 | 短文本 | 中等文本 |</span><br></pre></td></tr></table></figure><table><thead><tr><th>一个普通标题</th><th>一个普通标题</th><th>一个普通标题</th></tr></thead><tbody><tr><td>短文本</td><td>中等文本</td><td>稍微长一点的文本</td></tr><tr><td>稍微长一点的文本</td><td>短文本</td><td>中等文本</td></tr></tbody></table><h2 id="目录树"><a href="#目录树" class="headerlink" title="目录树"></a>目录树</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">``` java</span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% img /uploads/brand-new.png %&#125;</span><br></pre></td></tr></table></figure><img src="/uploads/brand-new.png"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% fi /uploads/stanlee.jpeg, R.I.P Stan Lee 1922-2018, R.I.P Stan Lee 1922-2018 %&#125;</span><br></pre></td></tr></table></figure><span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="/uploads/stanlee.jpeg" class="full-image" alt="R.I.P Stan Lee 1922-2018" title="R.I.P Stan Lee 1922-2018"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span><h2 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h2><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer" target="_blank" rel="noopener">hexo-tag-aplayer</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;autoplay&quot;: false,</span><br><span class="line">    &quot;mutex&quot;: true,</span><br><span class="line">    &quot;music&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;에필로그 (Epilogue)&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;이동준&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;https://molier-1256056152.cos.ap-guangzhou.myqcloud.com/%E1%84%8B%E1%85%A6%E1%84%91%E1%85%B5%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;https://y.gtimg.cn/music/photo_new/T002R300x300M000000RmZHf3qhLUL.jpg&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure>        <div id="aplayer-fyWTdfcT" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":0,"mutex":true,"music":[{"title":"에필로그 (Epilogue)","author":"이동준","url":"https://molier-1256056152.cos.ap-guangzhou.myqcloud.com/%E1%84%8B%E1%85%A6%E1%84%91%E1%85%B5%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3.mp3","pic":"https://y.gtimg.cn/music/photo_new/T002R300x300M000000RmZHf3qhLUL.jpg"}]};  options.element = document.getElementById("aplayer-fyWTdfcT");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p><a href="https://github.com/MoePlayer/hexo-tag-dplayer" target="_blank" rel="noopener">hexo-tag-dplayer</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-dplayer --save</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer &quot;url=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.mp4&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; %&#125;</span><br></pre></td></tr></table></figure><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","loop":true,"video":{"url":"https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><a href="https://theme-next.iissnan.com/tag-plugins.html#center-blockquote-usage" target="_blank" rel="noopener">next</a><br><a href="https://hexo.io/docs/tag-plugins.html" target="_blank" rel="noopener">hexo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="blog" scheme="https://blog.fanfq.com/categories/blog/"/>
    
    
      <category term="blog" scheme="https://blog.fanfq.com/tags/blog/"/>
    
      <category term="markdown" scheme="https://blog.fanfq.com/tags/markdown/"/>
    
  </entry>
  
</feed>
