<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[似乎应该调整一下工作流，让时间更有效率]]></title>
    <url>%2Fblog%2F%E4%BC%BC%E4%B9%8E%E5%BA%94%E8%AF%A5%E8%B0%83%E6%95%B4%E4%B8%80%E4%B8%8B%E5%B7%A5%E4%BD%9C%E6%B5%81%EF%BC%8C%E8%AE%A9%E6%97%B6%E9%97%B4%E6%9B%B4%E6%9C%89%E6%95%88%E7%8E%87.html</url>
    <content type="text"><![CDATA[原本我以为我可以在周末的时间写出稿件，但实践证明这个太难了，我计算了一下仅仅周六上午半天的时间我给小朋友擦屁股累积超过10次以上，更多是中途的捣乱，姐姐有点粘我总是习惯性的试图在我工作的过程中坐到我的腿上，和我一起看着电脑屏幕，我和妻子都一致的观念在我们的家庭教育中尽可能的让小朋友减少对显示器的依赖。所以此时我不得不放下手头上的工作去陪伴她们。 我们家是绝对杜绝小朋友玩手机，平板电脑的，即便是电视每周只可以限制性的看一个小时，而我现在逐步的下载一些优质的动画电影陪伴她们一起收看。妹妹更喜欢“天猫精灵”因为更方便通过语音交互的方式切换她想收听的内容，常常早晨起来她独自一人坐在客厅听着天猫精灵里播放出来的故事。而姐姐视乎缺乏耐心基本不会长时间做在那里收听节目，即便是看电视她也会因为其他的事情中断她的观看兴趣。 这两人的性格，差别太大了。 所以，我可能要尝试调整一下我的工作流，让时间更加的效率。周末的时间更多的是陪伴小朋友，见证他们成长更多的是陪伴。实际上养娃的过程中琐碎的事情特别多，每当看到她们睡着的样子就特别的温馨。]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[花了两天的时间终于把Podcast发布站搭建好了]]></title>
    <url>%2Fpodcast%2F%E8%8A%B1%E4%BA%86%E4%B8%A4%E5%A4%A9%E7%9A%84%E6%97%B6%E9%97%B4%E7%BB%88%E4%BA%8E%E6%8A%8APodcast%E5%8F%91%E5%B8%83%E7%AB%99%E6%90%AD%E5%BB%BA%E5%A5%BD%E4%BA%86.html</url>
    <content type="text"><![CDATA[这篇文章主要是要将的我工作流给记录下来，以免以后时间长了忘记了。 http://fm.fanfq.com 这个站实际上是我的podcast发布站，采用hexo+next主题+podcasts插件,放在github上托管，mp3等资源文件放在七牛CDN上托管。 实际上没有什么，主要是说下这个podcasts插件并不好用，我自己根据实际需求做了修改，以及增加了一个脚本获取mp3文件的数据。 podcasts插件主要是为了生成符合apple podcast rss feed 文件，貌似国外的主流的都是以rss订阅的方式发布的，这很好，不需要作者每个平台手动的发布，我这里的发布站也是为了解决这个问题。 有关podcasts插件修改内容看这个链接：(这要比较重要，一定要验证成功才有用)https://github.com/fanfq/hexo-generator-podcasts 还写了python脚本为了获取mp3的参数：https://github.com/fanfq/python-learning/blob/master/src/util/file/mp3_file_rename.py mp3_file_name.py这个脚本，目的是为了重命名文件。如下所示 12345678用于podcast音频文件整理源文件：003.mp3重命名后的文件：fm003_8776581_2192.mp3文件命名规范：fm|003|_length_durationprefix:文件前缀003：文件原名length：文件体积单位byteduration：文件播放时长单位s 然后就是写文章了，目前这个文章的结构是需要手动维护的，文章结构示例 1234567891011121314151617---title: &quot;#4.整装待发扬帆起航，拒绝消费主义&quot; #文章标题category: podcast #固定值media: https://dl.fanfq.com/fm.fanfq.com/fm004_11922309_496.mp3 #固定值，建议放CDN image: https://dl.fanfq.com/fm.fanfq.com/fred_1024x1024_fm.jpg #固定值，建议放CDN duration: 496 #mp3文件播放时长，这里单位是秒type: audio/mpeg #固定值length: 11922309 #mp3文件的字节数，右键文件查看所占磁盘空间layout: podcast #固定值date: 2020-11-03 21:21:57 #创建时间tags: [播客,消费主义] #文章标签urlname: vol4 #比如我这里最终文章的链接是 https://fm.fanfq.com/vol4.htmldescription: 轻奢，小资，精致，这些词是不是听起来有点耳熟?在我看来这些词都是消费主义的簇拥者自己创造出来的文化，通过这种方式给消费者洗脑最终促使消费者买单。 #这个描述，为了填充feed用而不是正文---文章正文... 编辑好后直接发布到github上就可以了，然后等苹果的服务器自动同步。 总结一下的，流程是1.编辑好的mp3文件发到mp3目录下2.执行mp3目录下的 mp3_file_name.py 脚本，自动重命名以及上传到CDN4.创建新的文档 hexo new post NAME5.编辑 NAME.md 文件信息6.hexo s 本地预览一下，看是否都正常，只要mp3能正常播放那问题不大7.hexo clean, hexo g,hexo deploy 全套。]]></content>
      <categories>
        <category>podcast</category>
      </categories>
      <tags>
        <tag>架构</tag>
        <tag>工作流</tag>
        <tag>podcast</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络游戏通讯(WebSocket/Socket)数据加密最佳实践]]></title>
    <url>%2F%E6%9E%B6%E6%9E%84%2Fwebsocket_network_encryption_security_protocol_the_best_practices.html</url>
    <content type="text"><![CDATA[写在前面的话:之前一篇文章《Creator WebSocket Protobuf整合之保姆级全攻略》大概的介绍了下有关protobuf的整合，首先我们认清一点protobuf仅仅是数据封装的模式，并没有加密功能，简单的来说将其理解成增强型json，以便于理解。 近期也看了一些服务器端的源码，总的来说protobuf算是比较主流的，老点的项目有用json的或者是body是json然后用LengthField加头的。不管如何我个人还是建议使用protobuf，其优势不再赘述了。 在阅读源码期间，偶然发现baidu的开源项目 [jprotobuf] (https://github.com/jhunters/jprotobuf) ，其主要的优势就是不需要再编写.proto的文件的直接在pojo类上加上注解即可，一定程度的简化了我们开发的流程提高的开发效率。但我个人观点还是需要.proto文件的，即便没有此文件也需要通过文档的形式列出所有通讯消息的结构体。随时时间的推移项目的迭代以及各种跨平台的客户端的开发，有一份清晰的文档往往事半功倍，这也算是我个人的偏执吧。 本文重点：websocket/socket网路通讯主流的加密方式，适用于各种应用包括游戏。数据的加密解密必然会带来额外的开销，至于是否采用加密取决于数据的敏感性，如果涉及用户隐私，如个人信息，交易记录等信息还是有必要的。 时序图 流程解释1.客户端创建连接（建立websocket/socket通讯），申请AES密钥。 1).当连接创建成功后客户端所发出去的第一个包是通过RSA公钥加密的，其目的就是为了和服务器端申请后续通讯所使用的AES密钥。 2.而服务器当收到客户端的请求AES密钥的请求包时 1).通过RSA私钥解密请求包，并验证消息 2).为本次连接临时生成一个AES密钥(缓存在服务器端)并返回给客户端。也就是说AES密钥每次都会变的，而不是一个固定的值。 3.客户端获取AES密钥并缓存，好了此时针对本次的连接,客户端/服务器端均有AES密钥， 那么后续的通讯数据均通过这个AES密钥进行加密解密。 *截止到这里整个通讯的加密解密过程就说完了，整理清楚了通讯流程下面的工作就会轻松许多。上面有一些关键词需要稍微了解一下，如不清楚请自行百度。以下规范一下加密算法的各项参数，具体的视项目情况而定。 规范约定1.RSA,密钥长度1024, 填充方式PKCS1,公钥加密，私钥解密，公钥可通过私钥生成 2.AES使用AES/ECB/PKCS7Padding RSA加密RSA加密规则:若密钥位数是key_size, 单次加密串的最大长度为 (key_size)/8 - 11, 目前位数1024, 则最大加密长度为117，为了方便这里我们选择一次加密长度为100 将明文数据分成一个或数个最长100字节的小段进行加密，拼接分段加密数据即为最终的Body加密数据 RSA解密RSA解密同样遵循分段规则，对于1024位密钥, 每小段待解密数据长度为128字节 将密文数据分成一个或数个128字节长的小段进行解密，拼接分段解密数据即为最终的Body解密数据 AES加密AES加密要求源数据长度必须是16的整数倍, 故需补‘0’对齐后再加密，记录modlen为源数据长度与16取模值 因加密前有可能对源数据作修改， 故需在加密后的数据尾再增加一个16字节的填充数据块，其最后一个字节赋modlen, 其余字节赋值‘0’， 将加密数据和额外的填充数据块拼接作为最终要发送协议的body数据 AES解密协议body数据, 先将最后一个字节取出，记录modlen， 然后将body截掉尾部16字节填充数据块后再解密（与加密填充额外数据块逻辑对应） modlen 为0时，上述解密后的数据即为协议返回的body数据, 否则需截掉尾部(16 - 录modlen)长度的用于填充对齐的数据 本文演示代码：https://github.com/fanfq/jprotobuf_sample]]></content>
      <categories>
        <category>架构</category>
      </categories>
      <tags>
        <tag>架构</tag>
        <tag>design</tag>
        <tag>netty</tag>
        <tag>protobuf</tag>
        <tag>creator</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Cocos Creator WebSocket Protobuf整合之保姆级全攻略]]></title>
    <url>%2F%E6%9E%B6%E6%9E%84%2Fnetty_protobuf_best_practices.html</url>
    <content type="text"><![CDATA[环境说明：Cocos Creator : 2.3.0 学习的速度赶不上它更新的速度protobuf3 https://developers.google.com/protocol-buffers/protobufjs @6.8.9 https://github.com/protobufjs/protobuf.js没错，这是目前最新版本。网上一大堆都是老的 v5 版本，对我来说太low。哈哈实际上我仅仅是为了用那该死的 pbts 啦！ 服务器端：websocket + protobuf3 这里就不具体展开说明了，因为此时我对服务器端没有什么兴趣。 why google protobuf?我来告诉你，为什么选择protobuf作为网络的封装协议而为什么不用json？ 1.首先我是google的粉丝2.序列化与反序列化效率高于json，相比而言降低了客户端服务器的资源3.传输体积小，对应的降低的数据流量4.数据类型跨平台，这点很重要。也许你不在乎，等你做多客户端的时候就知道了。5.一定程度脱敏，强调一下protobuf没有加密功能，仅仅是二进制难以阅读而已。本文不涉及加密的操作，先给留个坑如果读者有兴趣我会考虑做篇有关RSA,AES加密封装. protobuf 结构体定义1.通常项目早期的时候已经规定好了通讯协议，下面这个协议属于”万金油“适用于绝大多数项目，也是我之前做的项目中所采用的协议。 2.通常我还会做一份文档出来，以供其他参与开发的小伙伴使用，类似于这样的 参数 位数 字节数 说明 nHeaderFlag 8*4 2 包头起始标志，固定为“FC” nProtoID 8*4 4 协议ID nProtoFmtType 8*4 4 协议格式类型，0为Protobuf格式，1为Json格式，目前仅支持 0 nProtoVer 8*4 4 协议版本，用于迭代兼容, 目前填0 nSerialNo 8*8 8 包序列号，用于对应请求包和回包, 要求递增 nBodyLen 8*4 4 包体长度 arrBodySHA1 8*40 40 包体原始数据(解密后)的SHA1哈希值 arrReserved 8*20 20 保留20字节扩展 （具体描述封装协议各字段说明） 分类 协议ID Protobuf文件 C2S S2C 说明 1 1001 KeepAliveMsg ping - 心跳 1 1901 KeepAliveMsg - pong 心跳 （原生的.proto 文件说明，以便维护） 3.以KeepAliveMsg.proto为例说明 ProtoID.proto 一个公用的枚举类型以便管理协议编号12345678syntax ="proto3";//消息头enum MsgType&#123; DEF = 0; //keepalive PING = 1001; PONG = 1901;&#125; KeepAliveMsg.proto 心跳包协议体123456789101112131415161718192021222324syntax ="proto3";message C2S&#123; int64 timestamp = 1; //时间戳&#125;message S2C&#123; int64 timestamp = 1; //时间戳&#125;message C2SMsg //Request&#123; C2S c2s = 1;&#125;message S2CMsg //Response&#123; int32 code = 1; string msg = 2; S2C s2c = 3;&#125; creator 整合 protobufjs好了，截止到这里和我们cocos creator 不相关的东西准备结束了。下面我们来说说creator该做哪些骚操作呢。 上面说了google protobuf这里又来个protobuf.js又是什么鬼？ 这个鬼呢，管他什么鬼，我没耐心写了，先将就的写着吧。总之就是在creator中使用protobuf的一个插件针对js, ts 语言环境.1npm install protobufjs安装完成后在安装目录下找到 /Users/fred/node_modules/protobufjs/dist/protobuf.js 将其复制到creator的工程中，然后选择以控件的方式导入。 同时它主要的目的呢就是将.proto的文件转换成.js（pbjs）,以及将其生成出来的.js转换成.d.ts(pbts) 12pbjs -t static-module -w commonjs -o compiled.js ProtoID.proto KeepAliveMsg.protopbts -o compiled.d.ts compiled.js 此时我们就生成出了 compiled.d.ts compiled.js 这两个文件，也将其复制到creator工程中，其中修改下compiled.js如下12//var $protobuf = require("protobufjs/minimal");var $protobuf = protobuf; 好，截止到这里。基本上就完成了protobuf的支持的，剩下的工作就是开始怼代码了！ 写到这里，我有点不想写了，以后再更新吧！ //todo: creator 中如何通过protobuf.js 进行序列化与反序列化，以及自定义头的解析。 2020-03-18更新 1.开始各种封装以及代码的调用与实现，大概的介绍下代码清单12345678910-script (项目工程的脚本目录) |_ protobuf (存放protobuf相关目录) |_compiled.js (pbjs 编译出来的 .js 文件) |_compiled.d.ts (pbts 编译出来的 .d.ts 文件) |_protobuf.js (导入的插件) |_bean (存放封装类相关目录) |_FCDecoder.ts （arraybuf 消息头解码） |_FCEncoder.ts （arraybuf 消息头编码） |_FCHeader.ts （封装的消息头对象） |_FCMsg.ts （封装的消息对象） 工程示例源码以下是工程示例，代码我就不帖了，具体的看工程源码https://github.com/fanfq/springboot_netty_websocket_protobuffer 大概的总结一下作为初学creator的人来说，creator的生态并没有我想的那么好，总体而言还处于初级阶段，相当一部分大佬是从cocos2dx转过来的，相对而言他们的学习门槛更低更易于上手，就我个人而言特别针对ts语法可能有些地方用不太恰当，不过暂时没有关系，先这么滴。后续慢慢改善，加油！ 有关网络相关的今天是我学习的第三天，基本的网络通讯http,websocket都已经整明白了，而且在native上测试也是通过的。后期再稍微看下有关证书的配置，应该问题不大。 下面的计划我准备开始学习下UI相关的控件了，之前写了个demo大概的了解下layout，button，label，widget …等基本的控件使用。可能游戏开发中会用到很多的自定义的控件，暂时还没有接触到。 还有就是基本的物理引擎做个大概的了解，我估计用不到，如果是网游的话碰撞大概率我会写在服务器端。其他的相关的先做个了解的！ 我们又可以愉快的玩耍了！ 一天到晚的，别老想着白嫖！ 老铁要不要关注一下呢？ 写在最后，本人不提供疑难杂症的检查，岁数有点大了，人有点懒了！谢谢！！ peace&amp;love]]></content>
      <categories>
        <category>架构</category>
      </categories>
      <tags>
        <tag>架构</tag>
        <tag>design</tag>
        <tag>netty</tag>
        <tag>protobuf</tag>
        <tag>creator</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于mongodb信息流数据存储设计]]></title>
    <url>%2Fmongodb%2F%E5%9F%BA%E4%BA%8Emongodb%E4%BF%A1%E6%81%AF%E6%B5%81%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E8%AE%BE%E8%AE%A1.html</url>
    <content type="text"><![CDATA[简述以微信朋友圈为例，当打开朋友圈的时候默认刷新最新的数据，数据流以时间倒序排序。那么这样的数据表现形式我们称之为时间线。需要注意的是我们定义时间线的起始时间为账户的创建的时间，例如，A是B的粉丝，B账号创建时间为2018年10月1日，而A账户的创建时间为2018年11月1日则在A的时间线只可以看到2018年11月1日以后的数据。而B的时间线则是2018年10月1日开始往后的数据。也就是说我们以账号的创建时间为锚点。 场景用户A是B的粉丝，则A订阅了B，B发布朋友圈则推送给A。 如上图所示，我们整理了一下订阅者关系如下： 123456A (3) -&gt; E -&gt; F -&gt; C... 以空间换时间的存储方案写入效率低，数据允余占用存储空间，读取效率高。 首先基于时间线而言，每个用户都有属于自己的一块存储区域，关联数据在写数据时完成。如A发布朋友圈，会将此条记录分别写入 A,E,F,C 的时间线存储区域，每个用户只要获取属于自己的数据即可，相当程度的提高了读取效率。但是此方案将会出现大量的数据允余，这里也就是我们所说的以空间换时间的存储方案，如果此例中A有100万的粉丝，这消息副本需要100万份，即便其中大部分数据从未被读取但是这100万的存储空间是实实在在存在的，而且写数据时也会消耗一定的资源。所以这里也引用的消息序列的方案，将耗时的处理通过队列的方式处理。针对社交关系需要注意一下，E取消对A的关注，只需要将E时间线上的有关A的数据清空掉，同理如果E关注A则需要将A时间线的数据拷贝一份存入E的时间线上。]]></content>
      <categories>
        <category>架构</category>
      </categories>
      <tags>
        <tag>架构</tag>
        <tag>mongodb</tag>
        <tag>design</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于mongodb用户评论系统数据结构设计]]></title>
    <url>%2Fmongodb%2F%E5%9F%BA%E4%BA%8Emongodb%E7%94%A8%E6%88%B7%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1.html</url>
    <content type="text"><![CDATA[简述以微信朋友圈为例，但又与微信不同是微信是以强社交为主，只有好友之间才可以查阅对方的朋友圈内容，而我们当前的设计类似的微博以弱社交的表现形式，其显著特点就是即便互相没有关注也可以访问对方的朋友圈数据。所以设计之初首先要确认应用场景是强社交，还是弱社交关系。 场景基于timeline的用户留言与点赞 信息流注意事项，AREA1,AREA2分别是两块SCHEMA分别存储在mongodb中，本文的重点也是根据实际示例探讨这两块SCHEMA的存储结构。 1. 系统所有的时间均是timestamp long类型，时间间隔24小时之内均显示（xx小时之前），如1小时27分钟前则显示（1小时前）;间隔1小时内则显示（xx分钟前）;不足1分钟则显示（刚刚）。该时间算法由客户端自己完成，服务器端只提供创建时间，默认时区为UTC+8.2. 用户显示上报设备型号，则显示该记录。有可能用户上包的设备型号是（oneplus a6000）则显示为（一加 6，或者 oneplus 6）所以设备型号要后台维护。3.点赞，延迟3秒与服务器同步，可取消点赞。点赞成功图标高亮显示，不影响数据同步。无人点赞数字区域显示赞4.留言总数，无人留言显示回复5.默认值显示3-5条最新的留言记录。支持emoji字符存储。点击4，5则进入留言详细列表 留言列表注意事项，分页显示数据，处理好同步机制。A.同1B.同3C.这条记录用于张三回复了李四D.王五的这条留言被2人点赞其中含当前用户，则高亮显示点赞图标。但无人回复E.钱七回复了麻六，则麻六的回复标签上有回复记录的总数。F.回复主贴 键盘由点击具体事件后弹出，如先点击1,A,输入框提示回复主体。 评论1.直接评论主贴 回复A.回复他人留言 存储方案写入效率低，数据允余占用存储空间，读取效率高。 基于redis123456789101112131415161718192021222324252627282930313233343536373839404142434445464748new post:&#123;post category&#125;:&#123;author id&#125;:&#123;post id&#125;朋友圈:123:67890uid为123的用户发布朋友圈该条记录id为67890new reply:&#123;post category&#125;:&#123;author id&#125;:&#123;post id&#125;:reply:&#123;uid&#125;:&#123;reply post id&#125; 朋友圈:123:67890:reply:852:741052uid为852的用户回复‘uid为123的用户发布朋友圈id为67890&apos;。该条记录id为741052new reply @ user:&#123;post category&#125;:&#123;uid&#125;:&#123;postid&#125;:replyto:&#123;uid&#125;:to:&#123;uid&#125;:&#123;replyto post id&#125; 朋友圈:123:67890:replyto:852:to:963:7895412uid为852的用户回复uid为963的用户，在‘uid为123的用户发布朋友圈id为67890&apos;记录下。该条记录id为7895412new like base one post:like:&#123;post id&#125;:&#123;uid&#125;:&#123;like id&#125; 点赞like:67890:915:731564 uid为915的用户点赞了postid为67890的文章，该条记录id为731564 更多操作获取uid为123的所发朋友圈所有内容朋友圈:123:*获取朋友圈文章id为264832的所有点赞记录like:264832:*获取朋友圈文章id为264832的所有回复记录朋友圈:*:264832:reply* （含用户间的回复）朋友圈:*:264832:reply:* （不含用户间的回复）朋友圈:*:264832:replyto:* （仅含用户间的回复）获取UID为123朋友圈文章id为264832的所有回复记录朋友圈:123:264832:reply* （含用户间的回复）朋友圈:123:264832:reply:* （不含用户间的回复）朋友圈:123:264832:replyto:* （仅含用户间的回复）key-valueAREA 1article:&#123;uid&#125;:&#123;postid&#125; 发布动态AREA 2article:&#123;uid&#125;:&#123;postid&#125;:reply:&#123;uid&#125;:&#123;postid&#125; 回复主题帖article:&#123;uid&#125;:&#123;postid&#125;:replyto:&#123;uid&#125;:to:&#123;uid&#125;:&#123;postid&#125; 在这个主题帖下面回复某人基于postid点赞like:&#123;postid&#125;:&#123;uid&#125;:&#123;likeid&#125; 点赞 基于mongodb 示例详解服务器返回数据API的设计原则是尽可能的将能一次返回所需要的所有数据，从而减少与服务器间的交互。而我们在存储的时候也不太可能将动态数据直接存储持久化。一旦数据结构改变变动会比较大，从而适当的设计关联关系有助于简化业务逻辑充分的利用mongodb高性能特性。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100&#123; "category":"PICTURE", "content":"这是一个带9张图片的动态", "createtime":1543374370935, "id":90012, "likeCount":3, "commentCount":9, "device":"红米 6", "geo":null, "author":&#123; "headImg":"http://cdnhost/headimg/91d192886a5b9f3e14b6ffa1a674b55d.jpg", "nickName":"王五", "uid":10003 &#125;, "pictureUrls":[ "http://cdnhost/pic/e1ea32968eb094232f74b712017e5d11.jpg", "http://cdnhost/pic/e1ea32968eb094232f74b712017e5d12.jpg", "http://cdnhost/pic/e1ea32968eb094232f74b712017e5d13.jpg", "http://cdnhost/pic/e1ea32968eb094232f74b712017e5d14.jpg", "http://cdnhost/pic/e1ea32968eb094232f74b712017e5d15.png", "http://cdnhost/pic/e1ea32968eb094232f74b712017e5d16.png", "http://cdnhost/pic/e1ea32968eb094232f74b712017e5d17.png", "http://cdnhost/pic/e1ea32968eb094232f74b712017e5d18.png", "http://cdnhost/pic/e1ea32968eb094232f74b712017e5d19.png", "http://cdnhost/pic/e1ea32968eb094232f74b712017e5d10.png" ], "comments":[ &#123; "author":&#123; "headImg":"http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg", "nickName":"麻子", "uid":10004 &#125;, "commentCount":0, "content":"这是一个回复678ijnfdsf", "createtime":1543374600935, "id":500013, "likeCount":0, "postId":90012 &#125;, &#123; "author":&#123; "headImg":"http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg", "nickName":"麻子", "uid":10004 &#125;, "commentCount":0, "content":"这是一个回复678ijnfdsf", "createtime":1543374500935, "id":500012, "likeCount":0, "postId":90012 &#125;, &#123; "author":&#123; "headImg":"http://cdnhost/headimg/01f8cc1938c30b28b1e80d256faddd84.jpg", "nickName":"听他们说玩游戏名字起得不能太长", "uid":10005 &#125;, "commentCount":0, "content":"这是一个回复678ijnfdsf", "createtime":1543374700935, "id":500011, "likeCount":0, "postId":90012 &#125; ], "likes":[ &#123; "createTime":1543375480935, "id":882211, "postId":90012, "user":&#123; "headImg":"http://cdnhost/headimg/e1ea32968eb094232f74b712017e5d14.jpg", "nickName":"李四", "uid":10002 &#125; &#125;, &#123; "createTime":1543375590935, "id":882212, "postId":90012, "user":&#123; "headImg":"http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg", "nickName":"麻子", "uid":10004 &#125; &#125;, &#123; "createTime":1543375700935, "id":882214, "postId":90012, "user":&#123; "headImg":"http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg", "nickName":"麻子", "uid":10004 &#125; &#125; ]&#125; AREA1 模块1234567891011121314151617181920212223242526&quot;category&quot;:&quot;PICTURE&quot;, &quot;content&quot;:&quot;这是一个带9张图片的动态&quot;, &quot;createtime&quot;:1543374370935, &quot;id&quot;:90012, &quot;likeCount&quot;:3, &quot;commentCount&quot;:9, &quot;device&quot;:&quot;红米 6&quot;, &quot;geo&quot;:null, &quot;author&quot;:&#123; &quot;headImg&quot;:&quot;http://cdnhost/headimg/91d192886a5b9f3e14b6ffa1a674b55d.jpg&quot;, &quot;nickName&quot;:&quot;王五&quot;, &quot;uid&quot;:10003 &#125;, &quot;pictureUrls&quot;:[ &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d11.jpg&quot;, &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d12.jpg&quot;, &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d13.jpg&quot;, &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d14.jpg&quot;, &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d15.png&quot;, &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d16.png&quot;, &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d17.png&quot;, &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d18.png&quot;, &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d19.png&quot;, &quot;http://cdnhost/pic/e1ea32968eb094232f74b712017e5d10.png&quot; ], ... AREA2 comments 模块123456789101112131415161718192021222324252627282930313233343536373839404142&quot;comments&quot;:[ &#123; &quot;author&quot;:&#123; &quot;headImg&quot;:&quot;http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg&quot;, &quot;nickName&quot;:&quot;麻子&quot;, &quot;uid&quot;:10004 &#125;, &quot;commentCount&quot;:0, &quot;content&quot;:&quot;这是一个回复678ijnfdsf&quot;, &quot;createtime&quot;:1543374600935, &quot;id&quot;:500013, &quot;likeCount&quot;:0, &quot;postId&quot;:90012 &#125;, &#123; &quot;author&quot;:&#123; &quot;headImg&quot;:&quot;http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg&quot;, &quot;nickName&quot;:&quot;麻子&quot;, &quot;uid&quot;:10004 &#125;, &quot;commentCount&quot;:0, &quot;content&quot;:&quot;这是一个回复678ijnfdsf&quot;, &quot;createtime&quot;:1543374500935, &quot;id&quot;:500012, &quot;likeCount&quot;:0, &quot;postId&quot;:90012 &#125;, &#123; &quot;author&quot;:&#123; &quot;headImg&quot;:&quot;http://cdnhost/headimg/01f8cc1938c30b28b1e80d256faddd84.jpg&quot;, &quot;nickName&quot;:&quot;听他们说玩游戏名字起得不能太长&quot;, &quot;uid&quot;:10005 &#125;, &quot;commentCount&quot;:0, &quot;content&quot;:&quot;这是一个回复678ijnfdsf&quot;, &quot;createtime&quot;:1543374700935, &quot;id&quot;:500011, &quot;likeCount&quot;:0, &quot;postId&quot;:90012 &#125; ... ] AREA2 comments 模块存储优化123456&quot;comments_postid&quot;:[ 500013, 500012, 500011, ...] AREA2 likes 模块123456789101112131415161718192021222324252627282930313233&quot;likes&quot;:[ &#123; &quot;createTime&quot;:1543375480935, &quot;id&quot;:882211, &quot;postId&quot;:90012, &quot;user&quot;:&#123; &quot;headImg&quot;:&quot;http://cdnhost/headimg/e1ea32968eb094232f74b712017e5d14.jpg&quot;, &quot;nickName&quot;:&quot;李四&quot;, &quot;uid&quot;:10002 &#125; &#125;, &#123; &quot;createTime&quot;:1543375590935, &quot;id&quot;:882212, &quot;postId&quot;:90012, &quot;user&quot;:&#123; &quot;headImg&quot;:&quot;http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg&quot;, &quot;nickName&quot;:&quot;麻子&quot;, &quot;uid&quot;:10004 &#125; &#125;, &#123; &quot;createTime&quot;:1543375700935, &quot;id&quot;:882214, &quot;postId&quot;:90012, &quot;user&quot;:&#123; &quot;headImg&quot;:&quot;http://cdnhost/headimg/5fdd5874ff6d571e6d0abac9660ec81f.jpg&quot;, &quot;nickName&quot;:&quot;麻子&quot;, &quot;uid&quot;:10004 &#125; &#125; ...] AREA2 likes 模块存储优化123456&quot;likes_postid&quot;:[ 882211, 882212, 882214, ...] 最终的储存结构1234567891011121314151617181920212223&#123; &quot;category&quot;:&quot;PICTURE&quot;, &quot;content&quot;:&quot;这是一个带9张图片的动态&quot;, &quot;createtime&quot;:1543374370935, &quot;id&quot;:90012, &quot;likeCount&quot;:3, &quot;commentCount&quot;:9, &quot;device&quot;:&quot;红米 6&quot;, &quot;geo&quot;:null, &quot;author_uid&quot;:10003, &quot;comments_postid&quot;:[ 500013, 500012, 500011, ... ], &quot;likes_postid&quot;:[ 882211, 882212, 882214, ... ]&#125; update2018.11.29补充一下。likeCount commentCount 是实时计算的出来的，而不是持久化在mongodb中。]]></content>
      <categories>
        <category>架构</category>
      </categories>
      <tags>
        <tag>架构</tag>
        <tag>mongodb</tag>
        <tag>design</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[手机APP大数据归因精准匹配之研发摘要]]></title>
    <url>%2F%E7%AE%97%E6%B3%95%2F%E6%89%8B%E6%9C%BAAPP%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BD%92%E5%9B%A0%E7%B2%BE%E5%87%86%E5%8C%B9%E9%85%8D%E4%B9%8B%E7%A0%94%E5%8F%91%E6%91%98%E8%A6%81.html</url>
    <content type="text"><![CDATA[透过覆盖我的黑夜,我看见层层无底的黑暗。感谢上帝赐我,不可征服的灵魂。就算被地狱紧紧攫住,我不会畏缩，也不惊叫。经受过一浪 又一浪的打击，我满头鲜血不低头。在这满是愤怒和眼泪的世界之外,恐怖的阴影在游荡,还有，未来的威胁,可是我毫不畏惧。无论我将穿过的那扇门有多窄，无论我将肩承怎样的责罚。我是命运的主宰,我是灵魂的统帅。 19世纪英国诗人威廉亨利《不可征服》 2016年我从外企到一家创业公司接手的第一个工作任务，从此之后我就与他展开了不解之缘。我们为了提高1%的准确率要花费100%的努力，直到现在为止我们都在为了哪怕只能提高0.1%的准确率而不懈努力。 核心摘要direct download link12345678custom download link for apk filehttps://dlhost/&#123;apkname&#125;appstorehttps://itunes.apple.com/&#123;appid&#125;google playhttps://play.google.com/store/apps/details?id=&#123;packagename&#125; track link12345https://tlhost/&#123;schema&#125; | - storage to db &amp; redirect to |-&gt; https://dlhost/&#123;apkname&#125; |-&gt; https://itunes.apple.com/&#123;appid&#125; |-&gt; https://play.google.com/store/apps/details?id=&#123;packagename&#125; sdk track12POST DATA To Serverhttps://apihost?data=&#123;DATA&#125; server side12345678click event （data from track link, such as QR Code、SNS Media、Web Browser, etc.） -&gt; storage to db install &amp; launch event （data from sdk track，such as install and first launch or others） -&gt; storage to db matching accuracy (importance, the big data algorithm) -&gt; matching click / install data track link 跳转之前可以做很多事情，如获取浏览器信息，设置cookie，甚至持久化session sdk track 第一次安装启动时可以通过sdk传递数据到服务器，同track link的操作类似 matching 通过获取到数据进行匹配，难点就在此了，这也是整个项目的核心。 simple workflow 读到这里，如果你还没有看懂我在说什么，也想这篇文章不适合你继续读下去。虽然我写的也不是给谁看的，也不知道谁会关注此文。 商业服务这个服务已经有了成熟的三方供应商，如比较知名有 Adjust，Appsflyer，TalkingData，Google Firebase 等等。 他们的共同特点出了收费外，都号称100%的精准，实际上使用下来准确率达到70%+就算很不错了，实际上在复杂的网络环境能达到70%以上的准确率是相当难的。不过通过海量数据的日益积累，以及算法的跟新迭代准确率只会越来越高。 同时他们还对接各个主流流量平台，提高准确率的同时还方便了用户。我个人认为此服务未来将成为所有APP的缺省功能，只要你的APP需要用户，只要你要去做分发，此服务不可或缺的。 当然如果你有足够的研发能力，以及对数据的高度敏感也可以直接去开发此类系统。因为使用三方服务就得牺牲用户数据，也许不会泄露这些用户数据可以肯定他们会利用这些数据。像Facebook，微信这种体量的APP他们都有自己的跟踪系统。]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>大数据</tag>
        <tag>归因</tag>
        <tag>tracking</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SALT Encrypt Best Practices]]></title>
    <url>%2F%E7%AE%97%E6%B3%95%2FSALT_Encrypt_Best_Practices.html</url>
    <content type="text"><![CDATA[发现问题：这里展示一个简易的用户表： uid username password 1 zhangsan e10adc3949ba59abbe56e057f20f883e 2 lisi e10adc3949ba59abbe56e057f20f883e 3 wangwu 9bd5ee6fe55aaeb673025dbcb8f939c1 4 laoz f8a8d7997e870968f92748f3cc41cf90 我们发现 UID 1,2 对应的 password 是一样的，如果我是zhangsan，那岂不是同样我也知道lisi的密码明文是什么了？ 通过MD5密码破解网站，轻易的得到 e10adc3949ba59abbe56e057f20f883e 对应的明文是 123456 解决方案：我们知道，如果直接对密码进行散列，那么黑客可以对通过获得这个密码散列值，然后通过查散列值字典（例如MD5密码破解网站），得到某用户的密码。 加Salt可以一定程度上解决这一问题。所谓加Salt方法，就是加点“佐料”。其基本想法是这样的：当用户首次提供密码时（通常是注册时），由系统自动往这个密码里撒一些“佐料”，然后再散列。而当用户登录时，系统为用户提供的代码撒上同样的“佐料”，然后散列，再比较散列值，已确定密码是否正确。 这里的“佐料”被称作“Salt值”也称“盐值”，这个加“佐料”的行为叫做“加盐”，这个值是由系统随机生成的，并且只有系统知道。这样，即便两个用户使用了同一个密码，由于系统为它们生成的salt值不同，他们的散列值也是不同的。即便黑客可以通过自己的密码和自己生成的散列值来找具有特定密码的用户，但这个几率太小了（密码和salt值都得和黑客使用的一样才行）。 有时候，为了减轻开发压力，程序员会统一使用一个salt值（储存在某个地方），而不是每个用户都生成私有的salt值。但是这样的话还是解决不了上述我们发现同密文反推明文的问题。 算法实现123salt=random()//获取一个随机的字符串src=123456password=md5(salt+src) 下面详细介绍一下加Salt散列的过程。介绍之前先强调一点，前面说过，验证密码时要使用和最初散列密码时使用“相同的”佐料。所以Salt值是要存放在数据库里的。 用户注册时用户输入【账号】和【密码】（以及其他用户信息）；系统为用户生成【Salt值】；系统将【Salt值】和【用户密码】连接到一起；对连接后的值进行散列，得到【Hash值】；将【Hash值1】和【Salt值】分别放到数据库中。 用户登录时用户输入【账号】和【密码】；系统通过用户名找到与之对应的【Hash值】和【Salt值】；系统将【Salt值】和【用户输入的密码】连接到一起；对连接后的值进行散列，得到【Hash值2】（注意是即时运算出来的值）；比较【Hash值1】和【Hash值2】是否相等，相等则表示密码正确，否则表示密码错误。 增强版用户表设计 uid username password salt 1 zhangsan ad4b3e001f961ef2792ccaae9d05c873 eyJ1a 2 lisi f73f9c73c5e6e6059c9948a78ee81957 WQiOj 3 wangwu 9bd5ee6fe55aaeb673025dbcb8f939c1 EwMDE 4 laoz f8a8d7997e870968f92748f3cc41cf90 U0MDk 即便 zhangsan，lisi 的密码明文都是 123456，由于他们的salt不同则最终的password密文也不同，由于salt增加的密码的复杂度，被破解的难度也更大。]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>openapi</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Access Token vs Refresh Token]]></title>
    <url>%2F%E7%AE%97%E6%B3%95%2FAccessToken_RefreshToken.html</url>
    <content type="text"><![CDATA[设计需求 统计在线列表，可以随时的踢下线，让客户端缓存的token失效 30天内无需重新登录，默认可无限期延续 Token生成方案 JWT（JSON WEB TOKEN）的构成第一部分我们称它为头部（header),第二部分我们称其为载荷（payload, 类似于飞机上承载的物品)，第三部分是签名（signature确保数据的完整性).JWT token = header.payload.signature由于JWT是无状态的，也未能实现我们上述的需求，所以不得不放弃了JWT的方案，但是其有关token的加密算法还是值得参考的。 access_token生成方案12345678payload = urlencode(base64(&#123;uid,ts&#125;))salt=TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ //盐值signature = HMACSHA256(payload,salt);access_token = payload.signatureredis_key = access_token:uid:&#123;access_token&#125;//uid 是从token中payload解析出来的redis_value = userinforedis_ttl = 2hr refresh_token生成方案12345678payload = urlencode(base64(&#123;uid,ts&#125;))salt=TJVA95Or11.0cBab30RMHrHDcEfxjoYZgeFONFh7HgQ //盐值signature = HMACSHA256(payload,salt);refresh_token = payload.signature;redis_key = refresh_token:uid:&#123;refresh_token&#125;//uid 是从token中payload解析出来的redis_value = access_tokenredis_ttl = 30days 算法实现：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960import org.apache.commons.codec.binary.Base64;import com.fanfq.util.commons.encrypt.HMACSHA256;System.out.println("\n#####token生成算法"); Long uid = 10010l;Map&lt;String,Object&gt; map = new HashMap&lt;String,Object&gt;(); map.put("uid", uid); map.put("ts", System.currentTimeMillis()); String str = JSONObject.toJSONString(map); String base64 = Base64.encodeBase64String(str.getBytes()); String payload = null; try &#123; payload = URLEncoder.encode(base64,"UTF-8");&#125; catch (UnsupportedEncodingException e) &#123; // TODO Auto-generated catch block e.printStackTrace();&#125;String salt = "TJVA95Or11.0cBab30RMHrHDcEfxjoYZgeFONFh7HgQ";String signature = HMACSHA256.encode(payload,salt);String token = payload+"."+signature;System.out.println("payload:"+payload);System.out.println("signature:"+signature);System.out.println("token:"+token);System.out.println("redis key: token:"+uid+":"+token);System.out.println("\n#####token校验算法");System.out.println("1.签名校验");System.out.println("token:"+token);String payload_ = token.split("\\.")[0];String signature_ = token.split("\\.")[1];System.out.println("payload密文:"+payload_);System.out.println("signature签名:"+signature_);boolean check = HMACSHA256.encode(payload_,salt).equals(signature_);System.out.println("签名校验："+check);System.out.println("\n2.时间戳校验");String urldecode = null;try &#123; urldecode = URLDecoder.decode(payload_, "UTF-8");&#125; catch (UnsupportedEncodingException e) &#123; // TODO Auto-generated catch block e.printStackTrace();&#125;String jsondecode = new String(Base64.decodeBase64(urldecode));System.out.println("payload解密："+jsondecode);JSONObject jsobj = JSONObject.parseObject(jsondecode);Long ts = jsobj.getLong("ts");System.out.println(System.currentTimeMillis() - ts +" ms");if(System.currentTimeMillis() - ts &gt; 1000*60*60*2) &#123; System.out.println("超过2小时");&#125;else &#123; System.out.println("有效期内，开始进行redis查询");&#125; token生成算法12345明文：&#123;&quot;uid&quot;:10010,&quot;ts&quot;:1540912751948&#125;payload:eyJ1aWQiOjEwMDEwLCJ0cyI6MTU0MDkxMjc1MTk0OH0%3Dsignature:0ba40cff2bda8fab9ae61893b43c198e3022a1e8f058ac8054417241d3129d1ftoken:eyJ1aWQiOjEwMDEwLCJ0cyI6MTU0MDkxMjc1MTk0OH0%3D.0ba40cff2bda8fab9ae61893b43c198e3022a1e8f058ac8054417241d3129d1fredis key: token:10010:eyJ1aWQiOjEwMDEwLCJ0cyI6MTU0MDkxMjc1MTk0OH0%3D.0ba40cff2bda8fab9ae61893b43c198e3022a1e8f058ac8054417241d3129d1f token校验算法 签名校验 1234token:eyJ1aWQiOjEwMDEwLCJ0cyI6MTU0MDkxMjc1MTk0OH0%3D.0ba40cff2bda8fab9ae61893b43c198e3022a1e8f058ac8054417241d3129d1fpayload密文:eyJ1aWQiOjEwMDEwLCJ0cyI6MTU0MDkxMjc1MTk0OH0%3Dsignature签名:0ba40cff2bda8fab9ae61893b43c198e3022a1e8f058ac8054417241d3129d1f签名校验：true 时间戳校验 123payload解密：&#123;&quot;uid&quot;:10010,&quot;ts&quot;:1540912751948&#125;690 ms有效期内，开始进行redis查询 注意：这个也是我经过思考后最终确认下来的token生成算法，也许你也发现既然redis持久化了就直接查库即可，无需搞的这么复杂的算法。实际上我是这样考虑的，因为大量的api请求都会带token参数导致每次请求都会查询库，固然redis的强大的性能足以支持，但还是为了效率过滤一些没有必要的io资源。 得到请求的时候首先验证signature是否匹配，防止篡改 再从payload中获取ts以判断时间戳是否失效，access_token 2hr, refresh_token 30days. 前两者校验完成，则请求一次redis io做最终的判断。当然排除临时被提下线的情况下，大部分情况下这里都是通过的。 redis key 的设计，其中的uid设计主要是为了后期统计使用，如： 123456789101112keys （refresh_token:uid:*）获取当前终端连接数，Set&lt;String&gt; setz = jedis.keys(&quot;access_token:*&quot;);System.out.println(&quot;access_token:* key 的数目:&quot;+setz.size());获取当前在线用户数（根据uid排重） Set&lt;String&gt; setzz = new HashSet&lt;String&gt;();for(String str:setz) &#123; setzz.add(str.split(&quot;:&quot;)[1]);&#125;System.out.println(&quot;key uid 去重：&quot;+setzz.size()); redis ttl 就不用不多说了，access_token 2hr, refresh_token 30days. redis value：whatever anythings Redis 有状态缓存access_token key ttl value access_token:10024:ak_1 2hr username:zhangsan,uid:10024 access_token:10025:ak_2 2hr username:lisi,uid:10025 refresh_token key ttl value refresh_token:10024:rk_1 30days access_token:10024:ak_1 refresh_token:10025:rk_2 30days access_token:10025:ak_2 拓扑结构 用户授权获取token请求方法：https://apihost/oauth2/access_token?username=zhangsan&amp;password=123456 正确的返回：12345678910&#123; "code":200, "msg":"ok", "data":&#123; "access_token":"ak_1", "uid":10024, "refresh_token":"rk_1", "expires_in":7200 &#125;&#125; 参数 说明 access_token 接口调用凭证 refresh_token 用户刷新access_token uid 授权用户唯一标识 expires_in access_token接口调用凭证超时时间，单位（秒） 错误返回样例：{&quot;code&quot;:400,&quot;msg&quot;:&quot;bad request&quot;} 刷新access_token有效期access_token是调用授权关系接口的调用凭证，由于access_token有效期（目前为2个小时）较短，当access_token超时后，可以使用refresh_token进行刷新，用refresh_token仅能使用一次，使用一次后，将被废弃。也就是说refresh_token 更新 access_token 的时候 refresh_token 也会跟着被更新 通过用refresh_token机制可以确保活跃用户长期不用登录授权。 refresh_token拥有较长的有效期（30天），当refresh_token失效的后，需要用户重新授权。也就说第一次登录与第二次登录时长间隔30天以上则需要用户重新授权登录。 请求方法：https://apihost/oauth2/refresh_token?uid=UID&amp;refresh_token=REFRESH_TOKEN 正确的返回：12345678910&#123; "code":200, "msg":"ok", "data":&#123; "access_token":"ak_1", "uid":10024, "refresh_token":"rk_1", "expires_in":7200 &#125;&#125; 参数 说明 access_token 接口调用凭证 refresh_token 用户刷新access_token uid 授权用户唯一标识 expires_in access_token接口调用凭证超时时间，单位（秒） 错误返回样例：{&quot;code&quot;:400,&quot;msg&quot;:&quot;invalid refresh_token&quot;} 通过access_token调用接口获取access_token后，进行接口调用，有以下前提：access_token有效且未超时；如果access_token失效，则通过refresh_token重新同步。若refresh_token也失效了则需要用户重新授权登录。 Eg.通过UID获取用户基本信息请求方法https://apihost/user?access_token=ak_1&amp;uid=10024 正确的返回123456789&#123; "code":200, "msg":"ok", "data":&#123; "username":"zhangsan", "age":28, "address":"xx路xx号" &#125;&#125; 错误返回样例：{&quot;code&quot;:400,&quot;msg&quot;:&quot;invalid access_token&quot;} 注意事项RISK CONTROL access_token 为用户授权客户端发起接口调用的凭证（相当于用户登录态），存储在客户端，可能出现恶意获取access_token 后导致的用户数据泄漏、用户微信相关接口功能被恶意发起等行为； refresh_token 为用户授权客户端应用的长效凭证，仅用于刷新access_token，但泄漏后相当于access_token 泄漏，风险同上。 单点/多点登录。介于我们当前的设计不考虑单点登录的问题，也就是说同一个账号在不同的客户端都可以同时登录，并且生成不同的token以供使用每个客户端程序维护自己的一套token即可。倘若要实现单点登录则在用户授权的时候做排重判断，如果已在其他重点登录则清空该重点的token，并且为当前链接生成新token对即可。具体情况shi 用户信息跟新，针对我们当前的授权方式一旦用户修改的密码，则要清空该用户所有终端的token，让其重新授权。这也是为什么要设计这套有状态的token机制主要原因]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>openapi</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RESTful API Best Practices]]></title>
    <url>%2Fapi%2FRESTful_API_Best_Practices.html</url>
    <content type="text"><![CDATA[URL 设计动词 + 宾语RESTful 的核心思想就是，客户端发出的数据操作指令都是”动词 + 宾语”的结构。比如，GET /articles这个命令，GET是动词，/articles是宾语。 动词通常就是五种 HTTP 方法，对应 CRUD 操作。 GET：读取（Read）POST：新建（Create）PUT：更新（Update）PATCH：更新（Update），通常是部分更新DELETE：删除（Delete）根据 HTTP 规范，动词一律大写。 动词的覆盖有些客户端只能使用GET和POST这两种方法。服务器必须接受POST模拟其他三个方法（PUT、PATCH、DELETE）。 这时，客户端发出的 HTTP 请求，要加上X-HTTP-Method-Override属性，告诉服务器应该使用哪一个动词，覆盖POST方法。 12POST /api/Person/4 HTTP/1.1 X-HTTP-Method-Override: PUT 上面代码中，X-HTTP-Method-Override指定本次请求的方法是PUT，而不是POST。 宾语必须是名词宾语就是 API 的 URL，是 HTTP 动词作用的对象。它应该是名词，不能是动词。比如，/articles这个 URL 就是正确的，而下面的 URL 不是名词，所以都是错误的。123/getAllCars/createNewCar/deleteAllRedCars 复数 URL既然 URL 是名词，那么应该使用复数，还是单数？ 这没有统一的规定，但是常见的操作是读取一个集合，比如GET /articles（读取所有文章），这里明显应该是复数。 为了统一起见，建议都使用复数 URL，比如GET /articles/2要好于GET /article/2。 避免多级 URL常见的情况是，资源需要多级分类，因此很容易写出多级的 URL，比如获取某个作者的某一类文章。 1GET /authors/12/categories/2 这种 URL 不利于扩展，语义也不明确，往往要想一会，才能明白含义。 更好的做法是，除了第一级，其他级别都用查询字符串表达。 1GET /authors/12?categories=2 下面是另一个例子，查询已发布的文章。你可能会设计成下面的 URL。 1GET /articles/published 查询字符串的写法明显更好。 1GET /articles?published=true 状态码状态码必须精确客户端的每一次请求，服务器都必须给出回应。回应包括 HTTP 状态码和数据两部分。 HTTP 状态码就是一个三位数，分成五个类别。 1xx：相关信息2xx：操作成功3xx：重定向4xx：客户端错误5xx：服务器错误这五大类总共包含100多种状态码，覆盖了绝大部分可能遇到的情况。每一种状态码都有标准的（或者约定的）解释，客户端只需查看状态码，就可以判断出发生了什么情况，所以服务器应该返回尽可能精确的状态码。 API 不需要1xx状态码，下面介绍其他四类状态码的精确含义。 2xx 状态码200状态码表示操作成功，但是不同的方法可以返回更精确的状态码。 GET: 200 OKPOST: 201 CreatedPUT: 200 OKPATCH: 200 OKDELETE: 204 No Content上面代码中，POST返回201状态码，表示生成了新的资源；DELETE返回204状态码，表示资源已经不存在。 此外，202 Accepted状态码表示服务器已经收到请求，但还未进行处理，会在未来再处理，通常用于异步操作。下面是一个例子。 12345678HTTP/1.1 202 Accepted&#123; &quot;task&quot;: &#123; &quot;href&quot;: &quot;/api/company/job-management/jobs/2130040&quot;, &quot;id&quot;: &quot;2130040&quot; &#125;&#125; 3xx 状态码API 用不到301状态码（永久重定向）和302状态码（暂时重定向，307也是这个含义），因为它们可以由应用级别返回，浏览器会直接跳转，API 级别可以不考虑这两种情况。 API 用到的3xx状态码，主要是303 See Other，表示参考另一个 URL。它与302和307的含义一样，也是”暂时重定向”，区别在于302和307用于GET请求，而303用于POST、PUT和DELETE请求。收到303以后，浏览器不会自动跳转，而会让用户自己决定下一步怎么办。下面是一个例子。 12HTTP/1.1 303 See OtherLocation: /api/orders/12345 4xx 状态码4xx状态码表示客户端错误，主要有下面几种。 400 Bad Request：服务器不理解客户端的请求，未做任何处理。 401 Unauthorized：用户未提供身份验证凭据，或者没有通过身份验证。 403 Forbidden：用户通过了身份验证，但是不具有访问资源所需的权限。 404 Not Found：所请求的资源不存在，或不可用。 405 Method Not Allowed：用户已经通过身份验证，但是所用的 HTTP 方法不在他的权限之内。 410 Gone：所请求的资源已从这个地址转移，不再可用。 415 Unsupported Media Type：客户端要求的返回格式不支持。比如，API 只能返回 JSON 格式，但是客户端要求返回 XML 格式。 422 Unprocessable Entity ：客户端上传的附件无法处理，导致请求失败。 429 Too Many Requests：客户端的请求次数超过限额。 5xx 状态码5xx状态码表示服务端错误。一般来说，API 不会向用户透露服务器的详细信息，所以只要两个状态码就够了。 500 Internal Server Error：客户端请求有效，服务器处理时发生了意外。 503 Service Unavailable：服务器无法处理请求，一般用于网站维护状态。 服务器回应不要返回纯本文API 返回的数据格式，不应该是纯文本，而应该是一个 JSON 对象，因为这样才能返回标准的结构化数据。所以，服务器回应的 HTTP 头的Content-Type属性要设为application/json。 客户端请求时，也要明确告诉服务器，可以接受 JSON 格式，即请求的 HTTP 头的ACCEPT属性也要设成application/json。下面是一个例子。 12GET /orders/2 HTTP/1.1 Accept: application/json 发生错误时，不要返回 200 状态码有一种不恰当的做法是，即使发生错误，也返回200状态码，把错误信息放在数据体里面，就像下面这样。123456789HTTP/1.1 200 OKContent-Type: application/json&#123; &quot;status&quot;: &quot;failure&quot;, &quot;data&quot;: &#123; &quot;error&quot;: &quot;Expected at least two items in list.&quot; &#125;&#125; 上面代码中，解析数据体以后，才能得知操作失败。 这张做法实际上取消了状态码，这是完全不可取的。正确的做法是，状态码反映发生的错误，具体的错误信息放在数据体里面返回。下面是一个例子。123456789HTTP/1.1 400 Bad RequestContent-Type: application/json&#123; &quot;error&quot;: &quot;Invalid payoad.&quot;, &quot;detail&quot;: &#123; &quot;surname&quot;: &quot;This field is required.&quot; &#125;&#125; 而我的做法是事先定义好返回数据的规范如下： 参数 定义 描述 code 状态码 定义200为成功，其他均为失败。其具体缘由体现在msg内容 msg 返回信息 用户自定义的消息简述 data 返回对象 该字段承载着各种的数据，最终前端显示的数据都是从这个参数中获取 123456789101112131415161718HTTP/1.1 200 OKContent-Type: application/json&#123;“code”:200,“msg”:”correct request”,“data”,null&#125;HTTP/1.1 500 OKContent-Type: application/json&#123;“code”:500,“msg”:”incorrect request”,“data”,null&#125; 提供链接API 的使用者未必知道，URL 是怎么设计的。一个解决方法就是，在回应中，给出相关链接，便于下一步操作。这样的话，用户只要记住一个 URL，就可以发现其他的 URL。这种方法叫做 HATEOAS。 举例来说，GitHub 的 API 都在 api.github.com 这个域名。访问它，就可以得到其他 URL。123456789&#123; ... &quot;feeds_url&quot;: &quot;https://api.github.com/feeds&quot;, &quot;followers_url&quot;: &quot;https://api.github.com/user/followers&quot;, &quot;following_url&quot;: &quot;https://api.github.com/user/following&#123;/target&#125;&quot;, &quot;gists_url&quot;: &quot;https://api.github.com/gists&#123;/gist_id&#125;&quot;, &quot;hub_url&quot;: &quot;https://api.github.com/hub&quot;, ...&#125; 上面的回应中，挑一个 URL 访问，又可以得到别的 URL。对于用户来说，不需要记住 URL 设计，只要从 api.github.com 一步步查找就可以了。 HATEOAS 的格式没有统一规定，上面例子中，GitHub 将它们与其他属性放在一起。更好的做法应该是，将相关链接与其他属性分开。 12345678910HTTP/1.1 200 OKContent-Type: application/json&#123; &quot;status&quot;: &quot;In progress&quot;, &quot;links&quot;: &#123;[ &#123; &quot;rel&quot;:&quot;cancel&quot;, &quot;method&quot;: &quot;delete&quot;, &quot;href&quot;:&quot;/api/status/12345&quot; &#125; , &#123; &quot;rel&quot;:&quot;edit&quot;, &quot;method&quot;: &quot;put&quot;, &quot;href&quot;:&quot;/api/status/12345&quot; &#125; ]&#125;&#125; 参考链接RESTful API Design: 13 Best Practices to Make Your Users Happy, by Florimond MancaAPI design, by MicroSoft Azurehttp://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html]]></content>
      <categories>
        <category>api</category>
      </categories>
      <tags>
        <tag>design</tag>
        <tag>api</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Internal APIs encrypt Method V1.0]]></title>
    <url>%2FInternalAPIs_encrypt_Method_V1.0.html</url>
    <content type="text"><![CDATA[简单对称密码加密解密2018/10/19 我们发现大量的非法不带参数的Http请求访问我们的 apihost, 请求日志文件如下所示。 12345183.223.44.221 - - [19/Oct/2018:16:47:32 +0800] &quot;POST /api_interface? HTTP/1.1&quot; 200 174 &quot;-&quot; &quot;okhttp/3.10.0&quot;请求者IP：183.223.44.221 请求接口：api_interface请求方式：POST请求者UA：okhttp/3.10.0 问题引申：既然是非法请求，为什么黑客没有带参数的请求？实际上这是一个很好的问题，如果接口没有做任何安全处理的话，黑客通过抓包很容易拿到请求参数规则，然后通过模拟请求达到目的。一旦接口做过”特殊工艺”处理了，黑客即将无处是从了。最终他们的心态都是从破解到放弃这样一个过程。 正确的请求姿势：实际上我们的设计接口的时候会有一个统一的接收参数 params 用来接收我们的数据，正确的请求如下： 12345183.223.44.221 - - [19/Oct/2018:16:47:32 +0800] &quot;POST /api_interface?params=sM4AOVdWfPE4DxkXGEs8VFmEsZRgy58UYDPD7PjVYQXx1GEFrbjXMo11fb9x6ppwuaAeXV3n2DtoW4lG22nM0g HTTP/1.1&quot; 200 174 &quot;-&quot; &quot;okhttp/3.10.0&quot;请求者IP：183.223.44.221 请求接口：api_interface?params=sM4AOVdWfPE4DxkXGEs8VFmEsZRgy58UYDPD7PjVYQXx1GEFrbjXMo11fb9x6ppwuaAeXV3n2DtoW4lG22nM0g请求方式：POST请求者UA：okhttp/3.10.0 拓扑结构：什么请求者IP,请求方式，UA都不是重点。重点在于我们的接口都会有一个params的参数，而这个参数的本身是通过加密算法形成的，即使黑客捕获到这串没有意义的密文也头疼。因为我们和客户端程序有规定所有请求的参数必须要用公钥加密后再通过特点的算法传递，同时服务器端返回的数据也是通过这套算法加密后传输。拓扑结构如下图。 为什么要数据加密？安全，安全，安全。 解决方案：现在通过一个示例完整的描述一下我们的接口设计中加密解密过程。 公钥上文中说道，我们同时约定了一套公钥给服务器端与客户端，为了配合下面的算法使用所以我们采用Int 类型的数字。现在定义为 KEY = 110; 为了确保安全性这个KEY只有内部知道。 算法 XOR （with KEY） BASE64 (encode/decode) URLEncode/URLDecode Eg.客户端 zhangsan 执行登录请求将要发送的数据:{username:zhangsan,password:123456,action:login} 123456789Map&lt;String,String&gt; reqMap = new HashMap&lt;String,String&gt;();int key = 110;//客户端与服务器端共同约定的公钥@Beforepublic void be() &#123; reqMap.put("username", "zhangsan"); reqMap.put("password", "123456"); reqMap.put("action", "login");&#125; 加密算法 （java实现）12345678910111213//1.xorbyte[] byteArry = reqMap.toString().getBytes();for (int i = 0; i &lt; byteArry.length; i++) &#123; byteArry[i] = (byte) (byteArry[i] ^ key);&#125;//2.base64.ecodeString encode = new BASE64Encoder().encode(byteArry);//3.url.encodeString dist = URLEncoder.encode(encode, "UTF-8");System.out.println("params="+dist); 输出的params为:params=FR4PHR0ZARwKU19cXVpbWEJODw0aBwEAUwIBCQcAQk4bHQscAA8DC1MUBg8ACR0PABM%3D 解密算法 （java实现）1234567891011121314String params = "FR4PHR0ZARwKU19cXVpbWEJODw0aBwEAUwIBCQcAQk4bHQscAA8DC1MUBg8ACR0PABM%3D";//1.url.decodeString decode = URLDecoder.decode(params, "UTF-8");//2.base64.decodebyte[] byteArry = new BASE64Decoder().decodeBuffer(decode);//3.xorfor (int i = 0; i &lt; byteArry.length; i++) &#123; byteArry[i] = (byte) (byteArry[i] ^ key);&#125;System.out.println("dist:"+new String(byteArry)); 输出的dist为：dist={username:zhangsan,password:123456,action:login} 对称加密优缺点对称加密算法的优点是算法公开、计算量小、加密速度快、加密效率高。适用于简单的报文加密，同时也使用用大报文加密。对称加密算法的缺点是在数据传送前，发送方和接收方必须商定好秘钥，然后使双方都能保存好秘钥。其次如果一方的秘钥被泄露，那么加密信息也就不安全了。 常用的对称密钥算法加密和解密都使用同一把秘钥，这种加密方法称为对称加密，也称为单密钥加密。简单理解为：加密解密都是同一把钥匙。AES、DES、3DES、TDEA、Blowfish、RC2、RC4、RC5、IDEA、SKIPJACK 等。]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>openapi</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Open APIs encrypt Method V1.1]]></title>
    <url>%2F%E7%AE%97%E6%B3%95%2FOpenAPIs_encrypt_Method_V1.1.html</url>
    <content type="text"><![CDATA[非对称密码加密解密&amp;签名机制&amp;重放攻击《Internal APIs encrypt Method V1.0》 文章中已经描述了我们正在线上产品所用的加密算法，实际上他不仅仅是解决防参数篡改的问题，同时也解决了数据隐私保护的问题。即便如此这套算法还是有漏洞的，也是做所以定义为 Internal APIs的主要原因了，由于只提供给内部使用所以安全性暂且得到保障，一旦提供给外部使用则全盘”露馅”了,这也是我为什么要编辑此篇《Open APIs encrypt Method V1.1》文章了。 其中最为致命的问题是要在客户端代码中公开自己的密钥以及算法，一旦黑客从客户端程序中反编译源码，这样就会导致整个加密体系的崩盘，而且连补救的措施都没有。 同时第二个比较严重的问题就是黑客从放攻击的问题，黑客在抓取到包体后，直接再次提交请求导致服务器端不断受到重复请求。 所以基于以上两点，我们了解到《Internal APIs encrypt Method V1.0》所存在的问题如下表所示 问题描述 安全性 解决方案 脱敏（数据隐私保护） 安全 完整性 （防参数篡改） 安全 重放攻击 （重复提交） 未解决 timestamp + nonce 对称密钥 不够安全 非对称密钥 签名机制：所以本文重点就是要解决 重放攻击 (重复提交) &amp; 密钥安全 这两个问题。在此之前再介绍一种常用的解决数据传输过程中确保完整性 （防参数篡改）的解决方案，过程如下： 客户端使用约定好的秘钥对传输参数进行加密，得到签名值signature，并且将签名值也放入请求参数中，发送请求给服务端 服务端接收客户端的请求，然后使用约定好的秘钥对请求的参数（除了signature以外）再次进行签名，得到签名值autograph。 服务端对比signature和autograph的值，如果对比一致，认定为合法请求。如果对比不一致，说明参数被篡改，认定为非法请求。 Eg.客户端 zhangsan 执行登录请求将要发送的数据：apihost?action=login&amp;username=zhangsan&amp;password=123456&amp;sign= 签名算法：(java 实现)12345678910111213141516171819//1.对除sign外的所有参数按字典排序 对所有待签名参数按照字段名的 ASCII码从小到大排序（字典序）后 String[] arr = new String[] &#123; "username=zhangsan","password=123456", "action=login"&#125;;Arrays.sort(arr); //2.将排序后的结果拼接成一个字符串（即key1=value1&amp;key2=value2…）String content = arr[0].concat("&amp;"+arr[1]).concat("&amp;"+arr[2]);//3、将字符串进行sha1加密得到sign值MessageDigest md = null;String sign = null; try &#123; md = MessageDigest.getInstance("SHA-1"); byte[] digest = md.digest(content.toString().getBytes()); sign = StrUtil.byteToStr(digest);&#125; catch (NoSuchAlgorithmException e) &#123; e.printStackTrace();&#125;System.out.println("sign="+sign); 输出的sign为:sign=ebb36366bd9d8656e2327ca913a4f854f35a0e95 最终请求服务器的数据为：apihost?action=login&amp;username=zhangsan&amp;password=123456&amp;sign=ebb36366bd9d8656e2327ca913a4f854f35a0e95 当服务器拿到数据后再进行同样的算法然后再匹配sign值是否一致，如果对比一致，认定为合法请求。如果对比不一致，说明参数被篡改，认定为非法请求。 注意事项： 参数排序很重要，不同的排序会导致签名值不一致。所以要事先规定好排序算法。 sign算法也要事先规定好，示例中是一个简单的算法并没有使用到密钥。实际过程中可能更加复杂签名的秘钥我们可以使用很多方案，可以采用对称加密或者非对称加密。 因为黑客不知道签名的秘钥，也不知道签名的算法，所以即使截取到请求数据，对请求参数进行篡改，但是却无法对参数进行签名，无法得到修改后参数的签名值signature。 示例中并没有解决数据脱敏的问题，应用过程中可以根据实际情况再进行脱敏算法。 防止重放攻击基于timestamp的方案每次HTTP请求，都需要加上timestamp参数，然后把timestamp和其他参数一起进行数字签名。因为一次正常的HTTP请求，从发出到达服务器一般都不会超过60s，所以服务器收到HTTP请求之后，首先判断时间戳参数与当前时间相比较，是否超过了60s，如果超过了则认为是非法的请求。 一般情况下，黑客从抓包重放请求耗时远远超过了60s，所以此时请求中的timestamp参数已经失效了。 如果黑客修改timestamp参数为当前的时间戳，则signature参数对应的数字签名就会失效，因为黑客不知道签名秘钥，没有办法生成新的数字签名。 但这种方式的漏洞也是显而易见的，如果在60s之后进行重放攻击，那就没办法了，所以这种方式不能保证请求仅一次有效。 基于nonce的方案nonce的意思是仅一次有效的随机字符串，要求每次请求时，该参数要保证不同，所以该参数一般与时间戳有关，我们这里为了方便起见，直接使用时间戳的16进制，实际使用时可以加上客户端的ip地址，mac地址等信息做个哈希之后，作为nonce参数。 我们将每次请求的nonce参数存储到一个“集合”中，可以json格式存储到数据库或缓存中。 每次处理HTTP请求时，首先判断该请求的nonce参数是否在该“集合”中，如果存在则认为是非法请求。 nonce参数在首次请求时，已经被存储到了服务器上的“集合”中，再次发送请求会被识别并拒绝。 nonce参数作为数字签名的一部分，是无法篡改的，因为黑客不清楚token，所以不能生成新的sign。 这种方式也有很大的问题，那就是存储nonce参数的“集合”会越来越大，验证nonce是否存在“集合”中的耗时会越来越长。我们不能让nonce“集合”无限大，所以需要定期清理该“集合”，但是一旦该“集合”被清理，我们就无法验证被清理了的nonce参数了。也就是说，假设该“集合”平均1天清理一次的话，我们抓取到的该url，虽然当时无法进行重放攻击，但是我们还是可以每隔一天进行一次重放攻击的。而且存储24小时内，所有请求的“nonce”参数，也是一笔不小的开销。 基于timestamp和nonce的方案nonce的一次性可以解决timestamp参数60s的问题，timestamp可以解决nonce参数“集合”越来越大的问题。防止重放攻击一般和防止请求参数被串改一起做，请求的Headers数据如下图所示。 我们在timestamp方案的基础上，加上nonce参数，因为timstamp参数对于超过60s的请求，都认为非法请求，所以我们只需要存储60s的nonce参数的“集合”即可。 HTTP请求头，参数说明：由于每次数据请求都要带上这几个参数，所以直接将这几个参数设置在请求头中，从而简化body长度；当然也可以在去请求参数中拼凑视具体情况而定。 参数名 参数说明 备注 token 用户令牌，用于认证用户身份 稍微长一点的文本 sign 签名，用于监测请求数据的完整性 中等文本 timestamp 请求时间戳 根据的约定的保留毫秒或者精度到秒 nonce 请求随机字符串: MD5(时间戳+随机字符) 单位时间内产生不重复字符就好 有关token的详细说明，请查看《Access Token &amp; Refresh Token 机制》这篇文章 服务器端校验：服务器端的校验配置通常会放在Filter / Interceptor 中,作为全局的管理。nonce参数通常会存在redis中，并且设置TTL过期时间。123456789101112131415161718192021222324252627282930313233343536373839404142String token = request.getHeader("token");String timestamp = request.getHeader("timestamp");String nonce = request.getHeader("nonce");String sign = request.getHeader("sign");//时间限制配置 sint timeLimit = 60;//请求头参数非空验证if (StringUtils.isEmpty(token) || StringUtils.isEmpty(timestamp) || StringUtils.isEmpty(nonce) || StringUtils.isEmpty(sign)) &#123; ctx.setResponseBody(JSON.toJSONString(new Result("-1", "请求头参数不正确"))); return null;&#125;//请求时间和现在时间对比验证，发起请求时间和服务器时间不能超过timeLimit秒if (StringUtils.timeDiffSeconds(new Date(), timestamp) &gt; timeLimit) &#123; ctx.setResponseBody(JSON.toJSONString(new Result("-1", "请求发起时间超过服务器限制"))); return null;&#125;//验证用户信息UserInfo userInfo = UserInfoUtil.getInfoByToken(token);if (userInfo == null) &#123; ctx.setResponseBody(JSON.toJSONString(new Result("-1", "错误的token信息"))); return null;&#125;//验证相同noce的请求是否已经存在，存在表示为重复请求if (NoceUtil.exsit(userInfo, nonce)) &#123; ctx.setResponseBody(JSON.toJSONString(new Result("-1", "重复的请求"))); return null;&#125; else &#123; //如果noce没有在缓存中，则需要加入，并设置过期时间为timeLimit秒 NoceUtil.addNoce(userInfo, nonce, timeLimit);&#125;//服务器生成签名与header中签名对比String serverSign = SignUtil.getSign(userinfo, token, timestamp, nonce, request);if (!serverSign.equals(sign)) &#123; ctx.setResponseBody(JSON.toJSONString(new Result("-1", "错误的签名信息"))); return null;&#125; 非对称密钥拓扑结构与对称密钥不同，非对称密钥要有一组密钥分别是公钥和私钥，通常情况下公钥加密，私钥解密。公钥可以发布给任意的客户端程序，服务器端则通过私钥解密。以下是非对称密钥的拓扑结构。 如上图所以，发送者用接收方公开出来的公钥PK进行加密。接受方在收到密文后，再用与公钥对应的私钥SK进行解密。同样，密文即便被截获，但是由于截获者只有公钥，没有私钥，他不能进行解密 非对称加密优缺点非对称加密的突出优点是用于解密的密钥（也就是私钥）永远不需要传递给对方。但是，它的缺点也很突出：非对称加密算法复杂，导致加解密速度慢，故只适合小量数据的场合。而对称加密加解密效率高，系统开销小，适合进行大数据量的加解密。由于文件一般比较大，这个特性决定了适合它的加密方式最好是对称加密。 Eg.RSA对称密钥算法（java实现）package com.fanfq.util.commons.encrypt.rsa;import org.apache.commons.codec.binary.Base64;import javax.crypto.Cipher;import java.security.*;import java.security.spec.PKCS8EncodedKeySpec;import java.security.spec.X509EncodedKeySpec;import java.util.HashMap;import java.util.Map;/**&lt;dependency&gt; &lt;groupId&gt;commons-codec&lt;/groupId&gt; &lt;artifactId&gt;commons-codec&lt;/artifactId&gt; &lt;version&gt;1.11&lt;/version&gt;&lt;/dependency&gt;https://www.jianshu.com/p/ff8281f034f4 * @author fred * */public class RSAUtil2 &#123; public static final String KEY_ALGORITHM = "RSA"; public static final String SIGNATURE_ALGORITHM = "MD5withRSA"; private static final String PUBLIC_KEY = "RSAPublicKey"; private static final String PRIVATE_KEY = "RSAPrivateKey"; public static byte[] decryptBASE64(String key) &#123; return Base64.decodeBase64(key); &#125; public static String encryptBASE64(byte[] bytes) &#123; return Base64.encodeBase64String(bytes); &#125; /** * 用私钥对信息生成数字签名 * * @param data 加密数据 * @param privateKey 私钥 * @return * @throws Exception */ public static String sign(String data, String privateKey) throws Exception &#123; // 解密由base64编码的私钥 byte[] keyBytes = decryptBASE64(privateKey); // 构造PKCS8EncodedKeySpec对象 PKCS8EncodedKeySpec pkcs8KeySpec = new PKCS8EncodedKeySpec(keyBytes); // KEY_ALGORITHM 指定的加密算法 KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM); // 取私钥匙对象 PrivateKey priKey = keyFactory.generatePrivate(pkcs8KeySpec); // 用私钥对信息生成数字签名 Signature signature = Signature.getInstance(SIGNATURE_ALGORITHM); signature.initSign(priKey); signature.update(data.getBytes()); return encryptBASE64(signature.sign()); &#125; /** * 校验数字签名 * * @param data 加密数据 * @param publicKey 公钥 * @param sign 数字签名 * @return 校验成功返回true 失败返回false * @throws Exception */ public static boolean verify(String data, String publicKey, String sign) throws Exception &#123; // 解密由base64编码的公钥 byte[] keyBytes = decryptBASE64(publicKey); // 构造X509EncodedKeySpec对象 X509EncodedKeySpec keySpec = new X509EncodedKeySpec(keyBytes); // KEY_ALGORITHM 指定的加密算法 KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM); // 取公钥匙对象 PublicKey pubKey = keyFactory.generatePublic(keySpec); Signature signature = Signature.getInstance(SIGNATURE_ALGORITHM); signature.initVerify(pubKey); signature.update(data.getBytes()); // 验证签名是否正常 return signature.verify(decryptBASE64(sign)); &#125; public static byte[] decryptByPrivateKey(byte[] data, String key) throws Exception&#123; // 对密钥解密 byte[] keyBytes = decryptBASE64(key); // 取得私钥 PKCS8EncodedKeySpec pkcs8KeySpec = new PKCS8EncodedKeySpec(keyBytes); KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM); Key privateKey = keyFactory.generatePrivate(pkcs8KeySpec); // 对数据解密 Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm()); cipher.init(Cipher.DECRYPT_MODE, privateKey); return cipher.doFinal(data); &#125; /** * 解密&lt;br&gt; * 用私钥解密 * * @param data * @param key * @return * @throws Exception */ public static byte[] decryptByPrivateKey(String data, String key) throws Exception &#123; return decryptByPrivateKey(decryptBASE64(data),key); &#125; /** * 解密&lt;br&gt; * 用公钥解密 * * @param data * @param key * @return * @throws Exception */ public static String decryptByPublicKey(String data, String key) throws Exception &#123; byte[] datas = decryptBASE64(data); // 对密钥解密 byte[] keyBytes = decryptBASE64(key); // 取得公钥 X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes); KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM); Key publicKey = keyFactory.generatePublic(x509KeySpec); // 对数据解密 Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm()); cipher.init(Cipher.DECRYPT_MODE, publicKey); return new String(cipher.doFinal(datas)); &#125; /** * 加密&lt;br&gt; * 用公钥加密 * * @param data * @param key * @return * @throws Exception */ public static String encryptByPublicKey(String data, String key) throws Exception &#123; // 对公钥解密 byte[] keyBytes = decryptBASE64(key); // 取得公钥 X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes); KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM); Key publicKey = keyFactory.generatePublic(x509KeySpec); // 对数据加密 Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm()); cipher.init(Cipher.ENCRYPT_MODE, publicKey); return encryptBASE64(cipher.doFinal(data.getBytes())); &#125; /** * 加密&lt;br&gt; * 用私钥加密 * * @param data * @param key * @return * @throws Exception */ public static String encryptByPrivateKey(String data, String key) throws Exception &#123; // 对密钥解密 byte[] keyBytes = decryptBASE64(key); // 取得私钥 PKCS8EncodedKeySpec pkcs8KeySpec = new PKCS8EncodedKeySpec(keyBytes); KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM); Key privateKey = keyFactory.generatePrivate(pkcs8KeySpec); // 对数据加密 Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm()); cipher.init(Cipher.ENCRYPT_MODE, privateKey); return encryptBASE64(cipher.doFinal(data.getBytes())); &#125; /** * 取得私钥 * * @param keyMap * @return * @throws Exception */ public static String getPrivateKey(Map&lt;String, Key&gt; keyMap) throws Exception &#123; Key key = (Key) keyMap.get(PRIVATE_KEY); return encryptBASE64(key.getEncoded()); &#125; /** * 取得公钥 * * @param keyMap * @return * @throws Exception */ public static String getPublicKey(Map&lt;String, Key&gt; keyMap) throws Exception &#123; Key key = keyMap.get(PUBLIC_KEY); return encryptBASE64(key.getEncoded()); &#125; /** * 初始化密钥 * * @return * @throws Exception */ public static Map&lt;String, Key&gt; initKey(int length) throws Exception &#123; KeyPairGenerator keyPairGen = KeyPairGenerator .getInstance(KEY_ALGORITHM); if(length != 2048) length = 1024; keyPairGen.initialize(length); KeyPair keyPair = keyPairGen.generateKeyPair(); Map&lt;String, Key&gt; keyMap = new HashMap(2); keyMap.put(PUBLIC_KEY, keyPair.getPublic());// 公钥 keyMap.put(PRIVATE_KEY, keyPair.getPrivate());// 私钥 return keyMap; &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586package com.fanfq.util.commons.encrypt.rsa;import java.io.FileOutputStream;import java.io.ObjectOutputStream;import java.security.Key;import java.util.Map;public class RSAUtil2Test &#123; private String publicKey; private String privateKey; public void setUp() throws Exception &#123; Map&lt;String, Key&gt; keyMap = RSAUtil2.initKey(2048); publicKey = RSAUtil2.getPublicKey(keyMap); privateKey = RSAUtil2.getPrivateKey(keyMap); System.out.println("公钥:" + publicKey.length()); System.out.println(publicKey); System.out.println("私钥:" + privateKey.length()); System.out.println(privateKey); ObjectOutputStream oos1 = null; ObjectOutputStream oos2 = null; try &#123; /** 用对象流将生成的密钥写入文件 */ oos1 = new ObjectOutputStream(new FileOutputStream("RSA_PUBLIC_KEY")); oos2 = new ObjectOutputStream(new FileOutputStream("RSA_PRIVATE_KEY")); oos1.writeObject(publicKey); oos2.writeObject(privateKey); &#125; catch (Exception e) &#123; throw e; &#125; finally &#123; /** 清空缓存，关闭文件输出流 */ oos1.close(); oos2.close(); &#125; &#125; public void test() throws Exception &#123; System.out.println("\n-------------"); System.out.println("公钥加密——私钥解密"); String inputStr = "dounine"; String encodedData = RSAUtil2.encryptByPublicKey(inputStr, publicKey); byte[] decodedData = RSAUtil2.decryptByPrivateKey(encodedData, privateKey); String outputStr = new String(decodedData); System.out.println("加密前: " + inputStr); System.out.println("公钥加密后: " + encodedData); System.out.println("私钥解密后: " + outputStr); &#125; public void testSign() throws Exception &#123; System.out.println("\n-------------"); System.out.println("私钥加密——公钥解密"); String inputStr = "dounine"; String encodedData = RSAUtil2.encryptByPrivateKey(inputStr, privateKey); String decodedData = RSAUtil2.decryptByPublicKey(encodedData, publicKey); System.out.println("加密前: " + inputStr); System.out.println("私钥加密后: " + encodedData); System.out.println("公钥解密后: " + decodedData); System.out.println("\n私钥签名——公钥验证签名"); // 产生签名 String sign = RSAUtil2.sign("123", privateKey); System.out.println("私钥签名:("+sign.length()+")" + sign); // 验证签名 boolean status = RSAUtil2.verify(encodedData, publicKey, sign); System.out.println("公钥验证签名:" + status); &#125; public static void main(String[] args) &#123; // TODO Auto-generated method stub RSAUtil2Test rsa = new RSAUtil2Test(); try &#123; rsa.setUp(); rsa.test(); rsa.testSign(); &#125; catch (Exception e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125;&#125;]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>openapi</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于欧盟GDPR，你需要知道的事！]]></title>
    <url>%2Fpolicy%2F%E5%85%B3%E4%BA%8E%E6%AC%A7%E7%9B%9FGDPR%E4%BD%A0%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B.html</url>
    <content type="text"><![CDATA[欧盟《一般数据保护条例》（GDPR）将于2018年5月25日起正式施行，该条例是近三十年来数据保护立法的最大变动，旨在加强对欧盟境内居民的个人数据和隐私保护。此外，它还将通过统一数据和隐私条例来简化对跨国企业的监管框架。它将取代1995年颁布的《数据保护指令》。 1995年的《数据保护指令》95/46/EC是欧盟版的隐私保护条例。其主要目标包括协调数据保护立法，以及规范将个人数据转移到欧盟以外的“第三国”的情形。除了其它一系列措施，各个盟国还各自成立独立的公共机构，监督该指令的实施，并作为与企业和公民互动的监管机构。整体而言，该指令符合经济合作与发展协会（OECD）的最初建议以及隐私权是基本人权的核心概念。 虽然《数据保护指令》旨在团结不同盟国的立法，但这只是一项指令，当置换到各国独立的法律时仍有一定的解释空间。加上当今数据格局的快速变化，尤其是Facebook、LinkedIn等社交平台以及云技术的兴起，势必要升级欧盟地区的监管环境。即将到来的GDPR是一项更大的立法，并且在各个成员国即刻可执行。 条例 vs. 指令这项变化的一个重要特征就是欧盟GDPR是一项条例取代原有的指令。条例直接适用于欧盟各成员国，而对于指令，各成员国有权酌情决定数据保护法的实施。因而，除了严格的数据和隐私保护，条例的实施还将通过在欧盟地区统一数据和隐私法规而简化监管框架。对于跨国企业来说，这将帮助他们在与多个数据和隐私保护机构沟通时消除当地法律之间的不一致性，从而降低行政成本和负担。 处罚力度加大GDPR将继续通过监管机构和法院执行，除了民事补救还有刑事和行政处罚。然而，根据国际隐私专业人士协会的数据，GDPR加大了行政处罚的力度，根据案情情况最高可罚款两千万欧元，或公司年营业额的4%。 新扩大的管辖权将影响在欧盟地区开展业务的中国企业 该条例的一个重要特征是新扩大的管辖权，可能会影响到欧盟以外的企业。新条例适用于为欧盟境内的个人提供商品和服务，或监控个人行为（如商业网站或移动应用的运营商）的企业。这一规定将影响很多中国企业。 GDPR规定同意书将仍是处理个人数据的一个要求，并为同意书设立了更严格的条件。EUDataProtectionLaw.com指出，对这些条件的定义是“数据主体通过申明或一个清晰的肯定动作，在知情的情况下自主、具体而明确地表明自己的意愿，即表示他们同意个人相关数据被处理。” 规定新权利欧盟GDPR还建立了两项新的个人隐私权，“删除权”和“移植权”。删除权是对“被遗忘权”的扩充，让个人有权要求删除其个人数据。而移植权则让个人可以更轻松地访问自己的数据。个人可以要求将其数据从一个供应商转移到另一个供应商。此类数据转移将为个人创造更多方便，而加大了供应商之间的竞争。 如何确保合规GDPR不止适用于欧盟内的企业，还适用于欧盟以外的企业——如果他们为欧盟境内的数据主体提供商品或服务，或者监控其行为。GDPR也适用于处理或持有欧盟境内数据主体数据的企业，不论该企业位于何处。 很多企业之前并未遵循过欧盟数据和隐私法，因而很多细节（如范围、实施等）都不清楚。对于在欧盟境内运营的企业，或是向欧洲个人提供商品、服务或监控其行为的企业，您可以通过以下步骤提前为明年做准备。 根据现有资料深入解读GDPR 理解GDPR规定下个人数据的广泛范围 创建、更新或审查有关个人信息和安全措施的文档 根据GDPR，创建、更新或审查有关违规行为、事件报告以及风险评估的政策和程序的文档 创建、更新或审查任何必要的合同和协议语言 判断使用云端人力资源或薪酬供应商是否有利于公司减轻合规风险。 人力资源领导者需要注意居住在欧洲的中国公民将受到GDPR保护，而居住在欧盟以外的欧盟公民则不受这些法规保护。 虽然很多公司已经采取数据和隐私措施以遵守《数据保护指令》，然而GDPR包含了新的保护措施，并适用于更广泛的领域，包含欧盟境内外的企业，这将需要额外的合规措施。企业必须尽快采取行动为2018年5月GDPR的正式生效做好准备。]]></content>
      <categories>
        <category>policy</category>
      </categories>
      <tags>
        <tag>policy</tag>
        <tag>GDPR</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用户协议]]></title>
    <url>%2Fpolicy%2F%E7%94%A8%E6%88%B7%E5%8D%8F%E8%AE%AE.html</url>
    <content type="text"><![CDATA[一、服务条款的确认和接纳为获得本网站提供基于互联网的相关服务，服务使用人（以下称“用户”)必须同意本协议的全部条款并按照页面上的提示完成注册程序。如果用户在注册程序过程中点击“我同意”按钮即表示用户与本网站达成协议，完全接受本协议项下的全部条款。 二、服务内容本网站服务的具体内容由本网站根据实际情况提供。本网站保留随时变更、中断或终止部分或全部网络服务包括收费网络服务的权利。 用户必须同意接受本网站通过电子邮件或其他方式向用户发送广告或其他相关商业信息。 本网站仅提供相关的网络服务，除此之外与相关网络服务有关的设备（如电脑、调制解调器及其他与接入互联网有关的装置)及所需的费用（如为接入互联网而支付的电话费及上网费)均应由用户自行负担。 三、使用规则1、用户帐号、密码和安全 用户在申请使用本网站提供的网络服务时，必须提供准确的个人资料，如个人资料有任何变动，必须及时更新。 用户注册成功后，本网站将给予每个用户一个用户帐号及相应的密码，用户应采取合理措施维护其密码和帐号的安全。用户对利用该密码和帐号所进行的一切活动负全部责任；由该等活动所导致的任何损失或损害由用户承担，本网站不承担任何责任。 盗取他人用户帐号或利用网络通讯骚扰他人，均属于非法行为。用户不得采用测试、欺骗等任何非法手段，盗取其他用户的帐号和对他人进行骚扰。 2、用户应遵守以下法律及法规 用户同意遵守《中华人民共和国保守国家秘密法》、《中华人民共和国著作权法》、《中华人民共和国计算机信息系统安全保护条例》、《计算机软件保护条例》、《互联网电子公告服务管理规定》、《信息网络传播权保护条例》等有关计算机及互联网规定的法律、法规、实施办法。在任何情况下，本网站合理地认为用户的行为可能违反上述法律、法规，本网站可以在任何时候，不经事先通知终止向该用户提供服务。 3、禁止用户从事以下行为： 3.1、 使用本网站服务发送或传播敏感信息和违反国家法律制度的信息，包括但不限于下列信息: （1) 危害国家安全，泄露国家秘密，颠覆国家政权，破坏国家统一的； （2) 损害国家荣誉和利益的； （3) 煽动民族仇恨、民族歧视，破坏民族团结的； （4) 破坏国家宗教政策，宣扬邪教和封建迷信的； （5) 散布谣言，扰乱社会秩序，破坏社会稳定的； （6) 散布淫秽、色情、赌博、暴力、凶杀、恐怖或者教唆犯罪的； （7) 侮辱或者诽谤他人，侵害他人合法权益的； （8) 含有法律、行政法规禁止的其他内容的。 3.2、 使用本网站提供的服务进行任何非法、淫秽、色情及其他违反公序良俗之活动，包括但不限于非法传销、诈骗、侵权、反动行为等。 3.3、 对本网站服务的任何部分或服务之使用或获得进行复制、拷贝、出售，或利用本网站服务进行调查、广告或其他商业目的，但本网站对特定服务另有适用指引或规定的除外。 在任何情况下，本网站合理地认为用户的行为可能违反上述规定，本网站可以在任何时候，不经事先通知终止向该用户提供服务。 四、 内容权利用户上载的内容是指用户在本网站上载或发布的游戏或其它任何形式的内容包括文字、图片、音频等。 除非本网站收到相反通知，本网站将用户视为其在本网站上载或发布的内容的版权拥有人。用户在本网站上载或发布内容即视为其同意授予本网站所有上述内容的在全球范围内的免费、不可撤销的无限期的并且可转让的非独家使用权许可，本网站有权展示、散布及推广前述内容，有权对前述内容进行任何形式的复制、修改、出版、发行及以其他方式使用或者授权第三方进行复制、修改、出版、发行及以其他方式使用。 因用户进行上述内容在本网站的上载或发布，而导致任何第三方提出索赔要求或衍生的任何损害或损失，由用户承担全部责任。 内容权利详情请见：“作品上传须知”，“留言须知”及“版权声明” 五、隐私保护保护用户隐私是本网站的重点原则，本网站保证不对外公开或向第三方提供用户注册资料及用户在使用服务时存储在本网站的非公开内容，但下列情况除外： 事先获得用户的明确授权； 根据有关的法律法规要求； 按照相关政府主管部门的要求； 维护用户以及社会公众的利益； 维护本网站的合法权益； 本网站可能会与第三方合作向用户提供相关的服务，在此情况下，如该第三方同意承担与本网站同等的保护用户隐私的责任，则本网站可将用户的注册资料等提供给该第三方。 在不透露单个用户隐私资料的前提下，本网站有权对整个用户数据库进行分析并对用户数据库进行商业上的利用。 六、 关于第三方链接本网站服务可能会提供与其他国际互联网网站或资源进行链接。因使用或依赖上述网站或资源所生的损失或损害，本网站不负担任何责任。 七、 免责声明1、本网站对于任何自本网站而获得的他人的信息、内容或者广告宣传等任何资讯（以下统称“信息”），不保证真实、准确和完整性。如果任何单位或者个人通过上述“信息”而进行任何行为，须自行甄别真伪和谨慎预防风险，否则，无论何种原因，本网站不对任何非与本网站直接发生的交易和/或行为承担任何直接、间接、附带或衍生的损失和责任。 2、本网站不保证（包括但不限于）： （1) 本网站适合您的使用要求； （2) 本网站不受干扰，及时、安全、可靠或不出现错误； （3) 您经由本网站取得的任何产品、服务或其他材料符合您的期望。 3、您使用经由本网站下载或取得的任何资料，其风险由您自行承担；因该等使用导致您电脑系统损坏或资料流失，您应自己负完全责任； 4、基于以下原因而造成的利润、商业信誉、资料损失或其他有形或无形损失，本网站不承担任何直接、间接的赔偿： （1）对本网站的使用或无法使用； （2）经由本网站购买或取得的任何产品、资料或服务； （3）用户资料遭到未授权的使用或修改； （4）其它与本网站相关的事宜。 八、服务变更、中断或终止如因系统维护或升级的需要而需暂停网络服务，本网站将尽可能事先在重要页面进行通告。 如发生下列任何一种情形，本网站有权随时中断或终止向用户提供服务而无需通知用户： 用户提供的个人资料不真实。 用户违反本协议中规定的使用规则。 用户注册后，连续六个月没有登陆账号的。 用户在使用收费网络服务时未按规定向本网站支付相应的服务费。 除前款所述情形外，本网站同时保留在不事先通知用户的情况下随时中断或终止部分或全部服务的权利，对于所有服务的中断或终止而造成的任何损失，本网站无需对用户或任何第三方承担任何责任。 九、修改协议本网站有权随时修改本协议的有关条款，一旦条款内容发生变动，本网站将会在相关的页面提示修改内容。 用户如果不同意本网站对服务条款所做的修改，可以放弃使用或访问本网站或取消已经获得的服务。如果用户继续使用服务，则视为用户接受服务条款的变动。 十、法律管辖本协议的订立、执行和解释及争议的解决均应适用中国法律。 如双方就本协议内容或其执行发生任何争议，双方应尽量友好协商解决；协商不成时，任何一方均可向本网站所在地的人民法院提起诉讼。 十一、通知和送达本协议项下所有的通知均可通过重要页面公告、电子邮件或常规的信件传送等方式进行；该等通知于发送之日视为已送达收件人。 用户对于本网站的通知应当通过本网站对外正式公布的通信地址、电子邮件地址等联系信息进行送达。 十二、其他规定本协议构成双方对本协议之约定事项及其他有关事宜的完整协议，除本协议规定的之外，未赋予本协议各方其他权利。 如本协议中的任何条款无论因何种原因完全或部分无效或不具有执行力，本协议的其余条款仍应有效并且有约束力。 本协议中的标题仅为方便而设，在解释本协议时应被忽略。 十三、本协议解释权归本网站所有。]]></content>
      <categories>
        <category>policy</category>
      </categories>
      <tags>
        <tag>网站</tag>
        <tag>协议</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[隐私权政策]]></title>
    <url>%2Fpolicy%2F%E9%9A%90%E7%A7%81%E6%9D%83%E6%94%BF%E7%AD%96.html</url>
    <content type="text"><![CDATA[公司名称（以下可称为“我们”）非常尊重用户个人信息的保护，在您使用公司名称平台提供的服务时，我们将按照本隐私权政策收集、使用及共享您和您的最终用户（即“您的产品的最终用户”或“您的产品的终端用户”，以下同）的个人信息。本隐私权政策包含了我们收集、存储、使用、共享和保护您和您的最终用户的个人信息的条款，我们希望通过本隐私权政策向您清晰地介绍我们对您和您的最终用户的个人信息的处理方式，因此我们建议您完整地阅读本隐私权政策，以帮助您了解维护自己隐私权的方式。如您对本隐私权政策有任何疑问，您可以通过公司名称公布的联系方式与我们联系。如果您不同意本隐私权政策任何内容，您应立即停止使用公司名称服务。当您使用公司名称提供的任一服务时，即表示您已同意我们按照本隐私权政策来合法使用和保护您和您的最终用户的个人信息。 一、适用范围为用户提供更好、更优、更个性化的服务是公司名称坚持不懈的追求。本隐私权政策适用于公司名称提供的各项服务，您访问公司名称平台、使用公司名称提供的服务包括但不限于我们提供的网站、客户端、SDK、API、插件、组件、代码、工具以及不断创新研发的产品及服务，均适用本隐私权政策。 如您使用公司名称提供的某项或某几项服务有其单独的隐私权政策的，该等服务对应的隐私权政策将与本隐私权政策一起构成一份完整的公司名称隐私权政策。 需要特别说明的是，本隐私权政策不适用于展示在、链接到或再封装我们的服务的那些适用其他的隐私权政策、由第三方提供的服务。虽然第三方展示在、链接到或再封装我们的服务，但我们并不了解或控制其行为，因此也不为其行为负责；在您已查看并接受其隐私权政策之前，请谨慎访问或使用其服务。 如您允许我们与第三方网站共享的信息，则同时需受第三方网站服务条款和隐私权政策的约束。 二、我们如何收集信息我们收集信息是为了向您提供更好、更优、更个性化的服务，我们收集信息的方式如下： 1、您向我们提供的信息 当您开通公司名称服务及您在使用公司名称提供的相关服务时填写、提交或接入的信息，包括您的姓名、电子邮箱、联系方式、您线下服务的最终用户相关数据等。 2、在您使用服务过程中收集的信息 （1）公司名称统计分析服务 公司名称统计分析服务帮助您了解您的最终用户如何使用您的产品（含服务，包括但不限于移动应用客户端、移动网站、应用平台、PC网站、站点及公司名称确认可供提供服务的其他终端等，以下同），并且帮助您分析您的产品在不同终端设备上的表现。当您在产品里集成了公司名称统计分析工具之后，您的产品就通过公司名称统计分析工具传送数据到我们的服务器。 可以通过公司名称统计分析工具收集并存储的数据包括但不限于：SDK/API/JS代码版本、浏览器、互联网服务提供商、IP地址、平台、时间戳、应用标识符、应用程序版本、应用分发渠道、独立设备标识符、iOS广告标识符（IDFA)、网卡（MAC）地址、国际移动设备识别码（IMEI）、设备型号、终端制造厂商、终端设备操作系统版本、会话启动/停止时间、语言所在地、时区和网络状态（WiFi等）、硬盘、CPU和电池使用情况等。我们可能对MAC地址和IMEI等可以用于识别终端设备的信息进行加密，从而提高对隐私的保护。 如果您在集成公司名称统计分析工具时选择了高级服务，我们还收集并存储以下数据：您的最终用户在您的产品中的标识符、经度和纬度、性别、年龄、用户触发的事件、错误和页面浏览量。此外，通过公司名称统计分析工具发送的HTTP请求中还可能包含您的最终用户的IP地址、设备类型、地区等信息。 （2）公司名称广告监测服务 公司名称广告监测服务帮助您了解您的广告投放活动的效果，分析广告触达用户的后续转化情况。当您在产品里集成了公司名称广告监测工具后，您的产品就通过公司名称广告监测工具传送数据到我们的服务器。 可以通过公司名称广告监测工具收集并存储的数据包括但不限于：SDK/API/JS代码版本、浏览器、终端设备操作系统版本、互联网服务供应商、IP地址、应用分发渠道、独立设备标识符、iOS广告标识符（IDFA)、网卡（MAC）地址、国际移动设备识别码（IMEI）、设备型号、浏览的页面、访问的时间和长度、下载、点击等操作行为。 （3）公司名称开发者运营工具 公司名称开发者运营工具帮助您在您的产品中整合或搭建即时通讯、消息推送、社会化分享、微社区等功能模块。当您在产品里集成了公司名称开发者运营工具SDK或API之后，您的产品就通过公司名称开发者运营工具SDK或API传送数据到我们的服务器。 可以通过公司名称开发者运营工具SDK或API收集并存储的数据包括但不限于： SDK或API版本、平台、苹果设备令牌（Device Token）、时间戳、应用标识符、应用程序版本、应用分发渠道、独立设备标识符、iOS广告标识符（IDFA)、网卡（MAC）地址、国际移动设备识别码（IMEI）、设备型号、终端制造厂商、终端设备操作系统版本、会话启动/停止时间、语言所在地、时区和网络状态（WiFi等）、硬盘、CPU和电池使用情况等。我们可能对MAC地址和IMEI等可以用于识别终端设备的信息进行加密，从而提高对隐私的保护。 如果您在集成公司名称开发者运营工具SDK或API时选择了高级服务，我们还收集并存储以下数据：您的最终用户在您的产品中的标识符、您根据用户的属性或行为而为用户添加的标签、经度和纬度、用户触发的事件、用户采用第三方平台登录时的唯一标识号。通过公司名称开发者运营工具SDK或API发送的HTTP请求中还可能包含您的最终用户的IP地址。此外，基于第三方开放平台服务条款，我们记录授权用户的设备分享或登录时相应社交平台的唯一标识号，用户在社区进行的发帖、点赞等行为以及用户在社交平台上的公开信息，包括昵称、性别、年龄、所在地、职业、教育、标签信息等。 （4）行业报告服务 我们将基于覆盖全域的公司名称统计分析服务所收集的数据，以及通过其他合法渠道获得的数据建立公司名称数据库，作出产品在行业内、特定区域和市场等方面的绩效评估或行为模式分析报告（以下合称“行业报告”）。行业报告将以不可识别的聚合形式表现，既包括由公司名称自主发布的，也包括根据您的需求定制形成的。 特别的情况下，我们也会根据公司名称的算法模型做出某种或某类产品的评估结果，该评估结果可能会源于从您的产品中得到的数据因而与您的产品呈现出一定的吻合性，但这些评估结果是我们基于算法模型计算得出的，用于评估目的的，并且是聚合性和匿名的。 （5）访问和浏览公司名称平台 在您使用公司名称服务，或访问公司名称平台所涉各网站时，公司名称自动接收并记录您的浏览器和计算机上的信息，包括但不限于您的IP地址、浏览器的类型、使用的语言、访问日期和时间、软硬件特征信息及您需求的网页记录等数据。如您访问移动网页使用公司名称服务时，公司名称可能会读取与您位置和移动设备相关的信息，包括但不限于设备型号、设备识别码、操作系统、分辨率、电信运营商等。 （6）其他 除上述信息外，我们还可能为了提供服务及改进服务质量的合理需要而收集您的其他信息，包括您与我们的客户服务团队联系时提供的相关信息，您参与问卷调查时向我们发送的问卷答复信息，以及您与公司名称的关联方、公司名称合作伙伴之间互动时我们收集的相关信息。 与此同时，为提高您使用公司名称服务的安全性，更准确地预防钓鱼网站欺诈和木马病毒，我们可能会通过了解一些您的网络使用习惯、您常用的软件信息等手段来判断您账户的风险，并可能会记录一些我们认为有风险的URL。 3、来自第三方的信息 为了给您提供更好、更优的服务，或共同为您提供服务，或为了预防互联网欺诈等目的，公司名称的关联方、合作伙伴会依据法律的规定或与您的约定或征得您同意的前提下，向公司名称分享您的个人信息。 三、我们如何使用信息我们使用收集来的信息是为了向您提供服务及提升服务质量，为了实现这一目的，我们会把您的信息用于下列用途： 1、向您提供公司名称各项服务，并维护、改进这些服务。 2、向您推荐您可能感兴趣的内容，包括但不限于向您发出产品和服务信息，或通过系统向您展示个性化的第三方推广信息，或者在征得您同意的情况下与公司名称的合作伙伴共享信息以便他们向您发送有关其产品和服务的信息。 3、我们可能使用您的个人信息以预防、发现、调查欺诈、危害安全、非法或违反与我们或其关联方协议、政策或规则的行为，以保护您、其他用户，或我们或其关联方的合法权益。 4、我们可能会将来自某项服务的个人信息与来自其他服务的信息结合起来，用于为了给您提供更加个性化的服务使用。 5、联系您解决问题。 6、经您许可的其他用途。 四、您对最终用户数据的使用我们不控制我们的客户如何使用属于或关于他们的最终用户的数据，也不应为此负责，尽管我们期待我们的客户以符合他们的法律和道德义务的方式使用他们最终用户的数据。最终用户应该审查我们的客户的隐私权政策，从而了解他们如何收集、使用最终用户的数据。 如果您接受本隐私权政策并把我们的SDK、API、JS代码或其他统计工具集成到您的产品中，您已经同意并向我们保证您所有的最终用户同意我们收集和使用其信息，并且同意遵守本隐私权政策的全部规定，您已经遵守并将持续遵守适用的法律、法规和监管要求，包括但不限于制定和公布有关个人信息保护和隐私保护的相关政策。 您在此进一步保证，您的最终用户不会因为我们按照本隐私权政策的规定收集、使用、披露对其的信息而对我们产生任何形式的诉求、诉请、投诉等。如您的最终用户因本隐私权政策项下对其信息的收集、使用、披露而致使我们遭受任何形式的诉请、诉求以及投诉等，您将负责全面给予解决；如导致我们发生任何形式的损失，您将负责给予我们全额赔偿。 五、我们如何共享信息我们对您的信息承担保密义务，不会为满足第三方的营销或非法目的而向其出售或出租您的任何信息，我们会在下列情况下才将您的信息与第三方共享： 1、事先获得您的同意或授权。 2、根据法律法规的规定或行政或司法机构的要求。 3、向公司名称的关联方分享您的个人信息。 4、向可信赖的合作伙伴提供您的个人信息，让他们根据我们的指示并遵循我们的隐私权政策以及其他任何相应的保密和安全措施来为我们处理这些信息。 5、如您是适格的知识产权投诉人并已提起投诉，应被投诉人要求，向被投诉人披露，以便双方处理可能的权利纠纷。 6、只有共享您的信息，才能提供您需要的服务，或处理您与他人的纠纷或争议。 7、我们正在或拟进行企业并购、重组、出售全部或部分股份和/或资产等重大变化，包括但不限于其尽职调查过程。 8、为维护公司名称及其关联方或用户的合法权益。 六、Cookie 和网络 Beacon 的使用为使您获得更轻松的访问体验，您访问公司名称平台或使用公司名称提供的服务时，我们可能会通过小型数据文件识别您的身份，这么做是帮您省去重复输入注册信息的步骤，或者帮助判断您的账户安全。这些数据文件可能是Cookie、Flash Cookie，或您的浏览器或关联应用程序提供的其他本地存储（以下合称“Cookie”）。 请您理解，我们的某些服务只能通过使用Cookie才可得到实现。如果您的浏览器或浏览器附加服务允许，您可以打开浏览器的设置选项，选择隐私设置，勾选“不跟踪”，或者禁止cookie，这样您的数据将不会被我们追踪到，但这一举动在某些情况下可能会影响您安全访问公司名称平台和使用公司名称提供的服务。 网页上常会包含一些电子图象（称为“单像素GIF 文件”或 “网络 Beacon”），使用网络Beacon可以帮助网站计算浏览网页的用户或访问某些Cookie，我们会通过网络Beacon收集您浏览网页活动的信息，例如您访问的页面地址、您先前访问的援引页面的位址、您停留在页面的时间、您的浏览环境以及显示设定等。 七、更新您的信息我们将努力使您能审阅、更新或更正您存在我们这里的信息。如需审阅、更新或更正，请访问我们的网站并登录您的账户。为了辨别您身份、核实并处理您的请求，我们将需要您提交充分有效的身份信息。请注意，即使根据您的请求变更或删除了您的信息，我们为解决争议、执行用户协议并遵守与安全、诚信、服务运营相关的技术和法律要求仍可能保留某些您的数据。 八、信息存储公司名称收集的有关您的信息和资料将保存在公司名称的服务器上，这些信息和资料可能传送至您所在国家、地区或公司名称收集信息和资料所在地并在该地被访问、存储和展示。 九、您的个人信息保护为了保障您的信息安全，我们将按照行业通行标准、努力采取合理的物理、电子和管理方面的安全措施来保护您的信息，使您的信息不会被泄漏、毁损或者丢失，包括但不限于SSL、信息加密存储、数据中心的访问控制。您个人信息的访问权限仅限于为根据本隐私权政策完成工作任务或进行技术维护工作需要处理您个人信息的人员。 我们收集的信息保存于不向公众开放的安全运行环境之中。为避免未经授权访问您的信息，我们将其保存在有防火墙保护并可能加密的服务器之中。但是，没有任何系统是绝对安全的，请您理解在信息网络上不存在“完善的安全措施”。即使我们做出了很大努力，仍有可能无法杜绝对您的个人信息的非法访问。此外，由于无法判断他人的陈述是否属实，我们可能会被不可靠的、有误导性的或非法的信息所蒙蔽。 如果您或您的最终用户不接受本隐私权政策并提供我们所要求的信息，那么您将无法使用我们的服务或使用我们提供的全部功能。但您需要了解，提供该信息意味着您和您的最终用户已经充分理解这些信息可能会有被盗、非法拥有或滥用的风险，以及由此带来的您和您的最终用户的人身安全、财产和声誉等方面的损失。 十、未成年人保护我们重视未成年人的个人信息保护。如您为未成年人，建议您请您的监护人仔细阅读本政策，并在征得您的监护人同意的前提下使用我们的服务或向我们提供信息。 十一、本隐私权政策的修订我们可能随时会对本隐私权政策进行调整或变更，如发生调整或变更，我们将在公司名称平台以网站公告的方式予以公布而不再另行单独通知您，该等调整或变更将在公布时即时生效。如您在隐私权政策调整或变更后继续使用公司名称提供的任一服务或访问公司名称相关网站，我们相信这代表您已充分阅读、理解并接受修改后的隐私权政策并受其约束。 十二、联系我们如果您对本政策有任何问题或建议或有其他事情需要联系我们，请发邮件到: xxx@xxx.com]]></content>
      <categories>
        <category>policy</category>
      </categories>
      <tags>
        <tag>网站</tag>
        <tag>协议</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[log4j2 Best Practices]]></title>
    <url>%2Fjava%2Flog4j2.html</url>
    <content type="text"><![CDATA[原理我就不讲述了，我就简单的说说我的配置以及知识要点 过滤日志级别，对应的级别存档相应的文件。如info只存info级别的信息，比其高的级别直接过滤。 单个log文件体积控制在100mb，超过则自动增加新的文件。日志文件名序号自增起始位以1开始，当日总数超过100自动替换较早的文件. 日志压缩存档，按月归档， 自定义日志级别 日志持久化，将日志信息存储到mongodb pom.xml12345678910111213141516171819202122232425262728&lt;log4j2.version&gt;2.8.1&lt;/log4j2.version&gt;&lt;!-- log4j2 --&gt;&lt;dependency&gt; &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-core&lt;/artifactId&gt; &lt;version&gt;$&#123;log4j2.version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-jcl&lt;/artifactId&gt; &lt;version&gt;$&#123;log4j2.version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-slf4j-impl&lt;/artifactId&gt; &lt;version&gt;$&#123;log4j2.version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-api&lt;/artifactId&gt; &lt;version&gt;$&#123;log4j2.version&#125;&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-nosql&lt;/artifactId&gt; &lt;version&gt;$&#123;log4j2.version&#125;&lt;/version&gt;&lt;/dependency&gt; log4j2.xml123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;configuration status="warn"&gt; &lt;properties&gt; &lt;!-- #(ALL&lt;)TRACE&lt;DEBUG&lt;INFO&lt;WARN&lt;ERROR&lt;FATAL(&lt;OFF) --&gt; &lt;property name="LEVEL"&gt;debug&lt;/property&gt; &lt;property name="PROJECT_NAME"&gt;log4j2&lt;/property&gt; &lt;property name="LOG_PATH"&gt;/Users/fred/Desktop/logs/$&#123;PROJECT_NAME&#125;&lt;/property&gt; &lt;/properties&gt; &lt;CustomLevels&gt; &lt;CustomLevel name="DIAG" intLevel="3" /&gt; &lt;CustomLevel name="NOTICE" intLevel="4" /&gt; &lt;CustomLevel name="VERBOSE" intLevel="5" /&gt; &lt;/CustomLevels&gt; &lt;appenders&gt; &lt;Console name="CONSOLE" target="SYSTEM_OUT"&gt; &lt;ThresholdFilter level="$&#123;LEVEL&#125;" onMatch="ACCEPT" onMismatch="DENY" /&gt; &lt;PatternLayout pattern="[$&#123;PROJECT_NAME&#125;][%-d&#123;yyyy-MM-dd HH:mm:ss:sss&#125;][%p] %C.%M(%L) | %m%n" /&gt; &lt;/Console&gt; &lt;RollingFile name="INFO_ROLLING_FILE" fileName="$&#123;LOG_PATH&#125;/$&#123;PROJECT_NAME&#125;_info.log" filePattern="$&#123;LOG_PATH&#125;/$$&#123;date:yyyy-MM&#125;/$&#123;PROJECT_NAME&#125;_info_%d&#123;yyyy-MM-dd&#125;-%i.log.gz"&gt; &lt;Filters&gt; &lt;!-- 此Filter意思是，只输出info级别的数据 DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 --&gt; &lt;ThresholdFilter level="warn" onMatch="DENY" onMismatch="NEUTRAL" /&gt; &lt;ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL" /&gt; &lt;ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY" /&gt; &lt;/Filters&gt; &lt;PatternLayout pattern="[$&#123;PROJECT_NAME&#125;][%-d&#123;yyyy-MM-dd HH:mm:ss:sss&#125;][%p] %C.%M(%L) | %m%n" /&gt; &lt;Policies&gt; &lt;SizeBasedTriggeringPolicy size="99 MB"/&gt; &lt;TimeBasedTriggeringPolicy interval="1" modulate="true"/&gt; &lt;/Policies&gt; &lt;DefaultRolloverStrategy max="100" /&gt; &lt;/RollingFile&gt; &lt;RollingFile name="DEBUG_ROLLING_FILE" fileName="$&#123;LOG_PATH&#125;/$&#123;PROJECT_NAME&#125;_debug.log" filePattern="$&#123;LOG_PATH&#125;/$$&#123;date:yyyy-MM&#125;/$&#123;PROJECT_NAME&#125;_debug_%d&#123;yyyy-MM-dd&#125;-%i.log.gz"&gt; &lt;Filters&gt; &lt;ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL" /&gt; &lt;ThresholdFilter level="warn" onMatch="DENY" onMismatch="NEUTRAL" /&gt; &lt;ThresholdFilter level="info" onMatch="DENY" onMismatch="NEUTRAL" /&gt; &lt;ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY" /&gt; &lt;/Filters&gt; &lt;PatternLayout pattern="[$&#123;PROJECT_NAME&#125;][%-d&#123;yyyy-MM-dd HH:mm:ss:sss&#125;][%p] %C.%M(%L) | %m%n" /&gt; &lt;Policies&gt; &lt;SizeBasedTriggeringPolicy size="99 MB"/&gt; &lt;TimeBasedTriggeringPolicy interval="1" modulate="true"/&gt; &lt;/Policies&gt; &lt;DefaultRolloverStrategy max="100" /&gt; &lt;/RollingFile&gt; &lt;RollingFile name="ERROR_ROLLING_FILE" fileName="$&#123;LOG_PATH&#125;/$&#123;PROJECT_NAME&#125;_error.log" filePattern="$&#123;LOG_PATH&#125;/$$&#123;date:yyyy-MM&#125;/$&#123;PROJECT_NAME&#125;_error_%d&#123;yyyy-MM-dd&#125;-%i.log.gz"&gt; &lt;ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY" /&gt; &lt;PatternLayout pattern="[$&#123;PROJECT_NAME&#125;][%-d&#123;yyyy-MM-dd HH:mm:ss:sss&#125;][%p] %C.%M(%L) | %m%n" /&gt; &lt;Policies&gt; &lt;SizeBasedTriggeringPolicy size="99 MB"/&gt; &lt;TimeBasedTriggeringPolicy interval="1" modulate="true"/&gt; &lt;/Policies&gt; &lt;DefaultRolloverStrategy max="100" /&gt; &lt;/RollingFile&gt; &lt;!-- 持久化日志到mongodb --&gt; &lt;NoSql name="mongoAppender" bufferSize="10"&gt; &lt;!--建议bufferSize配置,减少频繁写操作。--&gt; &lt;MongoDb databaseName="log4j2" collectionName="$&#123;PROJECT_NAME&#125;_logs" server="127.0.0.1" port="27017"/&gt; &lt;!--此处需要一个能获取MongoDBClient或者DB的类，并指定获取的方法名 &lt;MongoDb databaseName="log4j2" collectionName="$&#123;PROJECT_NAME&#125;_logs" factoryClassName="com.fanfq.plugin.log4j2.MongoLog4jAppender" factoryMethodName="getMongoClient"/&gt; --&gt; &lt;/NoSql&gt; &lt;!-- 自定义日志级别 --&gt; &lt;RollingFile name="DIAG_ROLLING_FILE" fileName="$&#123;LOG_PATH&#125;/$&#123;PROJECT_NAME&#125;_diag.log" filePattern="$&#123;LOG_PATH&#125;/$$&#123;date:yyyy-MM&#125;/$&#123;PROJECT_NAME&#125;_diag_%d&#123;yyyy-MM-dd&#125;-%i.log.gz"&gt; &lt;ThresholdFilter level="DIAG" onMatch="ACCEPT" onMismatch="DENY" /&gt; &lt;PatternLayout pattern="[$&#123;PROJECT_NAME&#125;][%-d&#123;yyyy-MM-dd HH:mm:ss:sss&#125;][%p] %C.%M(%L) | %m%n" /&gt; &lt;Policies&gt; &lt;SizeBasedTriggeringPolicy size="99 MB"/&gt; &lt;TimeBasedTriggeringPolicy interval="1" modulate="true"/&gt; &lt;/Policies&gt; &lt;DefaultRolloverStrategy max="100" /&gt; &lt;/RollingFile&gt; &lt;RollingFile name="NOTICE_ROLLING_FILE" fileName="$&#123;LOG_PATH&#125;/$&#123;PROJECT_NAME&#125;_notice.log" filePattern="$&#123;LOG_PATH&#125;/$$&#123;date:yyyy-MM&#125;/$&#123;PROJECT_NAME&#125;_notice_%d&#123;yyyy-MM-dd&#125;-%i.log.gz"&gt; &lt;ThresholdFilter level="NOTICE" onMatch="ACCEPT" onMismatch="DENY" /&gt; &lt;PatternLayout pattern="[$&#123;PROJECT_NAME&#125;][%-d&#123;yyyy-MM-dd HH:mm:ss:sss&#125;][%p] %C.%M(%L) | %m%n" /&gt; &lt;Policies&gt; &lt;SizeBasedTriggeringPolicy size="99 MB"/&gt; &lt;TimeBasedTriggeringPolicy interval="1" modulate="true"/&gt; &lt;/Policies&gt; &lt;DefaultRolloverStrategy max="100" /&gt; &lt;/RollingFile&gt; &lt;/appenders&gt; &lt;loggers&gt; &lt;!-- log持久化 --&gt; &lt;Logger name="mongologger" level="info"&gt; &lt;appender-ref ref="mongoAppender"/&gt; &lt;/Logger&gt; &lt;root level="$&#123;LEVEL&#125;"&gt; &lt;appender-ref ref="CONSOLE" /&gt; &lt;appender-ref ref="INFO_ROLLING_FILE" /&gt; &lt;appender-ref ref="DEBUG_ROLLING_FILE"/&gt; &lt;appender-ref ref="ERROR_ROLLING_FILE" /&gt; &lt;/root&gt; &lt;/loggers&gt;&lt;/configuration&gt; Log4j2Test.java1234567891011121314151617181920212223242526272829303132333435363738import org.apache.logging.log4j.Level;import org.apache.logging.log4j.LogManager;import org.apache.logging.log4j.Logger;import org.junit.Test;public class Log4j2Test &#123; public static final Logger logger = LogManager.getLogger(Testing.class); public static final Logger mongologger = LogManager.getLogger(&quot;mongologger&quot;); @Test public void logger() &#123; logger.debug(&quot;debug1122999000&quot;); logger.info(&quot;info&quot;); logger.warn(&quot;warn&quot;); logger.error(&quot;error&quot;); &#125; @Test public void mongologger() &#123; //持久化日志到mongodb mongologger.debug(&quot;mongologger-debug1122999000&quot;); mongologger.info(&quot;mongologger-info&quot;); mongologger.warn(&quot;mongologger-warn&quot;); mongologger.error(&quot;mongologger-error&quot;); &#125; @Test public void customlogger() &#123; //自定义日志级别 Level diag = Level.getLevel(&quot;DIAG&quot;); Level notice = Level.getLevel(&quot;NOTICE&quot;); logger.log(diag,&quot;a diagnostic message&quot;); logger.log(notice,&quot;a notice message&quot;); &#125;&#125;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>log4j2</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo快速入门]]></title>
    <url>%2Fblog%2FHexo%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html</url>
    <content type="text"><![CDATA[本站采用 hexo 引擎 常用命令建站123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 目录结构12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 新建文章1$ hexo new [layout] &lt;title&gt; 生成静态文件1$ hexo g 本地预览1$ hexo server package.json 常用插件12345678910111213141516171819202122&#123; &quot;name&quot;: &quot;hexo-site&quot;, &quot;version&quot;: &quot;0.0.0&quot;, &quot;private&quot;: true, &quot;hexo&quot;: &#123; &quot;version&quot;: &quot;3.8.0&quot; &#125;, &quot;dependencies&quot;: &#123; &quot;hexo&quot;: &quot;^3.7.0&quot;, &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;, &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;, &quot;hexo-generator-feed&quot;: &quot;^1.2.2&quot;, &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;, &quot;hexo-generator-searchdb&quot;: &quot;^1.0.8&quot;, &quot;hexo-generator-sitemap&quot;: &quot;^1.2.0&quot;, &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;, &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;, &quot;hexo-renderer-marked&quot;: &quot;^0.3.2&quot;, &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;, &quot;hexo-server&quot;: &quot;^0.3.1&quot; &#125;&#125; 文章模板1234567---title: Hexo快速入门date: 2015-11-08 10:26:44tags: [blog,hexo]categories: blogurlname: blog/Hexo快速入门--- _config.yml12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: Fred&apos;s Blogsubtitle: Quick notesdescription: 他是一只安静的猴子keywords: 程序员,技术宅,软件开发,开源软件,IT,IT男author: Fred Fanlanguage: zh-CNtimezone: Asia/Shanghai# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: https://blog.fanfq.comroot: /#permalink: :year/:month/:day/:title/permalink: :urlname.htmlpermalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace: # Home page setting# path: Root path for your blogs index page. (default = &apos;&apos;)# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: &apos;&apos; per_page: 10 order_by: -date # Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: # Set rss to false to disable feed link.# Leave rss as empty to use site&apos;s feed link.# Set rss to specific value if you have burned your feed already.rss: /atom.xmlsearch: path: search.xml field: post format: html limit: 10000]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo Next v6 模板自定义配置]]></title>
    <url>%2Fblog%2FHexo_Next_v6_%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE.html</url>
    <content type="text"><![CDATA[本站采用 NexT6.Pisces 模板 _config.yml12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697989910010110210310410510610710810911011111211311411511611711811912012112212312412512612712812913013113213313413513613713813914014114214314414514614714814915015115215315415515615715815916016116216316416516616716816917017117217317417517617717817918018118218318418518618718818919019119219319419519619719819920020120220320420520620720820921021121221321421521621721821922022122222322422522622722822923023123223323423523623723823924024124224324424524624724824925025125225325425525625725825926026126226326426526626726826927027127227327427527627727827928028128228328428528628728828929029129229329429529629729829930030130230330430530630730830931031131231331431531631731831932032132232332432532632732832933033133233333433533633733833934034134234334434534634734834935035135235335435535635735835936036136236336436536636736836937037137237337437537637737837938038138238338438538638738838939039139239339439539639739839940040140240340440540640740840941041141241341441541641741841942042142242342442542642742842943043143243343443543643743843944044144244344444544644744844945045145245345445545645745845946046146246346446546646746846947047147247347447547647747847948048148248348448548648748848949049149249349449549649749849950050150250350450550650750850951051151251351451551651751851952052152252352452552652752852953053153253353453553653753853954054154254354454554654754854955055155255355455555655755855956056156256356456556656756856957057157257357457557657757857958058158258358458558658758858959059159259359459559659759859960060160260360460560660760860961061161261361461561661761861962062162262362462562662762862963063163263363463563663763863964064164264364464564664764864965065165265365465565665765865966066166266366466566666766866967067167267367467567667767867968068168268368468568668768868969069169269369469569669769869970070170270370470570670770870971071171271371471571671771871972072172272372472572672772872973073173273373473573673773873974074174274374474574674774874975075175275375475575675775875976076176276376476576676776876977077177277377477577677777877978078178278378478578678778878979079179279379479579679779879980080180280380480580680780880981081181281381481581681781881982082182282382482582682782882983083183283383483583683783883984084184284384484584684784884985085185285385485585685785885986086186286386486586686786886987087187287387487587687787887988088188288388488588688788888989089189289389489589689789889990090190290390490590690790890991091191291391491591691791891992092192292392492592692792892993093193293393493593693793893994094194294394494594694794894995095195295395495595695795895996096196296396496596696796896997097197297397497597697797897998098198298398498598698798898999099199299399499599699799899910001001100210031004100510061007100810091010101110121013101410151016101710181019102010211022# ---------------------------------------------------------------# Theme Core Configuration Settings# ---------------------------------------------------------------# If false, merge configs from `_data/next.yml` into default configuration (rewrite).# If true, will fully override default configuration by options from `_data/next.yml` (override). Only for NexT settings.# And if true, all config from default NexT `_config.yml` must be copied into `next.yml`. Use if you know what you are doing.# Useful if you want to comment some options from NexT `_config.yml` by `next.yml` without editing default config.override: false# Allow to cache content generation. Introduced in NexT v6.0.0.cache: enable: true# Redefine custom file paths. Introduced in NexT v6.0.2.# If commented, will be used default custom file paths.# For example, you want to put your custom styles file# outside theme directory in root `source/_data`, set# `styles: source/_data/styles.styl`#custom_file_path: # Default paths: layout/_custom/* #head: source/_data/head.swig #header: source/_data/header.swig #sidebar: source/_data/sidebar.swig # Default path: source/css/_variables/custom.styl #variables: source/_data/variables.styl # Default path: source/css/_mixins/custom.styl #mixins: source/_data/mixins.styl # Default path: source/css/_custom/custom.styl #styles: source/_data/styles.styl# ---------------------------------------------------------------# Site Information Settings# ---------------------------------------------------------------# To get or check favicons visit: https://realfavicongenerator.net# Put your favicons into `hexo-site/source/` (recommend) or `hexo-site/themes/next/source/images/` directory.# Default NexT favicons placed in `hexo-site/themes/next/source/images/` directory.# And if you want to place your icons in `hexo-site/source/` root directory, you must remove `/images` prefix from pathes.# For example, you put your favicons into `hexo-site/source/images` directory.# Then need to rename &amp; redefine they on any other names, otherwise icons from Next will rewrite your custom icons in Hexo.favicon: #small: /images/favicon-16x16-next.png medium: /images/favicon.ico #apple_touch_icon: /images/apple-touch-icon-next.png #safari_pinned_tab: /images/logo.svg #android_manifest: /images/manifest.json #ms_browserconfig: /images/browserconfig.xml# Set rss to false to disable feed link.# Leave rss as empty to use site&apos;s feed link, and install hexo-generator-feed: `npm install hexo-generator-feed --save`.# Set rss to specific value if you have burned your feed already.rss:footer: # Specify the date when the site was setup. # If not defined, current year will be used. since: 2012 # Icon between year and copyright info. icon: # Icon name in fontawesome, see: https://fontawesome.com/v4.7.0/icons # `heart` is recommended with animation in red (#ff0000). name: user # If you want to animate the icon, set it to true. animated: false # Change the color of icon, using Hex Code. color: &quot;#808080&quot; # If not defined, will be used `author` from Hexo main config. copyright: # ------------------------------------------------------------- powered: # Hexo link (Powered by Hexo). enable: true # Version info of Hexo after Hexo link (vX.X.X). version: false theme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: true # Version info of NexT after scheme info (vX.X.X). version: false # ------------------------------------------------------------- # Beian icp information for Chinese users. In China, every legal website should have a beian icp in website footer. # http://www.miitbeian.gov.cn/ 苏ICP备15056794号-1 beian: enable: true icp: 苏ICP备15056794号 # ------------------------------------------------------------- # Any custom text can be defined here. #custom_text: Hosted by &lt;a target=&quot;_blank&quot; rel=&quot;external nofollow&quot; href=&quot;https://pages.coding.me&quot;&gt;&lt;b&gt;Coding Pages&lt;/b&gt;&lt;/a&gt;# ---------------------------------------------------------------# SEO Settings# ---------------------------------------------------------------# Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.# See: https://support.google.com/webmasters/answer/139066# Tips: Before you open this tag, remember set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )canonical: true# Change headers hierarchy on site-subtitle (will be main site description) and on all post/pages titles for better SEO-optimization.seo: true# If true, will add site-subtitle to index page, added in main hexo config.# subtitle: Subtitleindex_with_subtitle: false# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).# Usage: `Key: /link/ || icon`# Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.# Value before `||` delimeter is the target link.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.menu: home: / || home #about: /about/ || user tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat# Enable/Disable menu icons / item badges.menu_settings: icons: true badges: false# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemes#scheme: Muse#scheme: Mistscheme: Pisces#scheme: Gemini# ---------------------------------------------------------------# Sidebar Settings# ---------------------------------------------------------------# Posts / Categories / Tags in sidebar.site_state: true# Social Links.# Usage: `Key: permalink || icon`# Key is the link label showing to end users.# Value before `||` delimeter is the target permalink.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.social: #GitHub: https://github.com/fanfq || github #E-Mail: mailto:yourname@gmail.com || envelope #Weibo: http://weibo.com/fanfq87 || weibo #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/fangqingfan || twitter #Facebook: https://www.facebook.com/fangqing.fan.7 || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://www.youtube.com/channel/UCLw0gVHqiBmOP9U6rSHehSA || youtube #Instagram: https://instagram.com/fredchannelv || instagram #Skype: skype:fangqing.fan?call|chat || skype #微信: skype:yourname?call|chat || wechatsocial_icons: enable: true icons_only: false transition: false # Dependencies: exturl: true in Tags Settings section below. # To encrypt links above use https://www.base64encode.org # Example encoded link: `GitHub: aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQ= || github` exturl: false# Follow me on GitHub banner in right-top corner.# Usage: `permalink || title`# Value before `||` delimeter is the target permalink.# Value after `||` delimeter is the title and aria-label name.#github_banner: https://github.com/yourname || Follow me on GitHub# Blog rollslinks_icon: linklinks_title: Linkslinks_layout: block#links_layout: inline#links: #Title: http://example.com/# Sidebar Avataravatar: # in theme directory(source/images): /images/avatar.gif # in site directory(source/uploads): /uploads/avatar.gif # You can also use other linking images. url: /images/A9808FDB264A02DD004D032FD091DAE2.jpg # If true, the avatar would be dispalyed in circle. rounded: false # The value of opacity should be choose from 0 to 1 to set the opacity of the avatar. opacity: 1 # If true, the avatar would be rotated with the cursor. rotated: false# Table Of Contents in the Sidebartoc: enable: true # Automatically add list number to toc. number: true # If true, all words will placed on next lines if header width longer then sidebar width. wrap: false# Creative Commons 4.0 International License.# http://creativecommons.org/# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero#creative_commons: by-nc-sa#creative_commons:sidebar: # Sidebar Position, available value: left | right (only for Pisces | Gemini). position: left #position: right # Manual define the sidebar width. # If commented, will be default for: # Muse | Mist: 320 # Pisces | Gemini: 240 #width: 300 # Sidebar Display, available value (only for Muse | Mist): # - post expand on posts automatically. Default. # - always expand for all pages automatically # - hide expand only when click on the sidebar toggle icon. # - remove Totally remove sidebar including sidebar toggle. display: post #display: always #display: hide #display: remove # Sidebar offset from top menubar in pixels (only for Pisces | Gemini). offset: 12 # Back to top in sidebar (only for Pisces | Gemini). b2t: false # Scroll percent label in b2t button. scrollpercent: true # Enable sidebar on narrow view (only for Muse | Mist). onmobile: false# ---------------------------------------------------------------# Post Settings# ---------------------------------------------------------------# Automatically scroll page to section which is under &lt;!-- more --&gt; mark.scroll_to_more: true# Automatically saving scroll position on each post/page in cookies.save_scroll: false# Automatically excerpt description in homepage as preamble text.excerpt_description: true# Automatically Excerpt. Not recommend.# Please use &lt;!-- more --&gt; in the post to control excerpt accurately.auto_excerpt: enable: false length: 500# Read more button# If true, the read more button would be displayed in excerpt sectionread_more_btn: true# Post meta display settingspost_meta: item_text: true created_at: true updated_at: enabled: false # If true, show updated date label only if `updated date` different from &apos;created date&apos; (post edited in another day than was created). # And if post will edited in same day as created, edited time will show in popup title under created time label. # If false show anyway, but if post edited in same day, show only edited time. another_day: true categories: true# Post wordcount display settings# Dependencies: https://github.com/theme-next/hexo-symbols-count-timesymbols_count_time: separated_meta: true item_text_post: true item_text_total: false awl: 4 wpm: 275codeblock: # Manual define the border radius in codeblock # Leave it empty for the default 1 border_radius: # Add copy button on codeblock copy_button: enable: true # Show text copy result show_result: true# Wechat Subscriberwechat_subscriber: enabled: false qcode: /images/qrcode.jpg description: 猴子交流群，微信添加好友后拉你进群。接头暗号&quot;猴子&quot;# Rewardreward_comment: 猴子交流群，添加好友后拉你进群。接头暗号&quot;猴子&quot;wechatpay: /images/qrcode.jpgalipay: /images/qq.jpg#bitcoin: /images/bitcoin.png# Related popular posts# Dependencies: https://github.com/tea3/hexo-related-popular-postsrelated_posts: enable: false title: # custom header, leave empty to use the default one display_in_home: false params: maxCount: 5 #PPMixingRate: 0.0 #isDate: false #isImage: false #isExcerpt: false# Declare license on postspost_copyright: enable: true license: &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&gt;CC BY-NC-SA 4.0&lt;/a&gt;# Post edit# Dependencies: https://github.com/hexojs/hexo-deployer-gitpost_edit: enable: false url: https://github.com/theme-next/theme-next.org/_posts/tree/master/ # Link for view source.# url: https://github.com/theme-next/theme-next.org/_posts/edit/master/ # Link for fork &amp; edit.# ---------------------------------------------------------------# Misc Theme Settings# ---------------------------------------------------------------# Reduce padding / margin indents on devices with narrow width.mobile_layout_economy: false# Android Chrome header panel color ($brand-bg / $headband-bg =&gt; $black-deep).android_chrome_color: &quot;#222&quot;# Custom Logo.# !!Only available for Default Scheme currently.# Options:# enabled: [true/false] - Replace with specific image# image: url-of-image - Images&apos;s urlcustom_logo: enabled: false image:# Code Highlight theme# Available values: normal | night | night eighties | night blue | night bright# https://github.com/chriskempson/tomorrow-themehighlight_theme: normal# Enable &quot;cheers&quot; for archive page.cheers_enabled: true# ---------------------------------------------------------------# Font Settings# - Find fonts on Google Fonts (https://www.google.com/fonts)# - All fonts set here will have the following styles:# light, light italic, normal, normal italic, bold, bold italic# - Be aware that setting too much fonts will cause site running slowly# - Introduce in 5.0.1# ---------------------------------------------------------------# CAUTION! Safari Version 10.1.2 bug: https://github.com/iissnan/hexo-theme-next/issues/1844# To avoid space between header and sidebar in Pisces / Gemini themes recommended to use Web Safe fonts for `global` (and `logo`):# Arial | Tahoma | Helvetica | Times New Roman | Courier New | Verdana | Georgia | Palatino | Garamond | Comic Sans MS | Trebuchet MS# ---------------------------------------------------------------font: enable: true # Uri of fonts host. E.g. //fonts.googleapis.com (Default). host: # Font options: # `external: true` will load this font family from `host` above. # `family: Times New Roman`. Without any quotes. # `size: xx`. Use `px` as unit. # Global font settings used for all elements in &lt;body&gt;. global: external: true family: Monda size: 14 # Font settings for Headlines (H1, H2, H3, H4, H5, H6). # Fallback to `global` font settings. headings: external: true family: size: H1 # Font settings for posts. # Fallback to `global` font settings. posts: external: true family: # Font settings for Logo. # Fallback to `global` font settings. logo: external: true family: Lobster Two size: 36 # Font settings for &lt;code&gt; and code blocks. codes: external: true family: PT Mono size: 9# ---------------------------------------------------------------# Third Party Services Settings# ---------------------------------------------------------------# Math Equations Render Supportmath: enable: false # Default(true) will load mathjax/katex script on demand # That is it only render those page who has &apos;mathjax: true&apos; in Front Matter. # If you set it to false, it will load mathjax/katex srcipt EVERY PAGE. per_page: true engine: mathjax #engine: katex # hexo-rendering-pandoc (or hexo-renderer-kramed) needed to full MathJax support. mathjax: # Use 2.7.1 as default, jsdelivr as default CDN, works everywhere even in China cdn: //cdn.jsdelivr.net/npm/mathjax@2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML # For newMathJax CDN (cdnjs.cloudflare.com) with fallback to oldMathJax (cdn.mathjax.org). #cdn: //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML # For direct link to MathJax.js with CloudFlare CDN (cdnjs.cloudflare.com). #cdn: //cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML # hexo-renderer-markdown-it-plus (or hexo-renderer-markdown-it with markdown-it-katex plugin) # needed to full Katex support. katex: # Use 0.7.1 as default, jsdelivr as default CDN, works everywhere even in China cdn: //cdn.jsdelivr.net/npm/katex@0.7.1/dist/katex.min.css # CDNJS, provided by cloudflare, maybe the best CDN, but not works in China #cdn: //cdnjs.cloudflare.com/ajax/libs/KaTeX/0.7.1/katex.min.css# Han Support# Dependencies: https://github.com/theme-next/theme-next-hanhan: false# Pangu Support# Dependencies: https://github.com/theme-next/theme-next-pangu# For more information: https://github.com/vinta/pangu.jspangu: false# Swiftype Search API Key#swiftype_key: # Baidu Analytics ID blog.fanfq.combaidu_analytics: 19da5bbef4829ba1366cde88409a7e0e# Growingio Analytics ID# Copyright 2015-2018 GrowingIO, Inc. More info available at http://www.growingio.com#growingio_analytics: #your projectId# Disqusdisqus: enable: false shortname: count: true lazyload: false# changyanchangyan: enable: false appid: appkey:# Valine.# You can get your appid and appkey from https://leancloud.cn# more info please open https://valine.js.orgvaline: enable: false # When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version. appid: # your leancloud application appid appkey: # your leancloud application appkey notify: false # mail notifier , https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: Just go go # comment box placeholder avatar: mm # gravatar style guest_info: nick,mail,link # custom comment header pageSize: 10 # pagination size visitor: false # leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors&apos; for counter compatibility. Article reading statistic https://valine.js.org/visitor.html# Support for LiveRe comments system.# You can get your uid from https://livere.com/insight/myCode (General web site)#livere_uid: your uid# Gitment# Introduction: https://imsun.net/posts/gitment-introduction/gitment: enable: false mint: true # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway count: true # Show comments count in post meta area lazy: false # Comments lazy loading with a button cleanly: false # Hide &apos;Powered by ...&apos; on footer, and more language: # Force language, or auto switch by theme github_user: # MUST HAVE, Your Github Username github_repo: # MUST HAVE, The name of the repo you use to store Gitment comments client_id: # MUST HAVE, Github client id for the Gitment client_secret: # EITHER this or proxy_gateway, Github access secret token for the Gitment proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled# Baidu Share# Available value:# button | slide# Warning: Baidu Share does not support https.#baidushare:# type: button# addthis Share, see: https://www.addthis.com/#add_this_id:# NeedMoreShare2# Dependencies: https://github.com/theme-next/theme-next-needmoreshare2# See: https://github.com/revir/need-more-share2# Also see: https://github.com/DzmVasileusky/needShareButton# iconStyle: default | box# boxForm: horizontal | vertical# position: top / middle / bottom + Left / Center / Right# networks: Weibo,Wechat,Douban,QQZone,Twitter,Linkedin,Mailto,Reddit,# Delicious,StumbleUpon,Pinterest,Facebook,GooglePlus,Slashdot,# Technorati,Posterous,Tumblr,GoogleBookmarks,Newsvine,# Evernote,Friendfeed,Vkontakte,Odnoklassniki,Mailruneedmoreshare2: enable: false postbottom: enable: false options: iconStyle: box boxForm: horizontal position: bottomCenter networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook float: enable: false options: iconStyle: box boxForm: horizontal position: middleRight networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook# Google Webmaster tools verification setting# See: https://www.google.com/webmasters/# google_site_verification: google584834cfca4925ee# Google Analyticsgoogle_analytics: UA-128889454-1# Bing Webmaster tools verification setting# See: https://www.bing.com/webmaster/#bing_site_verification:# Yandex Webmaster tools verification setting# See: https://webmaster.yandex.ru/#yandex_site_verification:# Baidu Webmaster tools verification setting# See: https://ziyuan.baidu.com/site/#baidu_site_verification:# CNZZ count#cnzz_siteid:# Application Insights# See https://azure.microsoft.com/en-us/services/application-insights/# application_insights:# Post widgets &amp; FB/VK comments settings.# ---------------------------------------------------------------# Facebook SDK Support.# https://github.com/iissnan/hexo-theme-next/pull/410facebook_sdk: enable: false app_id: #&lt;app_id&gt; fb_admin: #&lt;user_id&gt; like_button: #true webmaster: #true# Facebook comments plugin# This plugin depends on Facebook SDK.# If facebook_sdk.enable is false, Facebook comments plugin is unavailable.facebook_comments_plugin: enable: false num_of_posts: 10 # min posts num is 1 width: 100% # default width is 550px scheme: light # default scheme is light (light or dark)# VKontakte API Support.# To get your AppID visit https://vk.com/editapp?act=createvkontakte_api: enable: false app_id: #&lt;app_id&gt; like: true comments: true num_of_posts: 10# Star rating support to each article.# To get your ID visit https://widgetpack.comrating: enable: false id: #&lt;app_id&gt; color: fc6423# ---------------------------------------------------------------# Show number of visitors to each article.# You can visit https://leancloud.cn get AppID and AppKey.leancloud_visitors: enable: false app_id: #&lt;app_id&gt; app_key: #&lt;app_key&gt; # Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security # If you don&apos;t care about security in lc counter and just want to use it directly # (without hexo-leancloud-counter-security plugin), set the `security` to `false`. security: true betterPerformance: false# Another tool to show number of visitors to each article.# visit https://console.firebase.google.com/u/0/ to get apiKey and projectId# visit https://firebase.google.com/docs/firestore/ to get more information about firestorefirestore: enable: false collection: articles #required, a string collection name to access firestore database apiKey: #required projectId: #required bluebird: false #enable this if you want to include bluebird 3.5.1(core version) Promise polyfill# Show Views/Visitors of the website/page with busuanzi.# Get more information on http://ibruce.info/2015/04/04/busuanzi/busuanzi_count: enable: false total_visitors: true total_visitors_icon: user total_views: true total_views_icon: eye post_views: true post_views_icon: eye# Tencent analytics ID# tencent_analytics:# Tencent MTA ID# tencent_mta:# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEObaidu_push: false# Google Calendar# Share your recent schedule to others via calendar page## API Documentation:# https://developers.google.com/google-apps/calendar/v3/reference/events/list# Enabled APIs and services# api_key: https://console.developers.google.com/# Create &amp; manage a public Google calendar: https://support.google.com/calendar/answer/37083?hl=encalendar: enable: false calendar_id: &lt;required&gt; # Your Google account E-Mail api_key: &lt;required&gt; orderBy: startTime offsetMax: 24 # Time Range offsetMin: 4 # Time Range timeZone: showDeleted: false singleEvents: true maxResults: 250# Algolia Search# See: https://github.com/theme-next/hexo-theme-next/blob/master/docs/ALGOLIA-SEARCH.md# Dependencies: https://github.com/theme-next/theme-next-algolia-instant-searchalgolia_search: enable: false hits: per_page: 10 labels: input_placeholder: Search for Posts hits_empty: &quot;We didn&apos;t find any results for the search: $&#123;query&#125;&quot; hits_stats: &quot;$&#123;hits&#125; results found in $&#123;time&#125; ms&quot;# Local search# Dependencies: https://github.com/theme-next/hexo-generator-searchdblocal_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 # unescape html strings to the readable one unescape: false# Bookmark Support# Dependencies: https://github.com/theme-next/theme-next-bookmarkbookmark: enable: false # if auto # - save the reading position when closing the page # - or clicking the bookmark-icon # if manual, only save it by clicking the bookmark-icon save: auto# ---------------------------------------------------------------# Tags Settings# ---------------------------------------------------------------# External URL with BASE64 encrypt &amp; decrypt.# Usage: &#123;% exturl text url &quot;title&quot; %&#125;# Alias: &#123;% extlink text url &quot;title&quot; %&#125;exturl: false# Note tag (bs-callout).note: # Note tag style values: # - simple bs-callout old alert style. Default. # - modern bs-callout new (v2-v3) alert style. # - flat flat callout style with background, like on Mozilla or StackOverflow. # - disabled disable all CSS styles import of note tag. style: simple icons: false border_radius: 3 # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6). # Offset also applied to label tag variables. This option can work with disabled note tag. light_bg_offset: 0# Label tag.label: true# Tabs tag.tabs: enable: true transition: tabs: false labels: true border_radius: 0# Reading progress bar# Dependencies: https://github.com/theme-next/theme-next-reading-progressreading_progress: enable: false color: &quot;#37c6c0&quot; height: 2px#! ---------------------------------------------------------------#! DO NOT EDIT THE FOLLOWING SETTINGS#! UNLESS YOU KNOW WHAT YOU ARE DOING#! ---------------------------------------------------------------# Use velocity to animate everything.motion: enable: true async: false transition: # Transition variants: # fadeIn | fadeOut | flipXIn | flipXOut | flipYIn | flipYOut | flipBounceXIn | flipBounceXOut | flipBounceYIn | flipBounceYOut # swoopIn | swoopOut | whirlIn | whirlOut | shrinkIn | shrinkOut | expandIn | expandOut # bounceIn | bounceOut | bounceUpIn | bounceUpOut | bounceDownIn | bounceDownOut | bounceLeftIn | bounceLeftOut | bounceRightIn | bounceRightOut # slideUpIn | slideUpOut | slideDownIn | slideDownOut | slideLeftIn | slideLeftOut | slideRightIn | slideRightOut # slideUpBigIn | slideUpBigOut | slideDownBigIn | slideDownBigOut | slideLeftBigIn | slideLeftBigOut | slideRightBigIn | slideRightBigOut # perspectiveUpIn | perspectiveUpOut | perspectiveDownIn | perspectiveDownOut | perspectiveLeftIn | perspectiveLeftOut | perspectiveRightIn | perspectiveRightOut post_block: fadeIn post_header: slideDownIn post_body: slideDownIn coll_header: slideLeftIn # Only for Pisces | Gemini. sidebar: slideUpIn# Fancybox. There is support for old version 2 and new version 3.# Please, choose only any one variant, do not need to install both.# For install 2.x: https://github.com/theme-next/theme-next-fancybox# For install 3.x: https://github.com/theme-next/theme-next-fancybox3fancybox: true# Added switch option for separated repo in 6.0.0.# Dependencies: https://github.com/theme-next/theme-next-fastclickfastclick: false# Added switch option for separated repo in 6.0.0.# Dependencies: https://github.com/theme-next/theme-next-jquery-lazyloadlazyload: false# Progress bar in the top during page loading.# Dependencies: https://github.com/theme-next/theme-next-pacepace: false# Themes list:#pace-theme-big-counter#pace-theme-bounce#pace-theme-barber-shop#pace-theme-center-atom#pace-theme-center-circle#pace-theme-center-radar#pace-theme-center-simple#pace-theme-corner-indicator#pace-theme-fill-left#pace-theme-flash#pace-theme-loading-bar#pace-theme-mac-osx#pace-theme-minimal# For example# pace_theme: pace-theme-center-simplepace_theme: pace-theme-minimal# Canvas-nest# Dependencies: https://github.com/theme-next/theme-next-canvas-nestcanvas_nest: enable: false onmobile: true # display on mobile or not color: &apos;0,0,255&apos; # RGB values, use &apos;,&apos; to separate opacity: 0.5 # the opacity of line: 0~1 zIndex: -1 # z-index property of the background count: 99 # the number of lines# JavaScript 3D library.# Dependencies: https://github.com/theme-next/theme-next-three# three_wavesthree_waves: false# canvas_linescanvas_lines: false# canvas_spherecanvas_sphere: false# Only fit scheme Pisces# Dependencies: https://github.com/theme-next/theme-next-canvas-ribbon# Canvas-ribbon# size: The width of the ribbon.# alpha: The transparency of the ribbon.# zIndex: The display level of the ribbon.canvas_ribbon: enable: false size: 300 alpha: 0.6 zIndex: -1# Script Vendors.# Set a CDN address for the vendor you want to customize.# For example# jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js# Be aware that you should use the same version as internal ones to avoid potential problems.# Please use the https protocol of CDN files when you enable https on your site.vendors: # Internal path prefix. Please do not edit it. _internal: lib # Internal version: 2.1.3 # Example: # jquery: //cdn.jsdelivr.net/npm/jquery@2.1.3/dist/jquery.min.js jquery: //cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js #jquery: # Internal version: 2.1.5 # See: http://fancyapps.com/fancybox/ # Example: # fancybox: //cdn.jsdelivr.net/npm/fancybox@3.0.0/dist/js/jquery.fancybox.pack.js # fancybox_css: //cdn.jsdelivr.net/npm/fancybox@3.0.0/dist/css/jquery.fancybox.min.css # fancybox: //cdnjs.cloudflare.com/ajax/libs/fancybox/3.2.5/jquery.fancybox.min.js # fancybox_css: //cdnjs.cloudflare.com/ajax/libs/fancybox/3.2.5/jquery.fancybox.min.css #fancybox: #fancybox_css: fancybox: //cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.js fancybox_css: //cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.css # Internal version: 1.0.6 # See: https://github.com/ftlabs/fastclick # Example: # fastclick: //cdn.jsdelivr.net/npm/fastclick@1.0.6/lib/fastclick.min.js fastclick: # Internal version: 1.9.7 # See: https://github.com/tuupola/jquery_lazyload # lazyload: //cdn.jsdelivr.net/npm/jquery_lazyload@1.9.3/jquery.lazyload.min.js lazyload: # Internal version: 1.2.1 # See: http://VelocityJS.org # Example: # velocity: https://cdn.jsdelivr.net/npm/velocity-animate@1.2.1/velocity.min.js # velocity: https://cdnjs.cloudflare.com/ajax/libs/velocity/1.2.1/velocity.min.js velocity: # Internal version: 1.2.1 # See: http://VelocityJS.org # velocity_ui: //cdn.jsdelivr.net/npm/velocity-animate@1.2.1/velocity.ui.min.js # velocity_ui: //cdnjs.cloudflare.com/ajax/libs/velocity/1.2.1/velocity.ui.min.js velocity_ui: # Internal version: 0.7.9 # See: https://faisalman.github.io/ua-parser-js/ # Example: # ua_parser: //cdn.jsdelivr.net/npm/ua-parser-js@0.7.17/src/ua-parser.min.js # ua_parser: //cdnjs.cloudflare.com/ajax/libs/UAParser.js/0.7.9/ua-parser.min.js ua_parser: # Internal version: 4.6.2 # See: http://fontawesome.io/ # Example: fontawesome: //cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css # fontawesome: //cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css #fontawesome: # Internal version: 1 # https://www.algolia.com # Example: # algolia_instant_js: //cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.js # algolia_instant_css: //cdn.jsdelivr.net/npm/instantsearch.js@2.4.1/dist/instantsearch.min.css algolia_instant_js: algolia_instant_css: # Internal version: 1.0.2 # See: https://github.com/HubSpot/pace # Example: # pace: //cdn.jsdelivr.net/npm/pace-js@1.0.2/pace.min.js # pace: //cdnjs.cloudflare.com/ajax/libs/pace/1.0.2/pace.min.js # pace_css: //cdn.jsdelivr.net/npm/pace-js@1.0.2/themes/blue/pace-theme-minimal.css # pace_css: //cdnjs.cloudflare.com/ajax/libs/pace/1.0.2/themes/blue/pace-theme-minimal.min.css pace: pace_css: # Internal version: 1.0.0 # See: https://github.com/theme-next/theme-next-canvas-nest canvas_nest: #//cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-nest@1.0.0/canvas-nest.min.js canvas_nest_nomobile: #//cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-nest@1.0.0/canvas-nest-nomobile.min.js # Internal version: 1.0.0 # See: https://github.com/theme-next/theme-next-three # Example: # three: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1.0.0/three.min.js # three_waves: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1.0.0/three-waves.min.js # canvas_lines: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1.0.0/canvas_lines.min.js # canvas_sphere: //cdn.jsdelivr.net/gh/theme-next/theme-next-three@1.0.0/canvas_sphere.min.js three: three_waves: canvas_lines: canvas_sphere: # Internal version: 1.0.0 # https://github.com/zproo/canvas-ribbon canvas_ribbon: # Internal version: 3.3.0 # https://github.com/ethantw/Han Han: # Internal version: 3.3.0 # https://github.com/vinta/pangu.js # Example: # pangu: //cdn.jsdelivr.net/npm/pangu@3.3.0/dist/browser/pangu.min.js # pangu: //cdnjs.cloudflare.com/ajax/libs/pangu/3.3.0/pangu.min.js pangu: # needMoreShare2 # https://github.com/revir/need-more-share2 # Example: # needmoreshare2_js: //cdn.jsdelivr.net/gh/theme-next/theme-next-needmoreshare2@1.0.0/needsharebutton.min.js # needmoreshare2_css: //cdn.jsdelivr.net/gh/theme-next/theme-next-needmoreshare2@1.0.0/needsharebutton.min.css needmoreshare2_js: needmoreshare2_css: # bookmark # Internal version: 1.0.0 # https://github.com/theme-next/theme-next-bookmark # Example: # bookmark: //cdn.jsdelivr.net/gh/theme-next/theme-next-bookmark@1.0.0/bookmark.min.js bookmark: # reading_progress # Internal version: 1.0 # https://github.com/theme-next/theme-next-reading-progress # Example: # reading_progress: //cdn.jsdelivr.net/gh/theme-next/theme-next-reading-progress@1.1/reading_progress.min.js reading_progress: # valine comment # Example: https://cdn.jsdelivr.net/npm/valine@1.1.8/dist/Valine.min.js valine:# Assetscss: cssjs: jsimages: images#插件配置plugins: hexo-generator-feed]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown常用标签]]></title>
    <url>%2Fblog%2FMarkdown%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE.html</url>
    <content type="text"><![CDATA[文本1`文本` 文本 12345Lorem &#123;% label @ipsum %&#125; &#123;% label primary@dolor sit %&#125; amet, consectetur &#123;% label success@adipiscing elit, %&#125; sed &#123;% label info@do eiusmod %&#125; tempor incididunt ut labore et dolore magna aliqua.Ut enim *&#123;% label warning @ad %&#125;* minim veniam, quis **&#123;% label danger @nostrud %&#125;** exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.Duis aute irure dolor in reprehenderit in voluptate ~~&#123;% label default @velit %&#125;~~ &lt;mark&gt;esse&lt;/mark&gt; cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. 链接1More info: [Writing](https://hexo.io/docs/writing.html) More info: Writing 表格1234| 一个普通标题 | 一个普通标题 | 一个普通标题 || ------ | ------ | ------ || 短文本 | 中等文本 | 稍微长一点的文本 || 稍微长一点的文本 | 短文本 | 中等文本 | 一个普通标题 一个普通标题 一个普通标题 短文本 中等文本 稍微长一点的文本 稍微长一点的文本 短文本 中等文本 目录树12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 代码123``` javapublic static void main(String[] args)&#123;&#125; 12public static void main(String[] args)&#123;&#125; 图片1&#123;% img /uploads/brand-new.png %&#125; 1&#123;% fi /uploads/stanlee.jpeg, R.I.P Stan Lee 1922-2018, R.I.P Stan Lee 1922-2018 %&#125; 音频hexo-tag-aplayer 1npm install --save hexo-tag-aplayer 1234567891011121314&#123;% aplayerlist %&#125;&#123; &quot;autoplay&quot;: false, &quot;mutex&quot;: true, &quot;music&quot;: [ &#123; &quot;title&quot;: &quot;에필로그 (Epilogue)&quot;, &quot;author&quot;: &quot;이동준&quot;, &quot;url&quot;: &quot;https://molier-1256056152.cos.ap-guangzhou.myqcloud.com/%E1%84%8B%E1%85%A6%E1%84%91%E1%85%B5%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3.mp3&quot;, &quot;pic&quot;: &quot;https://y.gtimg.cn/music/photo_new/T002R300x300M000000RmZHf3qhLUL.jpg&quot; &#125; ]&#125;&#123;% endaplayerlist %&#125; var options = {"narrow":false,"autoplay":false,"showlrc":0,"mutex":true,"music":[{"title":"에필로그 (Epilogue)","author":"이동준","url":"https://molier-1256056152.cos.ap-guangzhou.myqcloud.com/%E1%84%8B%E1%85%A6%E1%84%91%E1%85%B5%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3.mp3","pic":"https://y.gtimg.cn/music/photo_new/T002R300x300M000000RmZHf3qhLUL.jpg"}]}; options.element = document.getElementById("aplayer-fyWTdfcT"); var ap = new APlayer(options); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 视频hexo-tag-dplayer 1npm install hexo-tag-dplayer --save 1&#123;% dplayer &quot;url=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.mp4&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; %&#125; (function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","loop":true,"video":{"url":"https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 其他nexthexo]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
